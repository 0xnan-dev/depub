{"ast":null,"code":"import _defineProperty from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport base from \"./base\";\nimport components from \"./components\";\nimport * as tools from \"./tools\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: 'light',\n  accessibleColors: false\n};\n\nvar theme = _objectSpread(_objectSpread({}, base), {}, {\n  components: components,\n  config: config\n});\n\nexport { theme, tools as themeTools };\nexport { getColor } from \"./styled-system\";\nexport { StyledProps } from \"./types\";\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/theme/index.js"],"names":["config","useSystemColorMode","initialColorMode","accessibleColors","theme","components","tools"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,OAAA,IAAA;AACA,OAAA,UAAA;AACA,OAAO,KAAP,KAAA;AACA,IAAMA,MAAM,GAAG;AACbC,EAAAA,kBAAkB,EADL,KAAA;AAGbC,EAAAA,gBAAgB,EAHH,OAAA;AAIbC,EAAAA,gBAAgB,EAJlB;AAAe,CAAf;;AAMA,IAAMC,KAAK,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA;AACTC,EAAAA,UAAU,EADD,UAAA;AAETL,EAAAA,MAAM,EAFR;AAAW,CAAA,CAAX;;AAIA,SAAA,KAAA,EAAgBM,KAAK,IAArB,UAAA;AACA,SAAA,QAAA;AACA,SAAA,WAAA","sourcesContent":["import base from './base';\nimport components from './components';\nimport * as tools from './tools';\nconst config = {\n  useSystemColorMode: false,\n  // TODO: implement this\n  initialColorMode: 'light',\n  accessibleColors: false\n};\nconst theme = { ...base,\n  components,\n  config\n};\nexport { theme, tools as themeTools };\nexport { getColor } from './styled-system';\nexport { StyledProps } from './types';\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}