{"ast":null,"code":"import _slicedToArray from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport get from 'lodash.get';\nimport merge from 'lodash.merge';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNativeBase } from \"../useNativeBase\";\nimport { useColorMode } from \"../../core/color-mode\";\nimport { omitUndefined, extractInObject } from \"../../theme/tools\";\nimport { useContrastText } from \"../useContrastText\";\nimport { useBreakpointResolvedProps } from \"../useBreakpointResolvedProps\";\nimport { propsFlattener, compareSpecificity } from \"./propsFlattener\";\nimport { useResponsiveSSRProps } from \"../useResponsiveSSRProps\";\nimport React from 'react';\nimport { ResponsiveQueryContext } from \"../../utils/useResponsiveQuery/ResponsiveQueryProvider\";\nimport { useNativeBaseConfig } from \"../../core/NativeBaseContext\";\nvar SPREAD_PROP_SPECIFICITY_ORDER = ['p', 'padding', 'px', 'py', 'pt', 'pb', 'pl', 'pr', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'm', 'margin', 'mx', 'my', 'mt', 'mb', 'ml', 'mr', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nvar FINAL_SPREAD_PROPS = ['paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nvar MARGIN_MAP = {\n  mx: ['marginRight', 'marginLeft'],\n  my: ['marginTop', 'marginBottom'],\n  mt: ['marginTop'],\n  mb: ['marginBottom'],\n  mr: ['marginRight'],\n  ml: ['marginLeft']\n};\nMARGIN_MAP.margin = [].concat(_toConsumableArray(MARGIN_MAP.mx), _toConsumableArray(MARGIN_MAP.my));\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\nvar PADDING_MAP = {\n  px: ['paddingRight', 'paddingLeft'],\n  py: ['paddingTop', 'paddingBottom'],\n  pt: ['paddingTop'],\n  pb: ['paddingBottom'],\n  pr: ['paddingRight'],\n  pl: ['paddingLeft']\n};\nPADDING_MAP.padding = [].concat(_toConsumableArray(PADDING_MAP.px), _toConsumableArray(PADDING_MAP.py));\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\n\nvar SPREAD_PROP_SPECIFICITY_MAP = _objectSpread(_objectSpread({}, PADDING_MAP), MARGIN_MAP);\n\nfunction propsSpreader(incomingProps, incomingSpecifity) {\n  var flattenedDefaultProps = _objectSpread({}, incomingProps);\n\n  var specificity = {};\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach(function (prop) {\n    if (prop in flattenedDefaultProps) {\n      var val = incomingProps[prop] || flattenedDefaultProps[prop];\n\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach(function (newProp) {\n        if (compareSpecificity(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n  return merge({}, flattenedDefaultProps);\n}\n\nexport function usePropsResolution(component, incomingProps, state, config) {\n  _s();\n\n  var _config$componentThem;\n\n  var _useNativeBase = useNativeBase(),\n      theme = _useNativeBase.theme;\n\n  var componentTheme = (_config$componentThem = config === null || config === void 0 ? void 0 : config.componentTheme) !== null && _config$componentThem !== void 0 ? _config$componentThem : get(theme, \"components.\".concat(component), {});\n\n  if (true && incomingProps.debug) {\n    console.log(\"%c\".concat(component), 'background: #d97706; color: #111; font-weight: 700; padding: 2px 8px;');\n    console.log(\"%cusePropsResolution\", 'background: #4b5563; color: #d97706; font-weight: 700; padding: 2px 8px;');\n    console.log('%c incomingProps: ', 'color: #4ade80; font-weight: 700;', incomingProps);\n    console.log('%c state: ', 'color: #4ade80; font-weight: 700;', state);\n    console.log('%c componentTheme: ', 'color: #4ade80; font-weight: 700;', componentTheme);\n  }\n\n  var resolvedProps = usePropsResolutionWithComponentTheme(componentTheme, incomingProps, state, config);\n\n  if (true && incomingProps.debug) {\n    console.log('%c resolvedProps: ', 'color: #22d3ee; font-weight: 700;', resolvedProps);\n  }\n\n  return resolvedProps;\n}\n\n_s(usePropsResolution, \"yadbs+yKaedpMDUtamJzmyhIvJU=\", false, function () {\n  return [useNativeBase, usePropsResolutionWithComponentTheme];\n});\n\nexport var usePropsResolutionWithComponentTheme = function usePropsResolutionWithComponentTheme(componentTheme, incomingProps, state, config) {\n  _s2();\n\n  var _flattenProps$bg, _flattenProps$backgro, _flattenProps$bgColor, _flattenProps$backgro2, _ref, _flattenProps$bg2, _flattenProps, _flattenProps$_text, _flattenProps2, _flattenProps2$_text;\n\n  var modifiedPropsForSSR = useResponsiveSSRProps(incomingProps);\n\n  var _extractInObject = extractInObject(modifiedPropsForSSR, ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat((config === null || config === void 0 ? void 0 : config.ignoreProps) || [])),\n      _extractInObject2 = _slicedToArray(_extractInObject, 2),\n      ignoredProps = _extractInObject2[0],\n      cleanIncomingProps = _extractInObject2[1];\n\n  var responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  var disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n  var resolveResponsively = ['colorScheme', 'size', 'variant'].concat(_toConsumableArray((config === null || config === void 0 ? void 0 : config.resolveResponsively) || []));\n\n  var _useNativeBase2 = useNativeBase(),\n      theme = _useNativeBase2.theme;\n\n  var colorModeProps = useColorMode();\n  var incomingWithDefaultProps = merge({}, componentTheme.defaultProps || {}, cleanIncomingProps);\n\n  if (true && cleanIncomingProps.debug) {\n    console.log(\"%cFlattening incoming and Default\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n  }\n\n  var _propsFlattener = propsFlattener({\n    props: incomingWithDefaultProps,\n    platform: Platform.OS,\n    colormode: colorModeProps.colorMode,\n    state: state || {},\n    previouslyFlattenProps: {},\n    cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n  }, 2),\n      _propsFlattener2 = _slicedToArray(_propsFlattener, 2),\n      flattenProps = _propsFlattener2[0],\n      specificityMap = _propsFlattener2[1];\n\n  var responsiveProps = {};\n\n  if (disableCSSMediaQueries) {\n    resolveResponsively.map(function (propsName) {\n      if (flattenProps[propsName]) {\n        responsiveProps[propsName] = flattenProps[propsName];\n      }\n    });\n  }\n\n  if (resolveResponsively.includes('direction')) {\n    var propName = 'direction';\n\n    if (flattenProps[propName]) {\n      responsiveProps[propName] = flattenProps[propName];\n    }\n  }\n\n  var responsivelyResolvedProps = useBreakpointResolvedProps(responsiveProps);\n  flattenProps = _objectSpread(_objectSpread({}, flattenProps), responsivelyResolvedProps);\n  var componentBaseStyle = {},\n      flattenBaseStyle,\n      baseSpecificityMap;\n\n  if (componentTheme.baseStyle) {\n    componentBaseStyle = typeof componentTheme.baseStyle !== 'function' ? componentTheme.baseStyle : componentTheme.baseStyle(_objectSpread(_objectSpread({\n      theme: theme\n    }, flattenProps), colorModeProps));\n\n    if (true && cleanIncomingProps.debug) {\n      console.log(\"%cFlattening baseStyle\", 'background: #4b5563; color: #eee; font-weight: 700; padding: 2px 8px;');\n    }\n\n    var _propsFlattener3 = propsFlattener({\n      props: true && cleanIncomingProps.debug ? _objectSpread(_objectSpread({}, componentBaseStyle), {}, {\n        debug: true\n      }) : componentBaseStyle,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: specificityMap,\n      previouslyFlattenProps: flattenProps,\n      cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n    }, 1);\n\n    var _propsFlattener4 = _slicedToArray(_propsFlattener3, 2);\n\n    flattenBaseStyle = _propsFlattener4[0];\n    baseSpecificityMap = _propsFlattener4[1];\n  }\n\n  var variant = flattenProps.variant;\n  var componentVariantProps = {},\n      flattenVariantStyle,\n      variantSpecificityMap;\n\n  if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n    componentVariantProps = typeof componentTheme.variants[variant] !== 'function' ? componentTheme.variants[variant] : componentTheme.variants[variant](_objectSpread(_objectSpread({\n      theme: theme\n    }, flattenProps), colorModeProps));\n\n    if (true && cleanIncomingProps.debug) {\n      console.log(\"%cFlattening variantStyle\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n    }\n\n    var _propsFlattener5 = propsFlattener({\n      props: true && cleanIncomingProps.debug ? _objectSpread(_objectSpread({}, componentVariantProps), {}, {\n        debug: true\n      }) : componentVariantProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: baseSpecificityMap || specificityMap,\n      previouslyFlattenProps: flattenProps,\n      cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n    }, 1);\n\n    var _propsFlattener6 = _slicedToArray(_propsFlattener5, 2);\n\n    flattenVariantStyle = _propsFlattener6[0];\n    variantSpecificityMap = _propsFlattener6[1];\n    flattenProps.variant = undefined;\n  }\n\n  var size = flattenProps.size;\n  var componentSizeProps = {},\n      flattenSizeStyle,\n      sizeSpecificityMap;\n\n  if (size && componentTheme.sizes && componentTheme.sizes[size]) {\n    if (typeof componentTheme.sizes[size] === 'string' || typeof componentTheme.sizes[size] === 'number') {\n      flattenProps.size = componentTheme.sizes[size];\n    } else if (typeof componentTheme.sizes[size] === 'function') {\n      flattenProps.size = undefined;\n      componentSizeProps = componentTheme.sizes[size](_objectSpread(_objectSpread({\n        theme: theme\n      }, flattenProps), colorModeProps));\n    } else {\n      flattenProps.size = undefined;\n      componentSizeProps = componentTheme.sizes[size];\n    }\n\n    if (true && cleanIncomingProps.debug) {\n      console.log(\"%cFlattening sizeStyle\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n    }\n\n    var _propsFlattener7 = propsFlattener({\n      props: true && cleanIncomingProps.debug ? _objectSpread(_objectSpread({}, componentSizeProps), {}, {\n        debug: true\n      }) : componentSizeProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: variantSpecificityMap || baseSpecificityMap || specificityMap,\n      previouslyFlattenProps: flattenProps,\n      cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n    }, 1);\n\n    var _propsFlattener8 = _slicedToArray(_propsFlattener7, 2);\n\n    flattenSizeStyle = _propsFlattener8[0];\n    sizeSpecificityMap = _propsFlattener8[1];\n  }\n\n  var defaultStyles = merge({}, flattenBaseStyle, flattenVariantStyle, flattenSizeStyle);\n\n  for (var prop in defaultStyles) {\n    delete flattenProps[prop];\n  }\n\n  var defaultSpecificity = merge({}, specificityMap, baseSpecificityMap, variantSpecificityMap, sizeSpecificityMap);\n  flattenProps = propsSpreader(_objectSpread(_objectSpread({}, defaultStyles), flattenProps), defaultSpecificity);\n  var ignore = [];\n\n  if ((_flattenProps$bg = flattenProps.bg) !== null && _flattenProps$bg !== void 0 && _flattenProps$bg.linearGradient || (_flattenProps$backgro = flattenProps.background) !== null && _flattenProps$backgro !== void 0 && _flattenProps$backgro.linearGradient || (_flattenProps$bgColor = flattenProps.bgColor) !== null && _flattenProps$bgColor !== void 0 && _flattenProps$bgColor.linearGradient || (_flattenProps$backgro2 = flattenProps.backgroundColor) !== null && _flattenProps$backgro2 !== void 0 && _flattenProps$backgro2.linearGradient) {\n    var _flattenProps$backgro3, _flattenProps$bgColor2, _flattenProps$backgro4;\n\n    var bgProp = 'bg';\n\n    if ((_flattenProps$backgro3 = flattenProps.background) !== null && _flattenProps$backgro3 !== void 0 && _flattenProps$backgro3.linearGradient) {\n      bgProp = 'background';\n    } else if ((_flattenProps$bgColor2 = flattenProps.bgColor) !== null && _flattenProps$bgColor2 !== void 0 && _flattenProps$bgColor2.linearGradient) {\n      bgProp = 'bgColor';\n    } else if ((_flattenProps$backgro4 = flattenProps.backgroundColor) !== null && _flattenProps$backgro4 !== void 0 && _flattenProps$backgro4.linearGradient) {\n      bgProp = 'backgroundColor';\n    }\n\n    flattenProps[bgProp].linearGradient.colors = flattenProps[bgProp].linearGradient.colors.map(function (color) {\n      return get(theme.colors, color, color);\n    });\n    ignore = ['bg', 'background', 'backgroundColor', 'bgColor'];\n  }\n\n  var _extractInObject3 = extractInObject(flattenProps, ignore),\n      _extractInObject4 = _slicedToArray(_extractInObject3, 1),\n      gradientProps = _extractInObject4[0];\n\n  var disableContrastText = useNativeBaseConfig('NativeBaseConfigProvider').disableContrastText;\n  var bgColor = (_ref = (_flattenProps$bg2 = flattenProps.bg) !== null && _flattenProps$bg2 !== void 0 ? _flattenProps$bg2 : flattenProps.backgroundColor) !== null && _ref !== void 0 ? _ref : flattenProps.bgColor;\n  var contrastTextColor = useContrastText(bgColor, (_flattenProps = flattenProps) === null || _flattenProps === void 0 ? void 0 : (_flattenProps$_text = _flattenProps._text) === null || _flattenProps$_text === void 0 ? void 0 : _flattenProps$_text.color, disableCSSMediaQueries ? disableContrastText ? true : false : true);\n  flattenProps._text = contrastTextColor && ((_flattenProps2 = flattenProps) === null || _flattenProps2 === void 0 ? void 0 : (_flattenProps2$_text = _flattenProps2._text) === null || _flattenProps2$_text === void 0 ? void 0 : _flattenProps2$_text.color) === undefined ? _objectSpread({\n    color: contrastTextColor\n  }, flattenProps._text) : flattenProps._text;\n  var resolvedProps = omitUndefined(_objectSpread(_objectSpread(_objectSpread({}, flattenProps), ignoredProps), gradientProps));\n  return resolvedProps;\n};\n\n_s2(usePropsResolutionWithComponentTheme, \"ffl3tnxu5YkB2XNhaa8XKC3JgRs=\", false, function () {\n  return [useResponsiveSSRProps, useNativeBase, useColorMode, useBreakpointResolvedProps, useNativeBaseConfig, useContrastText];\n});\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/hooks/useThemeProps/usePropsResolution.js"],"names":["SPREAD_PROP_SPECIFICITY_ORDER","FINAL_SPREAD_PROPS","MARGIN_MAP","mx","my","mt","mb","mr","ml","PADDING_MAP","px","py","pt","pb","pr","pl","SPREAD_PROP_SPECIFICITY_MAP","flattenedDefaultProps","specificity","prop","val","incomingProps","incomingSpecifity","compareSpecificity","merge","usePropsResolution","theme","useNativeBase","componentTheme","_config$componentThem","config","get","console","resolvedProps","usePropsResolutionWithComponentTheme","modifiedPropsForSSR","useResponsiveSSRProps","ignoredProps","cleanIncomingProps","extractInObject","responsiveQueryContext","React","disableCSSMediaQueries","resolveResponsively","colorModeProps","useColorMode","incomingWithDefaultProps","flattenProps","specificityMap","propsFlattener","props","platform","Platform","colormode","state","previouslyFlattenProps","cascadePseudoProps","responsiveProps","propName","responsivelyResolvedProps","useBreakpointResolvedProps","componentBaseStyle","flattenBaseStyle","baseSpecificityMap","debug","currentSpecificityMap","variant","componentVariantProps","flattenVariantStyle","variantSpecificityMap","size","componentSizeProps","flattenSizeStyle","sizeSpecificityMap","defaultStyles","defaultSpecificity","propsSpreader","ignore","_flattenProps$bg","_flattenProps$backgro","_flattenProps$bgColor","_flattenProps$backgro2","bgProp","_flattenProps$backgro3","_flattenProps$bgColor2","_flattenProps$backgro4","gradientProps","disableContrastText","useNativeBaseConfig","bgColor","_ref","_flattenProps$bg2","contrastTextColor","useContrastText","_flattenProps","_flattenProps$_text","_flattenProps2","_flattenProps2$_text","color","omitUndefined"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport merge from 'lodash.merge';\nimport { Platform } from 'react-native';\nimport { useNativeBase } from '../useNativeBase';\nimport { useColorMode } from '../../core/color-mode';\nimport { omitUndefined, extractInObject } from '../../theme/tools';\nimport { useContrastText } from '../useContrastText';\nimport { useBreakpointResolvedProps } from '../useBreakpointResolvedProps';\nimport { propsFlattener, compareSpecificity } from './propsFlattener';\nimport { useResponsiveSSRProps } from '../useResponsiveSSRProps';\nimport React from 'react';\nimport { ResponsiveQueryContext } from '../../utils/useResponsiveQuery/ResponsiveQueryProvider';\nimport { useNativeBaseConfig } from '../../core/NativeBaseContext';\nconst SPREAD_PROP_SPECIFICITY_ORDER = ['p', 'padding', 'px', 'py', 'pt', 'pb', 'pl', 'pr', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'm', 'margin', 'mx', 'my', 'mt', 'mb', 'ml', 'mr', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nconst FINAL_SPREAD_PROPS = ['paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nconst MARGIN_MAP = {\n  mx: ['marginRight', 'marginLeft'],\n  my: ['marginTop', 'marginBottom'],\n  mt: ['marginTop'],\n  mb: ['marginBottom'],\n  mr: ['marginRight'],\n  ml: ['marginLeft']\n};\nMARGIN_MAP.margin = [...MARGIN_MAP.mx, ...MARGIN_MAP.my];\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\nconst PADDING_MAP = {\n  px: ['paddingRight', 'paddingLeft'],\n  py: ['paddingTop', 'paddingBottom'],\n  pt: ['paddingTop'],\n  pb: ['paddingBottom'],\n  pr: ['paddingRight'],\n  pl: ['paddingLeft']\n};\nPADDING_MAP.padding = [...PADDING_MAP.px, ...PADDING_MAP.py];\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\nconst SPREAD_PROP_SPECIFICITY_MAP = { ...PADDING_MAP,\n  ...MARGIN_MAP\n};\n\nfunction propsSpreader(incomingProps, incomingSpecifity) {\n  const flattenedDefaultProps = { ...incomingProps\n  };\n  const specificity = {};\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach(prop => {\n    if (prop in flattenedDefaultProps) {\n      const val = incomingProps[prop] || flattenedDefaultProps[prop];\n\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach(newProp => {\n        if (compareSpecificity(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n  return merge({}, flattenedDefaultProps);\n}\n/**\n * @summary Combines provided porps with component's theme props and resloves them.\n * @arg {string} component - Name of the component.\n * @arg {object} incomingProps - Props passed by the user.\n * @arg {object} state - dependent states.\n * @arg {object} config - configuration for resolution. Accepts key like ignoreProps, resolveResponsively.\n * @returns {object} Resolved and flattened props.\n */\n\n\nexport function usePropsResolution(component, incomingProps, state, config) {\n  var _config$componentThem;\n\n  const {\n    theme\n  } = useNativeBase();\n  const componentTheme = (_config$componentThem = config === null || config === void 0 ? void 0 : config.componentTheme) !== null && _config$componentThem !== void 0 ? _config$componentThem : get(theme, \"components.\".concat(component), {});\n\n  if (process.env.NODE_ENV === 'development' && incomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log(\"%c\".concat(component), 'background: #d97706; color: #111; font-weight: 700; padding: 2px 8px;');\n    /* eslint-disable-next-line */\n\n    console.log(\"%cusePropsResolution\", 'background: #4b5563; color: #d97706; font-weight: 700; padding: 2px 8px;');\n    /* eslint-disable-next-line */\n\n    console.log('%c incomingProps: ', 'color: #4ade80; font-weight: 700;', incomingProps);\n    /* eslint-disable-next-line */\n\n    console.log('%c state: ', 'color: #4ade80; font-weight: 700;', state);\n    /* eslint-disable-next-line */\n\n    console.log('%c componentTheme: ', 'color: #4ade80; font-weight: 700;', componentTheme);\n  }\n\n  const resolvedProps = usePropsResolutionWithComponentTheme(componentTheme, incomingProps, state, config);\n\n  if (process.env.NODE_ENV === 'development' && incomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log('%c resolvedProps: ', 'color: #22d3ee; font-weight: 700;', resolvedProps);\n  }\n\n  return resolvedProps;\n}\nexport const usePropsResolutionWithComponentTheme = (componentTheme, incomingProps, state, config) => {\n  var _flattenProps$bg, _flattenProps$backgro, _flattenProps$bgColor, _flattenProps$backgro2, _ref, _flattenProps$bg2, _flattenProps, _flattenProps$_text, _flattenProps2, _flattenProps2$_text;\n\n  const modifiedPropsForSSR = useResponsiveSSRProps(incomingProps);\n  const [ignoredProps, cleanIncomingProps] = extractInObject(modifiedPropsForSSR, ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat((config === null || config === void 0 ? void 0 : config.ignoreProps) || []));\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n  const resolveResponsively = ['colorScheme', 'size', 'variant', ...((config === null || config === void 0 ? void 0 : config.resolveResponsively) || [])];\n  const {\n    theme\n  } = useNativeBase();\n  const colorModeProps = useColorMode(); // STEP 1: combine default props and incoming props\n\n  const incomingWithDefaultProps = merge({}, componentTheme.defaultProps || {}, cleanIncomingProps); // STEP 2: flatten them\n\n  if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log(\"%cFlattening incoming and Default\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n  }\n\n  let [flattenProps, specificityMap] = propsFlattener({\n    props: incomingWithDefaultProps,\n    platform: Platform.OS,\n    colormode: colorModeProps.colorMode,\n    state: state || {},\n    previouslyFlattenProps: {},\n    cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n  }, 2); // console.log(resolveResponsively);\n  // Not work for SSR\n\n  const responsiveProps = {};\n\n  if (disableCSSMediaQueries) {\n    // STEP 2.5: resolving responsive props\n    resolveResponsively.map(propsName => {\n      if (flattenProps[propsName]) {\n        // @ts-ignore\n        responsiveProps[propsName] = flattenProps[propsName];\n      }\n    });\n  }\n\n  if (resolveResponsively.includes('direction')) {\n    const propName = 'direction';\n\n    if (flattenProps[propName]) {\n      // @ts-ignore\n      responsiveProps[propName] = flattenProps[propName];\n    }\n  }\n\n  const responsivelyResolvedProps = useBreakpointResolvedProps(responsiveProps);\n  flattenProps = { ...flattenProps,\n    ...responsivelyResolvedProps\n  }; // STEP 3: Pass it to baseStyle, then variant and then size and resolve them.\n  // NOTE: Resoloving baseStyle\n\n  let componentBaseStyle = {},\n      flattenBaseStyle,\n      baseSpecificityMap;\n\n  if (componentTheme.baseStyle) {\n    componentBaseStyle = typeof componentTheme.baseStyle !== 'function' ? componentTheme.baseStyle : componentTheme.baseStyle({\n      theme,\n      ...flattenProps,\n      ...colorModeProps\n    });\n\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\"%cFlattening baseStyle\", 'background: #4b5563; color: #eee; font-weight: 700; padding: 2px 8px;');\n    }\n\n    [flattenBaseStyle, baseSpecificityMap] = propsFlattener({\n      props: process.env.NODE_ENV === 'development' && cleanIncomingProps.debug ? { ...componentBaseStyle,\n        debug: true\n      } : componentBaseStyle,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: specificityMap,\n      previouslyFlattenProps: flattenProps,\n      cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n    }, 1);\n  } // NOTE: Resolving variants\n\n\n  const variant = flattenProps.variant;\n  let componentVariantProps = {},\n      flattenVariantStyle,\n      variantSpecificityMap; // Extracting props from variant\n\n  if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n    componentVariantProps = typeof componentTheme.variants[variant] !== 'function' ? componentTheme.variants[variant] : //@ts-ignore\n    componentTheme.variants[variant]({\n      theme,\n      ...flattenProps,\n      ...colorModeProps\n    });\n\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\"%cFlattening variantStyle\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n    }\n\n    [flattenVariantStyle, variantSpecificityMap] = propsFlattener({\n      props: process.env.NODE_ENV === 'development' && cleanIncomingProps.debug ? { ...componentVariantProps,\n        debug: true\n      } : componentVariantProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: baseSpecificityMap || specificityMap,\n      // NOTE: Ideally flattenBaseStyle and flattenProps should be deeply merged to create previouslyFlattenProps.\n      previouslyFlattenProps: flattenProps,\n      cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n    }, 1); // We remove variant from original props if we found it in the componentTheme\n    //@ts-ignore\n\n    flattenProps.variant = undefined;\n  } // NOTE: Resolving size\n\n\n  const size = flattenProps.size;\n  let componentSizeProps = {},\n      flattenSizeStyle,\n      sizeSpecificityMap; // Extracting props from size\n\n  if (size && componentTheme.sizes && componentTheme.sizes[size]) {\n    // Type - sizes: {lg: 1}. Refer icon theme\n    if (typeof componentTheme.sizes[size] === 'string' || typeof componentTheme.sizes[size] === 'number') {\n      flattenProps.size = componentTheme.sizes[size]; //@ts-ignore\n      // componentSizeProps.size = componentTheme.sizes[size];\n    } // Type - sizes: (props) => ({lg: {px: 1}}). Refer heading theme\n    else if (typeof componentTheme.sizes[size] === 'function') {\n        flattenProps.size = undefined; //@ts-ignore\n\n        componentSizeProps = componentTheme.sizes[size]({\n          theme,\n          ...flattenProps,\n          ...colorModeProps\n        });\n      } // Type - sizes: {lg: {px: 1}}. Refer button theme\n      else {\n          flattenProps.size = undefined;\n          componentSizeProps = componentTheme.sizes[size];\n        }\n\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\"%cFlattening sizeStyle\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n    }\n\n    [flattenSizeStyle, sizeSpecificityMap] = propsFlattener({\n      props: process.env.NODE_ENV === 'development' && cleanIncomingProps.debug ? { ...componentSizeProps,\n        debug: true\n      } : componentSizeProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: variantSpecificityMap || baseSpecificityMap || specificityMap,\n      previouslyFlattenProps: flattenProps,\n      cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n    }, 1);\n  } // // STEP 4: merge\n\n\n  const defaultStyles = merge({}, flattenBaseStyle, flattenVariantStyle, flattenSizeStyle);\n\n  for (const prop in defaultStyles) {\n    delete flattenProps[prop];\n  }\n\n  const defaultSpecificity = merge({}, specificityMap, baseSpecificityMap, variantSpecificityMap, sizeSpecificityMap);\n  flattenProps = propsSpreader({ ...defaultStyles,\n    ...flattenProps\n  }, defaultSpecificity); // // STEP 5: linear Grad and contrastText\n\n  let ignore = [];\n\n  if ((_flattenProps$bg = flattenProps.bg) !== null && _flattenProps$bg !== void 0 && _flattenProps$bg.linearGradient || (_flattenProps$backgro = flattenProps.background) !== null && _flattenProps$backgro !== void 0 && _flattenProps$backgro.linearGradient || (_flattenProps$bgColor = flattenProps.bgColor) !== null && _flattenProps$bgColor !== void 0 && _flattenProps$bgColor.linearGradient || (_flattenProps$backgro2 = flattenProps.backgroundColor) !== null && _flattenProps$backgro2 !== void 0 && _flattenProps$backgro2.linearGradient) {\n    var _flattenProps$backgro3, _flattenProps$bgColor2, _flattenProps$backgro4;\n\n    let bgProp = 'bg';\n\n    if ((_flattenProps$backgro3 = flattenProps.background) !== null && _flattenProps$backgro3 !== void 0 && _flattenProps$backgro3.linearGradient) {\n      bgProp = 'background';\n    } else if ((_flattenProps$bgColor2 = flattenProps.bgColor) !== null && _flattenProps$bgColor2 !== void 0 && _flattenProps$bgColor2.linearGradient) {\n      bgProp = 'bgColor';\n    } else if ((_flattenProps$backgro4 = flattenProps.backgroundColor) !== null && _flattenProps$backgro4 !== void 0 && _flattenProps$backgro4.linearGradient) {\n      bgProp = 'backgroundColor';\n    }\n\n    flattenProps[bgProp].linearGradient.colors = flattenProps[bgProp].linearGradient.colors.map(color => {\n      return get(theme.colors, color, color);\n    });\n    ignore = ['bg', 'background', 'backgroundColor', 'bgColor'];\n  } // // NOTE: seprating bg props when linearGardiant is available\n\n\n  const [gradientProps] = extractInObject(flattenProps, ignore);\n  const disableContrastText = useNativeBaseConfig('NativeBaseConfigProvider').disableContrastText;\n  const bgColor = (_ref = (_flattenProps$bg2 = flattenProps.bg) !== null && _flattenProps$bg2 !== void 0 ? _flattenProps$bg2 : flattenProps.backgroundColor) !== null && _ref !== void 0 ? _ref : flattenProps.bgColor;\n  const contrastTextColor = useContrastText(bgColor, (_flattenProps = flattenProps) === null || _flattenProps === void 0 ? void 0 : (_flattenProps$_text = _flattenProps._text) === null || _flattenProps$_text === void 0 ? void 0 : _flattenProps$_text.color, disableCSSMediaQueries ? disableContrastText ? true : false : true);\n  flattenProps._text = contrastTextColor && ((_flattenProps2 = flattenProps) === null || _flattenProps2 === void 0 ? void 0 : (_flattenProps2$_text = _flattenProps2._text) === null || _flattenProps2$_text === void 0 ? void 0 : _flattenProps2$_text.color) === undefined ? {\n    color: contrastTextColor,\n    ...flattenProps._text\n  } : flattenProps._text;\n  const resolvedProps = omitUndefined({ ...flattenProps,\n    ...ignoredProps,\n    ...gradientProps\n  }); // STEP 6: Return\n  // flattenProps = {};\n  // propertyDepth = {};\n\n  return resolvedProps;\n};\n//# sourceMappingURL=usePropsResolution.js.map"]},"metadata":{},"sourceType":"module"}