{"ast":null,"code":"var _s = $RefreshSig$();\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from \"../../primitives/Box\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { ModalContext } from \"./Context\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar ModalContent = function ModalContent(props, ref) {\n  _s();\n\n  var resolvedProps = usePropsResolution('ModalContent', props);\n\n  var _React$useContext = React.useContext(ModalContext),\n      contentSize = _React$useContext.contentSize,\n      initialFocusRef = _React$useContext.initialFocusRef,\n      finalFocusRef = _React$useContext.finalFocusRef,\n      handleClose = _React$useContext.handleClose,\n      visible = _React$useContext.visible;\n\n  React.useEffect(function () {\n    var finalRefVal = finalFocusRef ? finalFocusRef.current : null;\n\n    if (visible) {\n      if (initialFocusRef && initialFocusRef.current) {\n        initialFocusRef.current.focus();\n      }\n    } else {\n      if (finalRefVal) {\n        finalRefVal.focus();\n      }\n    }\n  }, [initialFocusRef, finalFocusRef, visible]);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({}, contentSize, resolvedProps, {\n    ref: ref,\n    onAccessibilityEscape: handleClose,\n    \"aria-modal\": \"true\",\n    accessibilityRole: Platform.OS === 'web' ? 'dialog' : undefined,\n    accessibilityViewIsModal: true\n  }));\n};\n\n_s(ModalContent, \"cMEwQN0tnNzFUrwovA9sEQD4n9c=\", false, function () {\n  return [usePropsResolution, useHasResponsiveProps];\n});\n\n_c = ModalContent;\nexport default _c3 = memo(_c2 = forwardRef(ModalContent));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ModalContent\");\n$RefreshReg$(_c2, \"%default%$memo\");\n$RefreshReg$(_c3, \"%default%\");\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/components/composites/Modal/ModalContent.js"],"names":["_extends","Object","i","arguments","source","target","ModalContent","resolvedProps","usePropsResolution","contentSize","initialFocusRef","finalFocusRef","handleClose","visible","React","finalRefVal","useHasResponsiveProps","ref","onAccessibilityEscape","accessibilityRole","Platform","accessibilityViewIsModal","memo","forwardRef"],"mappings":";;AAAA,SAAA,QAAA,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAANA,MAAAA,IAAiB,UAAA,MAAA,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,SAAS,CAA7B,MAAA,EAAsCD,CAAtC,EAAA,EAA2C;AAAE,UAAIE,MAAM,GAAGD,SAAS,CAAtB,CAAsB,CAAtB;;AAA2B,WAAK,IAAL,GAAA,IAAA,MAAA,EAAwB;AAAE,YAAIF,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAJ,GAAIA,CAAJ,EAAuD;AAAEI,UAAAA,MAAM,CAANA,GAAM,CAANA,GAAcD,MAAM,CAApBC,GAAoB,CAApBA;AAA8B;AAAE;AAAC;;AAAA,WAAA,MAAA;AAA5OL,GAAAA;;AAA8P,SAAOA,QAAQ,CAARA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AAEpR;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,GAAA;AACA,SAAA,kBAAA;AACA,SAAA,YAAA;;AAEA,SAAA,qBAAA;;AAEA,IAAMM,YAAY,GAAZA,SAAAA,YAAAA,CAAe,KAAfA,EAAe,GAAfA,EAA+B;AAAA,EAAA,EAAA;;AACnC,MAAMC,aAAa,GAAGC,kBAAkB,CAAA,cAAA,EAAxC,KAAwC,CAAxC;;AACA,MAAA,iBAAA,GAMIM,KAAK,CAALA,UAAAA,CANJ,YAMIA,CANJ;AAAA,MACEL,WADF,GAAA,iBAAA,CAAA,WAAA;AAAA,MAEEC,eAFF,GAAA,iBAAA,CAAA,eAAA;AAAA,MAGEC,aAHF,GAAA,iBAAA,CAAA,aAAA;AAAA,MAIEC,WAJF,GAAA,iBAAA,CAAA,WAAA;AAAA,MAKEC,OALF,GAAA,iBAAA,CAAA,OAAA;;AAOAC,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpB,QAAMC,WAAW,GAAGJ,aAAa,GAAGA,aAAa,CAAhB,OAAA,GAAjC,IAAA;;AAEA,QAAA,OAAA,EAAa;AACX,UAAID,eAAe,IAAIA,eAAe,CAAtC,OAAA,EAAgD;AAE9CA,QAAAA,eAAe,CAAfA,OAAAA,CAAAA,KAAAA;AAEH;AALD,KAAA,MAKO;AACL,UAAA,WAAA,EAAiB;AAEfK,QAAAA,WAAW,CAAXA,KAAAA;AAEH;AACF;AAdDD,GAAAA,EAcG,CAAA,eAAA,EAAA,aAAA,EAdHA,OAcG,CAdHA;;AAgBA,MAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AAGF;;AAAA,SAAoBF,KAAK,CAALA,aAAAA,CAAAA,GAAAA,EAAyBd,QAAQ,CAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAiC;AACpFiB,IAAAA,GAAG,EADiF,GAAA;AAEpFC,IAAAA,qBAAqB,EAF+D,WAAA;AAIpF,kBAJoF,MAAA;AAMpFC,IAAAA,iBAAiB,EAAEC,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GAAAA,QAAAA,GANiE,SAAA;AAOpFC,IAAAA,wBAAwB,EAP1B;AAAsF,GAAjC,CAAjCP,CAApB;AA7BF,CAAA;;GAAMR,Y;UACkBE,kB,EAwBlBQ,qB;;;KAzBAV,Y;AAwCN,eAAA,GAAA,GAA4BgB,IAAI,CAAA,GAAA,GAAeC,UAAU,CAAzD,YAAyD,CAAzB,CAAhC","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { ModalContext } from './Context';\nimport { Platform } from 'react-native';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ModalContent = (props, ref) => {\n  const resolvedProps = usePropsResolution('ModalContent', props);\n  const {\n    contentSize,\n    initialFocusRef,\n    finalFocusRef,\n    handleClose,\n    visible\n  } = React.useContext(ModalContext);\n  React.useEffect(() => {\n    const finalRefVal = finalFocusRef ? finalFocusRef.current : null;\n\n    if (visible) {\n      if (initialFocusRef && initialFocusRef.current) {\n        //@ts-ignore\n        initialFocusRef.current.focus();\n      }\n    } else {\n      if (finalRefVal) {\n        //@ts-ignore\n        finalRefVal.focus();\n      }\n    }\n  }, [initialFocusRef, finalFocusRef, visible]); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, _extends({}, contentSize, resolvedProps, {\n    ref: ref,\n    onAccessibilityEscape: handleClose //@ts-ignore - web only\n    ,\n    \"aria-modal\": \"true\" //@ts-ignore - web only\n    ,\n    accessibilityRole: Platform.OS === 'web' ? 'dialog' : undefined,\n    accessibilityViewIsModal: true\n  }));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(ModalContent));\n//# sourceMappingURL=ModalContent.js.map"]},"metadata":{},"sourceType":"module"}