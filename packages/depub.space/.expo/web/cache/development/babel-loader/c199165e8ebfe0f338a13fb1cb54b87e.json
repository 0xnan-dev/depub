{"ast":null,"code":"import _defineProperty from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _INITIAL_PROP_SPECIFI;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport merge from 'lodash.merge';\nvar SPECIFICITY_110 = 110;\nvar SPECIFICITY_100 = 100;\nvar SPECIFICITY_70 = 70;\nvar SPECIFICITY_60 = 60;\nvar SPECIFICITY_55 = 55;\nvar SPECIFICITY_50 = 50;\nvar SPECIFICITY_40 = 40;\nvar SPECIFICITY_30 = 30;\nvar SPECIFICITY_10 = 10;\nvar SPECIFICITY_1 = 1;\nvar specificityPrecedence = [SPECIFICITY_110, SPECIFICITY_100, SPECIFICITY_70, SPECIFICITY_60, SPECIFICITY_55, SPECIFICITY_50, SPECIFICITY_40, SPECIFICITY_30, SPECIFICITY_10, SPECIFICITY_1];\nvar INITIAL_PROP_SPECIFICITY = (_INITIAL_PROP_SPECIFI = {}, _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_110, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_100, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_70, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_60, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_50, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_55, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_40, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_30, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_10, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_1, 0), _INITIAL_PROP_SPECIFI);\nvar pseudoPropsMap = {\n  _web: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _ios: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _android: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _light: {\n    dependentOn: 'colormode',\n    priority: SPECIFICITY_10\n  },\n  _dark: {\n    dependentOn: 'colormode',\n    priority: SPECIFICITY_10\n  },\n  _indeterminate: {\n    dependentOn: 'state',\n    respondTo: 'isIndeterminate',\n    priority: SPECIFICITY_30\n  },\n  _checked: {\n    dependentOn: 'state',\n    respondTo: 'isChecked',\n    priority: SPECIFICITY_30\n  },\n  _readOnly: {\n    dependentOn: 'state',\n    respondTo: 'isReadOnly',\n    priority: SPECIFICITY_30\n  },\n  _invalid: {\n    dependentOn: 'state',\n    respondTo: 'isInvalid',\n    priority: SPECIFICITY_40\n  },\n  _focus: {\n    dependentOn: 'state',\n    respondTo: 'isFocused',\n    priority: SPECIFICITY_50\n  },\n  _focusVisible: {\n    dependentOn: 'state',\n    respondTo: 'isFocusVisible',\n    priority: SPECIFICITY_55\n  },\n  _hover: {\n    dependentOn: 'state',\n    respondTo: 'isHovered',\n    priority: SPECIFICITY_60\n  },\n  _pressed: {\n    dependentOn: 'state',\n    respondTo: 'isPressed',\n    priority: SPECIFICITY_70\n  },\n  _disabled: {\n    dependentOn: 'state',\n    respondTo: 'isDisabled',\n    priority: SPECIFICITY_100\n  },\n  _loading: {\n    dependentOn: 'state',\n    respondTo: 'isLoading',\n    priority: SPECIFICITY_110\n  }\n};\nexport var compareSpecificity = function compareSpecificity(exisiting, upcoming, ignorebaseTheme) {\n  if (!exisiting) return true;\n  if (!upcoming) return false;\n  var condition = ignorebaseTheme ? specificityPrecedence.length - 1 : specificityPrecedence.length;\n\n  for (var index = 0; index < condition; index++) {\n    if (exisiting[specificityPrecedence[index]] > upcoming[specificityPrecedence[index]]) {\n      return false;\n    } else if (exisiting[specificityPrecedence[index]] < upcoming[specificityPrecedence[index]]) {\n      return true;\n    }\n  }\n\n  return true;\n};\n\nvar shouldResolvePseudoProp = function shouldResolvePseudoProp(_ref) {\n  var property = _ref.property,\n      state = _ref.state,\n      platform = _ref.platform,\n      colormode = _ref.colormode;\n\n  if (pseudoPropsMap[property].dependentOn === 'platform') {\n    return property === \"_\".concat(platform);\n  } else if (pseudoPropsMap[property].dependentOn === 'colormode') {\n    return property === \"_\".concat(colormode);\n  } else if (pseudoPropsMap[property].dependentOn === 'state') {\n    return state[pseudoPropsMap[property].respondTo];\n  } else {\n    return false;\n  }\n};\n\nvar simplifyProps = function simplifyProps(_ref2) {\n  var props = _ref2.props,\n      colormode = _ref2.colormode,\n      platform = _ref2.platform,\n      state = _ref2.state,\n      currentSpecificity = _ref2.currentSpecificity,\n      previouslyFlattenProps = _ref2.previouslyFlattenProps,\n      cascadePseudoProps = _ref2.cascadePseudoProps;\n  var flattenProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var specificityMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var priority = arguments.length > 3 ? arguments[3] : undefined;\n\n  var mergePsuedoProps = function mergePsuedoProps(property, propertySpecity) {\n    if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n      if (true && props.debug) {\n        console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as internal prop with higher specificity');\n      }\n\n      specificityMap[property] = propertySpecity;\n      flattenProps[property] = merge({}, flattenProps[property], props[property]);\n    } else {\n      if (true && props.debug) {\n        console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as internal prop with lower specificity');\n      }\n\n      flattenProps[property] = merge({}, props[property], flattenProps[property]);\n    }\n  };\n\n  for (var property in props) {\n    var _pseudoPropsMap$prope;\n\n    var propertySpecity = currentSpecificity ? _objectSpread({}, currentSpecificity) : _objectSpread(_objectSpread({}, INITIAL_PROP_SPECIFICITY), {}, _defineProperty({}, SPECIFICITY_1, priority));\n\n    if (state[(_pseudoPropsMap$prope = pseudoPropsMap[property]) === null || _pseudoPropsMap$prope === void 0 ? void 0 : _pseudoPropsMap$prope.respondTo] || ['_dark', '_light', '_web', '_ios', '_android'].includes(property)) {\n      if (shouldResolvePseudoProp({\n        property: property,\n        state: state,\n        platform: platform,\n        colormode: colormode\n      })) {\n        if (true && props.debug) {\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'recursively resolving');\n        }\n\n        propertySpecity[pseudoPropsMap[property].priority]++;\n        simplifyProps({\n          props: props[property],\n          colormode: colormode,\n          platform: platform,\n          state: state,\n          currentSpecificity: propertySpecity,\n          previouslyFlattenProps: previouslyFlattenProps,\n          cascadePseudoProps: cascadePseudoProps\n        }, flattenProps, specificityMap, priority);\n      }\n    } else if (pseudoPropsMap[property] === undefined) {\n      if (property.startsWith('_')) {\n        mergePsuedoProps(property, propertySpecity);\n      } else {\n        if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n          if (true && props.debug) {\n            console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as simple prop');\n          }\n\n          specificityMap[property] = propertySpecity;\n          flattenProps[property] = props[property];\n        } else {\n          if (true && props.debug) {\n            console.log(\"%c \".concat(property), 'color: #818cf8;', 'ignored');\n          }\n        }\n      }\n    } else {\n      if (!cascadePseudoProps) {\n        delete flattenProps[property];\n\n        if (true && props.debug) {\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'deleted');\n        }\n      } else {\n        if (true && props.debug) {\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'cascaded');\n        }\n\n        mergePsuedoProps(property, propertySpecity);\n      }\n    }\n  }\n};\n\nexport var propsFlattener = function propsFlattener(_ref3, priority) {\n  var props = _ref3.props,\n      colormode = _ref3.colormode,\n      platform = _ref3.platform,\n      state = _ref3.state,\n      currentSpecificityMap = _ref3.currentSpecificityMap,\n      previouslyFlattenProps = _ref3.previouslyFlattenProps,\n      cascadePseudoProps = _ref3.cascadePseudoProps;\n  var flattenProps = {};\n\n  for (var property in props) {\n    var _pseudoPropsMap$prope2;\n\n    if (state[(_pseudoPropsMap$prope2 = pseudoPropsMap[property]) === null || _pseudoPropsMap$prope2 === void 0 ? void 0 : _pseudoPropsMap$prope2.respondTo] === undefined && property.startsWith('_')) {\n      flattenProps[property] = previouslyFlattenProps[property];\n    }\n  }\n\n  var specificityMap = currentSpecificityMap || {};\n  simplifyProps({\n    props: props,\n    colormode: colormode,\n    platform: platform,\n    state: state,\n    currentSpecificityMap: currentSpecificityMap,\n    previouslyFlattenProps: previouslyFlattenProps,\n    cascadePseudoProps: cascadePseudoProps\n  }, flattenProps, specificityMap, priority);\n  return [flattenProps, specificityMap];\n};\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/hooks/useThemeProps/propsFlattener.js"],"names":["SPECIFICITY_110","SPECIFICITY_100","SPECIFICITY_70","SPECIFICITY_60","SPECIFICITY_55","SPECIFICITY_50","SPECIFICITY_40","SPECIFICITY_30","SPECIFICITY_10","SPECIFICITY_1","specificityPrecedence","INITIAL_PROP_SPECIFICITY","pseudoPropsMap","_web","dependentOn","priority","_ios","_android","_light","_dark","_indeterminate","respondTo","_checked","_readOnly","_invalid","_focus","_focusVisible","_hover","_pressed","_disabled","_loading","compareSpecificity","condition","ignorebaseTheme","index","exisiting","upcoming","shouldResolvePseudoProp","property","state","platform","colormode","simplifyProps","props","currentSpecificity","previouslyFlattenProps","cascadePseudoProps","flattenProps","specificityMap","mergePsuedoProps","console","merge","propertySpecity","_pseudoPropsMap$prope","propsFlattener","currentSpecificityMap","_pseudoPropsMap$prope2"],"mappings":"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","sourcesContent":["import merge from 'lodash.merge';\nconst SPECIFICITY_110 = 110;\nconst SPECIFICITY_100 = 100;\nconst SPECIFICITY_70 = 70;\nconst SPECIFICITY_60 = 60;\nconst SPECIFICITY_55 = 55;\nconst SPECIFICITY_50 = 50;\nconst SPECIFICITY_40 = 40;\nconst SPECIFICITY_30 = 30;\nconst SPECIFICITY_10 = 10;\nconst SPECIFICITY_1 = 1;\nconst specificityPrecedence = [SPECIFICITY_110, SPECIFICITY_100, SPECIFICITY_70, SPECIFICITY_60, SPECIFICITY_55, SPECIFICITY_50, SPECIFICITY_40, SPECIFICITY_30, SPECIFICITY_10, SPECIFICITY_1];\nconst INITIAL_PROP_SPECIFICITY = {\n  [SPECIFICITY_110]: 0,\n  [SPECIFICITY_100]: 0,\n  [SPECIFICITY_70]: 0,\n  [SPECIFICITY_60]: 0,\n  [SPECIFICITY_50]: 0,\n  [SPECIFICITY_55]: 0,\n  [SPECIFICITY_40]: 0,\n  [SPECIFICITY_30]: 0,\n  [SPECIFICITY_10]: 0,\n  [SPECIFICITY_1]: 0\n};\nconst pseudoPropsMap = {\n  _web: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _ios: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _android: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _light: {\n    dependentOn: 'colormode',\n    priority: SPECIFICITY_10\n  },\n  _dark: {\n    dependentOn: 'colormode',\n    priority: SPECIFICITY_10\n  },\n  // TODO: have to add more interactionProps and stateProps\n  _indeterminate: {\n    dependentOn: 'state',\n    respondTo: 'isIndeterminate',\n    priority: SPECIFICITY_30\n  },\n  _checked: {\n    dependentOn: 'state',\n    respondTo: 'isChecked',\n    priority: SPECIFICITY_30\n  },\n  // Add new pseudeo props in between -------\n  _readOnly: {\n    dependentOn: 'state',\n    respondTo: 'isReadOnly',\n    priority: SPECIFICITY_30\n  },\n  // Add new pseudeo props in between -------\n  _invalid: {\n    dependentOn: 'state',\n    respondTo: 'isInvalid',\n    priority: SPECIFICITY_40\n  },\n  _focus: {\n    dependentOn: 'state',\n    respondTo: 'isFocused',\n    priority: SPECIFICITY_50\n  },\n  _focusVisible: {\n    dependentOn: 'state',\n    respondTo: 'isFocusVisible',\n    priority: SPECIFICITY_55\n  },\n  _hover: {\n    dependentOn: 'state',\n    respondTo: 'isHovered',\n    priority: SPECIFICITY_60\n  },\n  _pressed: {\n    dependentOn: 'state',\n    respondTo: 'isPressed',\n    priority: SPECIFICITY_70\n  },\n  _disabled: {\n    dependentOn: 'state',\n    respondTo: 'isDisabled',\n    priority: SPECIFICITY_100\n  },\n  _loading: {\n    dependentOn: 'state',\n    respondTo: 'isLoading',\n    priority: SPECIFICITY_110\n  }\n};\nexport const compareSpecificity = (exisiting, upcoming, ignorebaseTheme) => // property?: any\n{\n  if (!exisiting) return true;\n  if (!upcoming) return false;\n  const condition = ignorebaseTheme ? specificityPrecedence.length - 1 : specificityPrecedence.length;\n\n  for (let index = 0; index < condition; index++) {\n    if (exisiting[specificityPrecedence[index]] > upcoming[specificityPrecedence[index]]) {\n      return false;\n    } else if (exisiting[specificityPrecedence[index]] < upcoming[specificityPrecedence[index]]) {\n      return true;\n    }\n  }\n\n  return true;\n};\n\nconst shouldResolvePseudoProp = ({\n  property,\n  state,\n  platform,\n  colormode\n}) => {\n  if (pseudoPropsMap[property].dependentOn === 'platform') {\n    return property === \"_\".concat(platform);\n  } else if (pseudoPropsMap[property].dependentOn === 'colormode') {\n    return property === \"_\".concat(colormode);\n  } else if (pseudoPropsMap[property].dependentOn === 'state') {\n    // @ts-ignore\n    return state[pseudoPropsMap[property].respondTo];\n  } else {\n    return false;\n  }\n};\n\nconst simplifyProps = ({\n  props,\n  colormode,\n  platform,\n  state,\n  currentSpecificity,\n  previouslyFlattenProps,\n  cascadePseudoProps\n}, flattenProps = {}, specificityMap = {}, priority) => {\n  const mergePsuedoProps = (property, propertySpecity) => {\n    if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as internal prop with higher specificity');\n      }\n\n      specificityMap[property] = propertySpecity; // merging internal props (like, _text, _stack ...)\n\n      flattenProps[property] = merge({}, flattenProps[property], props[property]);\n    } else {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as internal prop with lower specificity');\n      }\n\n      flattenProps[property] = merge({}, props[property], flattenProps[property]);\n    }\n  };\n\n  for (const property in props) {\n    var _pseudoPropsMap$prope;\n\n    // NOTE: the order is important here. Keep in mind while specificity breakpoints.\n    const propertySpecity = currentSpecificity ? { ...currentSpecificity\n    } : { ...INITIAL_PROP_SPECIFICITY,\n      [SPECIFICITY_1]: priority\n    };\n\n    if ( // @ts-ignore\n    state[(_pseudoPropsMap$prope = pseudoPropsMap[property]) === null || _pseudoPropsMap$prope === void 0 ? void 0 : _pseudoPropsMap$prope.respondTo] || ['_dark', '_light', '_web', '_ios', '_android'].includes(property)) {\n      // @ts-ignore\n      if (shouldResolvePseudoProp({\n        property,\n        state,\n        platform,\n        colormode\n      })) {\n        // NOTE: Handling (state driven) props like _web, _ios, _android, _dark, _light, _disabled, _focus, _focusVisible, _hover, _pressed, _readOnly, _invalid, .... Only when they are true.\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'recursively resolving');\n        } // @ts-ignore\n\n\n        propertySpecity[pseudoPropsMap[property].priority]++;\n        simplifyProps({\n          props: props[property],\n          colormode,\n          platform,\n          state,\n          currentSpecificity: propertySpecity,\n          previouslyFlattenProps: previouslyFlattenProps,\n          cascadePseudoProps\n        }, flattenProps, specificityMap, priority);\n      } // @ts-ignore\n\n    } else if (pseudoPropsMap[property] === undefined) {\n      if (property.startsWith('_')) {\n        // NOTE: Handling (internal) props like _text, _stack, ....\n        mergePsuedoProps(property, propertySpecity);\n      } else {\n        if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as simple prop');\n          }\n\n          specificityMap[property] = propertySpecity; // replacing simple props (like, p, m, bg, color, ...)\n\n          flattenProps[property] = props[property];\n        } else {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(\"%c \".concat(property), 'color: #818cf8;', 'ignored');\n          }\n        }\n      }\n    } else {\n      // Can delete unused props\n      if (!cascadePseudoProps) {\n        delete flattenProps[property];\n\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'deleted');\n        }\n      } else {\n        // specificityMap[property] = propertySpecity;\n        // flattenProps[property] = props[property];\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'cascaded');\n        }\n\n        mergePsuedoProps(property, propertySpecity);\n      }\n    }\n  }\n};\n\nexport const propsFlattener = ({\n  props,\n  colormode,\n  platform,\n  state,\n  currentSpecificityMap,\n  previouslyFlattenProps,\n  cascadePseudoProps\n}, priority) => {\n  const flattenProps = {};\n\n  for (const property in props) {\n    var _pseudoPropsMap$prope2;\n\n    if ( // @ts-ignore\n    state[(_pseudoPropsMap$prope2 = pseudoPropsMap[property]) === null || _pseudoPropsMap$prope2 === void 0 ? void 0 : _pseudoPropsMap$prope2.respondTo] === undefined && property.startsWith('_')) {\n      flattenProps[property] = previouslyFlattenProps[property];\n    }\n  }\n\n  const specificityMap = currentSpecificityMap || {}; // STEP 1.a (if): Check weather it should be recursively resolved\n  // NOTE: (when true) recursively resolved it\n  // STEP 1.b (else if): Check specificty\n  // STEP 1.b.i: Check for pseudo props\n  // NOTE: (when true) Merge it.\n  // NOTE: (when false) Replace it.\n\n  simplifyProps({\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificityMap,\n    previouslyFlattenProps,\n    cascadePseudoProps\n  }, flattenProps, specificityMap, priority);\n  return [flattenProps, specificityMap];\n};\n//# sourceMappingURL=propsFlattener.js.map"]},"metadata":{},"sourceType":"module"}