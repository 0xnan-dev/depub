{"ast":null,"code":"import _defineProperty from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { useColorMode } from \"./../core/color-mode\";\nimport { useTheme } from \"./useTheme\";\nexport function useNativeBase() {\n  _s();\n\n  var colorModeResult = useColorMode();\n  var theme = useTheme();\n  return _objectSpread(_objectSpread({}, colorModeResult), {}, {\n    theme: theme\n  });\n}\n\n_s(useNativeBase, \"VKrfNSGxYmyoX8xng8En/KLr9Vs=\", false, function () {\n  return [useColorMode, useTheme];\n});\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/hooks/useNativeBase.js"],"names":["useNativeBase","colorModeResult","useColorMode","theme","useTheme"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,SAAA,YAAA;AACA,SAAA,QAAA;AAMA,OAAO,SAAA,aAAA,GAAyB;AAAA,EAAA,EAAA;;AAC9B,MAAMC,eAAe,GAAGC,YAAxB,EAAA;AACA,MAAMC,KAAK,GAAGC,QAAd,EAAA;AACA,SAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA;AACED,IAAAA,KAAK,EADP;AAAA,GAAA,CAAA;;;GAHcH,a;UACUE,Y,EACVE,Q","sourcesContent":["import { useColorMode } from './../core/color-mode';\nimport { useTheme } from './useTheme';\n/**\n *\n * @returns object containing `colorMode` information and `theme` object\n */\n\nexport function useNativeBase() {\n  const colorModeResult = useColorMode();\n  const theme = useTheme();\n  return { ...colorModeResult,\n    theme\n  };\n}\n//# sourceMappingURL=useNativeBase.js.map"]},"metadata":{},"sourceType":"module"}