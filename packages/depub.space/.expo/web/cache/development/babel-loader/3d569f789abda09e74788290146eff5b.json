{"ast":null,"code":"import _slicedToArray from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nexport function useControllableProp(prop, state) {\n  _s();\n\n  var _React$useRef = React.useRef(prop !== undefined),\n      isControlled = _React$useRef.current;\n\n  var value = isControlled && typeof prop !== 'undefined' ? prop : state;\n  return [isControlled, value];\n}\n\n_s(useControllableProp, \"I8oJuzgR5ymq/Mz8dhSz2hpXpZE=\");\n\nexport function useControllableState(props) {\n  _s2();\n\n  var valueProp = props.value,\n      defaultValue = props.defaultValue,\n      onChange = props.onChange;\n\n  var _React$useState = React.useState(defaultValue),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      valueState = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var isControlled = valueProp !== undefined;\n  var value = isControlled ? valueProp : valueState;\n  var updateValue = React.useCallback(function (next) {\n    var nextValue = typeof next === 'function' ? next(value) : next;\n\n    if (!isControlled) {\n      setValue(nextValue);\n    }\n\n    onChange && onChange(nextValue);\n  }, [isControlled, onChange, value]);\n  return [value, updateValue];\n}\n\n_s2(useControllableState, \"nbd/gvCsV+vmdAS2ooeJB5lS7II=\");\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/hooks/useControllableProp.js"],"names":["useControllableProp","isControlled","React","prop","value","useControllableState","valueProp","defaultValue","onChange","props","valueState","setValue","updateValue","nextValue","next"],"mappings":";;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAO,SAAA,mBAAA,CAAA,IAAA,EAAA,KAAA,EAA0C;AAAA,EAAA,EAAA;;AAC/C,MAAA,aAAA,GAEIE,KAAK,CAALA,MAAAA,CAAaC,IAAI,KAFrB,SAEID,CAFJ;AAAA,MACWD,YADX,GAAA,aAAA,CAAA,OAAA;;AAGA,MAAMG,KAAK,GAAGH,YAAY,IAAI,OAAA,IAAA,KAAhBA,WAAAA,GAAAA,IAAAA,GAAd,KAAA;AACA,SAAO,CAAA,YAAA,EAAP,KAAO,CAAP;;;GALcD,mB;;AAYhB,OAAO,SAAA,oBAAA,CAAA,KAAA,EAAqC;AAAA,EAAA,GAAA;;AAC1C,MACSM,SADT,GAIIG,KAJJ,CAAA,KAAA;AAAA,MAEEF,YAFF,GAIIE,KAJJ,CAAA,YAAA;AAAA,MAGED,QAHF,GAIIC,KAJJ,CAAA,QAAA;;AAKA,MAAA,eAAA,GAA+BP,KAAK,CAALA,QAAAA,CAA/B,YAA+BA,CAA/B;AAAA,MAAA,gBAAA,GAAA,cAAA,CAAA,eAAA,EAAA,CAAA,CAAA;AAAA,MAAOQ,UAAP,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,MAAmBC,QAAnB,GAAA,gBAAA,CAAA,CAAA,CAAA;;AACA,MAAMV,YAAY,GAAGK,SAAS,KAA9B,SAAA;AACA,MAAMF,KAAK,GAAGH,YAAY,GAAA,SAAA,GAA1B,UAAA;AACA,MAAMW,WAAW,GAAGV,KAAK,CAALA,WAAAA,CAAkB,UAAA,IAAA,EAAQ;AAC5C,QAAMW,SAAS,GAAG,OAAA,IAAA,KAAA,UAAA,GAA6BC,IAAI,CAAjC,KAAiC,CAAjC,GAAlB,IAAA;;AAEA,QAAI,CAAJ,YAAA,EAAmB;AACjBH,MAAAA,QAAQ,CAARA,SAAQ,CAARA;AAGFH;;AAAAA,IAAAA,QAAQ,IAAIA,QAAQ,CAApBA,SAAoB,CAApBA;AAPkBN,GAAAA,EAQjB,CAAA,YAAA,EAAA,QAAA,EARH,KAQG,CARiBA,CAApB;AASA,SAAO,CAAA,KAAA,EAAP,WAAO,CAAP;;;IAlBcG,oB","sourcesContent":["import React from 'react';\nexport function useControllableProp(prop, state) {\n  const {\n    current: isControlled\n  } = React.useRef(prop !== undefined);\n  const value = isControlled && typeof prop !== 'undefined' ? prop : state;\n  return [isControlled, value];\n}\n\n/**\n * React hook for using controlling component state.\n * @param props\n */\nexport function useControllableState(props) {\n  const {\n    value: valueProp,\n    defaultValue,\n    onChange\n  } = props;\n  const [valueState, setValue] = React.useState(defaultValue);\n  const isControlled = valueProp !== undefined;\n  const value = isControlled ? valueProp : valueState;\n  const updateValue = React.useCallback(next => {\n    const nextValue = typeof next === 'function' ? next(value) : next;\n\n    if (!isControlled) {\n      setValue(nextValue);\n    }\n\n    onChange && onChange(nextValue);\n  }, [isControlled, onChange, value]);\n  return [value, updateValue];\n}\n//# sourceMappingURL=useControllableProp.js.map"]},"metadata":{},"sourceType":"module"}