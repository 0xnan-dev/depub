{"ast":null,"code":"import _toConsumableArray from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar _excluded = [\"wrapperRef\"],\n    _excluded2 = [\"isInvalid\", \"isReadOnly\", \"isIndeterminate\"],\n    _excluded3 = [\"icon\", \"_interactionBox\", \"_icon\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { mergeRefs } from \"../../../utils\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { Center } from \"../../composites/Center\";\nimport { useFormControlContext } from \"../../composites/FormControl\";\nimport Box from \"../Box\";\nimport { useToggleState } from '@react-stately/toggle';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { CheckboxGroupContext } from \"./CheckboxGroup\";\nimport { useHover } from '@react-native-aria/interactions';\nimport { useCheckbox, useCheckboxGroupItem } from '@react-native-aria/checkbox';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { extractInObject, stylingProps } from \"../../../theme/tools/utils\";\nimport { combineContextAndProps } from \"../../../utils\";\nimport SizedIcon from \"./SizedIcon\";\n\nvar Checkbox = function Checkbox(_ref2, ref) {\n  _s();\n\n  var wrapperRef = _ref2.wrapperRef,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  var formControlContext = useFormControlContext();\n\n  var _combineContextAndPro = combineContextAndProps(formControlContext, props),\n      isInvalid = _combineContextAndPro.isInvalid,\n      isReadOnly = _combineContextAndPro.isReadOnly,\n      isIndeterminate = _combineContextAndPro.isIndeterminate,\n      combinedProps = _objectWithoutProperties(_combineContextAndPro, _excluded2);\n\n  var checkboxGroupContext = React.useContext(CheckboxGroupContext);\n  var state = useToggleState(_objectSpread(_objectSpread({}, props), {}, {\n    defaultSelected: props.defaultIsChecked,\n    isSelected: props.isChecked\n  }));\n\n  var _ref = React.useRef();\n\n  var mergedRef = mergeRefs([ref, _ref]);\n\n  var _ref3 = checkboxGroupContext ? useCheckboxGroupItem(_objectSpread(_objectSpread({}, combinedProps), {}, {\n    'aria-label': combinedProps.accessibilityLabel,\n    'value': combinedProps.value\n  }), checkboxGroupContext.state, mergedRef) : useCheckbox(_objectSpread(_objectSpread({}, combinedProps), {}, {\n    'aria-label': combinedProps.accessibilityLabel\n  }), state, mergedRef),\n      groupItemInputProps = _ref3.inputProps;\n\n  var inputProps = React.useMemo(function () {\n    return groupItemInputProps;\n  }, [groupItemInputProps.checked, groupItemInputProps.disabled]);\n\n  var _React$useState = React.useState(_objectSpread(_objectSpread({}, checkboxGroupContext), combinedProps)),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      contextCombinedProps = _React$useState2[0];\n\n  return React.createElement(CheckboxComponent, {\n    wrapperRef: wrapperRef,\n    mergedRef: mergedRef,\n    inputProps: inputProps,\n    combinedProps: contextCombinedProps,\n    isInvalid: isInvalid,\n    isReadOnly: isReadOnly,\n    isIndeterminate: isIndeterminate\n  });\n};\n\n_s(Checkbox, \"7jXlNl6PvxuEidHAyG95aj05Bko=\", false, function () {\n  return [useFormControlContext, useToggleState, useCheckboxGroupItem, useCheckbox];\n});\n\n_c = Checkbox;\nvar CheckboxComponent = React.memo(_c2 = _s2(function (_ref4) {\n  _s2();\n\n  var wrapperRef = _ref4.wrapperRef,\n      inputProps = _ref4.inputProps,\n      combinedProps = _ref4.combinedProps,\n      isInvalid = _ref4.isInvalid,\n      isReadOnly = _ref4.isReadOnly,\n      isIndeterminate = _ref4.isIndeterminate,\n      mergedRef = _ref4.mergedRef;\n\n  var _ref = React.useRef();\n\n  var _useHover = useHover({}, _ref),\n      isHovered = _useHover.isHovered;\n\n  var isChecked = inputProps.checked,\n      isDisabled = inputProps.disabled;\n\n  var _useFocusRing = useFocusRing(),\n      focusProps = _useFocusRing.focusProps,\n      isFocusVisible = _useFocusRing.isFocusVisible;\n\n  var _usePropsResolution = usePropsResolution('Checkbox', combinedProps, {\n    isInvalid: isInvalid,\n    isReadOnly: isReadOnly,\n    isFocusVisible: true,\n    isDisabled: isDisabled,\n    isIndeterminate: isIndeterminate,\n    isChecked: isChecked,\n    isHovered: true\n  }),\n      icon = _usePropsResolution.icon,\n      _interactionBox = _usePropsResolution._interactionBox,\n      _icon = _usePropsResolution._icon,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded3);\n\n  var _extractInObject = extractInObject(resolvedProps, [].concat(_toConsumableArray(stylingProps.margin), _toConsumableArray(stylingProps.layout), _toConsumableArray(stylingProps.flexbox), _toConsumableArray(stylingProps.position), ['_text'])),\n      _extractInObject2 = _slicedToArray(_extractInObject, 2),\n      layoutProps = _extractInObject2[0],\n      nonLayoutProps = _extractInObject2[1];\n\n  var component = React.useMemo(function () {\n    return React.createElement(Box, _extends({}, layoutProps, {\n      opacity: isDisabled ? 0.4 : 1,\n      cursor: isDisabled ? 'not-allowed' : 'pointer'\n    }), React.createElement(Center, null, React.createElement(Box, _extends({}, _interactionBox, {\n      style: {\n        transition: 'height 200ms, width 200ms'\n      },\n      h: isFocusVisible || isHovered ? '200%' : '0%',\n      w: isFocusVisible || isHovered ? '200%' : '0%',\n      pointerEvents: \"none\",\n      zIndex: -1\n    })), React.createElement(Center, nonLayoutProps, React.createElement(SizedIcon, {\n      icon: icon,\n      _icon: _icon,\n      isChecked: isChecked\n    }))), resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.children);\n  }, [_icon, _interactionBox, icon, isChecked, isDisabled, isFocusVisible, isHovered, layoutProps, nonLayoutProps, resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.children]);\n  var mergedWrapperRef = React.useMemo(function () {\n    return mergeRefs([wrapperRef, _ref]);\n  }, [wrapperRef]);\n\n  if (useHasResponsiveProps(resolvedProps)) {\n    return null;\n  }\n\n  return React.createElement(Box, {\n    accessibilityRole: \"label\",\n    ref: mergedWrapperRef\n  }, React.createElement(VisuallyHidden, null, React.createElement(\"input\", _extends({}, inputProps, focusProps, {\n    ref: mergedRef\n  }))), component);\n}, \"GNP/IwoxUqqLAdNAE15WlRdhi5E=\", false, function () {\n  return [useHover, useFocusRing, usePropsResolution, useHasResponsiveProps];\n}));\n_c3 = CheckboxComponent;\nexport default _c5 = memo(_c4 = forwardRef(Checkbox));\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Checkbox\");\n$RefreshReg$(_c2, \"CheckboxComponent$React.memo\");\n$RefreshReg$(_c3, \"CheckboxComponent\");\n$RefreshReg$(_c4, \"%default%$memo\");\n$RefreshReg$(_c5, \"%default%\");\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/components/primitives/Checkbox/Checkbox.web.js"],"names":["_extends","Object","i","arguments","source","target","Checkbox","wrapperRef","props","formControlContext","useFormControlContext","isInvalid","isReadOnly","isIndeterminate","combinedProps","combineContextAndProps","checkboxGroupContext","React","state","useToggleState","defaultSelected","isSelected","_ref","mergedRef","mergeRefs","groupItemInputProps","useCheckboxGroupItem","useCheckbox","inputProps","contextCombinedProps","CheckboxComponent","isHovered","useHover","isChecked","isDisabled","focusProps","isFocusVisible","useFocusRing","icon","_interactionBox","_icon","resolvedProps","usePropsResolution","layoutProps","nonLayoutProps","extractInObject","stylingProps","component","opacity","cursor","style","transition","h","w","pointerEvents","zIndex","mergedWrapperRef","useHasResponsiveProps","accessibilityRole","ref","memo","forwardRef"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport { mergeRefs } from '../../../utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Center } from '../../composites/Center';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport Box from '../Box';\nimport { useToggleState } from '@react-stately/toggle';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { CheckboxGroupContext } from './CheckboxGroup';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useCheckbox, useCheckboxGroupItem } from '@react-native-aria/checkbox';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { combineContextAndProps } from '../../../utils';\nimport SizedIcon from './SizedIcon';\n\nconst Checkbox = ({\n  wrapperRef,\n  ...props\n}, ref) => {\n  const formControlContext = useFormControlContext();\n  const {\n    isInvalid,\n    isReadOnly,\n    isIndeterminate,\n    ...combinedProps\n  } = combineContextAndProps(formControlContext, props);\n  const checkboxGroupContext = React.useContext(CheckboxGroupContext);\n  const state = useToggleState({ ...props,\n    defaultSelected: props.defaultIsChecked,\n    isSelected: props.isChecked\n  });\n\n  const _ref = React.useRef();\n\n  const mergedRef = mergeRefs([ref, _ref]); // Swap hooks depending on whether this checkbox is inside a CheckboxGroup.\n  // This is a bit unorthodox. Typically, hooks cannot be called in a conditional,\n  // but since the checkbox won't move in and out of a group, it should be safe.\n\n  const {\n    inputProps: groupItemInputProps\n  } = checkboxGroupContext ? // eslint-disable-next-line react-hooks/rules-of-hooks\n  useCheckboxGroupItem({ ...combinedProps,\n    'aria-label': combinedProps.accessibilityLabel,\n    'value': combinedProps.value\n  }, checkboxGroupContext.state, //@ts-ignore\n  mergedRef) : // eslint-disable-next-line react-hooks/rules-of-hooks\n  useCheckbox({ ...combinedProps,\n    'aria-label': combinedProps.accessibilityLabel\n  }, state, //@ts-ignore\n  mergedRef); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const inputProps = React.useMemo(() => groupItemInputProps, [groupItemInputProps.checked, groupItemInputProps.disabled]);\n  const [contextCombinedProps] = React.useState({ ...checkboxGroupContext,\n    ...combinedProps\n  });\n  return /*#__PURE__*/React.createElement(CheckboxComponent, {\n    wrapperRef: wrapperRef,\n    mergedRef: mergedRef,\n    inputProps: inputProps,\n    combinedProps: contextCombinedProps,\n    isInvalid: isInvalid,\n    isReadOnly: isReadOnly,\n    isIndeterminate: isIndeterminate\n  });\n};\n\nconst CheckboxComponent = /*#__PURE__*/React.memo(({\n  wrapperRef,\n  inputProps,\n  combinedProps,\n  isInvalid,\n  isReadOnly,\n  isIndeterminate,\n  mergedRef\n}) => {\n  const _ref = React.useRef();\n\n  const {\n    isHovered\n  } = useHover({}, _ref);\n  const {\n    checked: isChecked,\n    disabled: isDisabled\n  } = inputProps;\n  const {\n    focusProps,\n    isFocusVisible\n  } = useFocusRing();\n  const {\n    icon,\n    _interactionBox,\n    _icon,\n    ...resolvedProps\n  } = usePropsResolution('Checkbox', combinedProps, {\n    isInvalid,\n    isReadOnly,\n    isFocusVisible: true,\n    isDisabled,\n    isIndeterminate,\n    isChecked,\n    isHovered: true\n  });\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [...stylingProps.margin, ...stylingProps.layout, ...stylingProps.flexbox, ...stylingProps.position, '_text']);\n  const component = React.useMemo(() => {\n    return /*#__PURE__*/React.createElement(Box, _extends({}, layoutProps, {\n      opacity: isDisabled ? 0.4 : 1,\n      cursor: isDisabled ? 'not-allowed' : 'pointer'\n    }), /*#__PURE__*/React.createElement(Center, null, /*#__PURE__*/React.createElement(Box, _extends({}, _interactionBox, {\n      style: {\n        // @ts-ignore - only for web\"\n        transition: 'height 200ms, width 200ms'\n      },\n      h: isFocusVisible || isHovered ? '200%' : '0%',\n      w: isFocusVisible || isHovered ? '200%' : '0%',\n      pointerEvents: \"none\",\n      zIndex: -1\n    })), /*#__PURE__*/React.createElement(Center, nonLayoutProps, /*#__PURE__*/React.createElement(SizedIcon, {\n      icon: icon,\n      _icon: _icon,\n      isChecked: isChecked\n    }))), resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.children);\n  }, [_icon, _interactionBox, icon, isChecked, isDisabled, isFocusVisible, isHovered, layoutProps, nonLayoutProps, resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.children]);\n  const mergedWrapperRef = React.useMemo(() => mergeRefs([wrapperRef, _ref]), [wrapperRef]); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(resolvedProps)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box // @ts-ignore - RN web supports accessibilityRole=\"label\"\n  , {\n    accessibilityRole: \"label\",\n    ref: mergedWrapperRef\n  }, /*#__PURE__*/React.createElement(VisuallyHidden, null, /*#__PURE__*/React.createElement(\"input\", _extends({}, inputProps, focusProps, {\n    ref: mergedRef\n  }))), component);\n});\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Checkbox));\n//# sourceMappingURL=Checkbox.web.js.map"]},"metadata":{},"sourceType":"module"}