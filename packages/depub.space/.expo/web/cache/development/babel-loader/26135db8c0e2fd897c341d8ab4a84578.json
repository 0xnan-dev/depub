{"ast":null,"code":"import _defineProperty from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport omitBy from 'lodash.omitby';\nimport isNil from 'lodash.isnil';\nimport pick from 'lodash.pick';\nimport omit from 'lodash.omit';\nimport get from 'lodash.get';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport var stylingProps = {\n  margin: ['margin', 'm', 'marginTop', 'mt', 'marginRight', 'mr', 'marginBottom', 'mb', 'marginLeft', 'ml', 'marginX', 'mx', 'marginY', 'my'],\n  padding: ['padding', 'p', 'paddingTop', 'pt', 'paddingRight', 'pr', 'paddingBottom', 'pb', 'paddingLeft', 'pl', 'paddingX', 'px', 'paddingY', 'py'],\n  border: ['border', 'borderWidth', 'borderStyle', 'borderColor', 'borderRadius', 'borderTop', 'borderTopWidth', 'borderTopStyle', 'borderTopColor', 'borderTopLeftRadius', 'borderTopRightRadius', 'borderRight', 'borderRightWidth', 'borderRightStyle', 'borderRightColor', 'borderBottom', 'borderBottomWidth', 'borderBottomStyle', 'borderBottomColor', 'borderBottomLeftRadius', 'borderBottomRightRadius', 'borderLeft', 'borderLeftWidth', 'borderLeftStyle', 'borderLeftColor', 'borderX', 'borderY'],\n  layout: ['width', 'w', 'height', 'h', 'display', 'minWidth', 'minW', 'minH', 'minHeight', 'maxWidth', 'maxW', 'maxHeight', 'maxH', 'size', 'verticalAlign', 'overflow', 'overflowX', 'overflowY'],\n  flexbox: ['alignItems', 'alignContent', 'justifyItems', 'justifyContent', 'flexWrap', 'flexDirection', 'flex', 'flexGrow', 'flexShrink', 'flexBasis', 'justifySelf', 'alignSelf', 'order'],\n  position: ['position', 'zIndex', 'top', 'right', 'bottom', 'left'],\n  background: ['bg', 'backgroundColor', 'bgColor']\n};\nexport function omitUndefined(obj) {\n  return omitBy(obj, isNil);\n}\nexport function getRandomString(length) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n}\n\nfunction orderedPick(obj, values) {\n  var ret = {};\n  Object.keys(obj).forEach(function (key) {\n    if (values.includes(key)) {\n      ret[key] = obj[key];\n    }\n  });\n  return ret;\n}\n\nexport function orderedExtractInObject(parent, values) {\n  return [omitUndefined(orderedPick(parent, values)), omitUndefined(omit(parent, values))];\n}\nexport function extractInObject(parent, values) {\n  return [omitUndefined(pick(parent, values)), omitUndefined(omit(parent, values))];\n}\nexport function getColorFormColorScheme(props) {\n  var theme = props.theme,\n      colorScheme = props.colorScheme,\n      isDisabled = props.isDisabled;\n  var simpleColorScheme = colorScheme.split('.')[0];\n  if (isDisabled) return 'gray.300';else if (simpleColorScheme in theme.colors) {\n    return theme.colors[simpleColorScheme][0] === '#' ? simpleColorScheme : theme.colors[simpleColorScheme][400] || theme.colors[simpleColorScheme][200];\n  } else return 'primary.200';\n}\nexport function getColorScheme(props, customColorScheme) {\n  var theme = props.theme,\n      colorScheme = props.colorScheme;\n  colorScheme = customColorScheme || colorScheme;\n  if (!(colorScheme in theme.colors)) return 'primary';else {\n    if (typeof theme.colors[colorScheme] === 'object') return colorScheme;\n  }\n}\nexport var inValidBreakpointProps = ['style', 'children', 'shadowOffset'];\nexport function hasValidBreakpointFormat(breaks, themeBreakpoints, property) {\n  if (property && inValidBreakpointProps.indexOf(property) !== -1) {\n    return false;\n  } else if (Array.isArray(breaks)) {\n    return breaks.length ? true : false;\n  } else if (typeof breaks === 'object' && breaks !== null) {\n    var keys = Object.keys(breaks);\n    var themeBreakPointKeys = Object.keys(themeBreakpoints);\n\n    for (var i = 0; i < keys.length; i++) {\n      if (themeBreakPointKeys.indexOf(keys[i]) === -1) {\n        return false;\n      }\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function findLastValidBreakpoint(values, themeBreakpoints, currentBreakpoint) {\n  var _valArray$currentBrea;\n\n  var valArray = Array.isArray(values) ? values : Object.keys(themeBreakpoints).map(function (bPoint) {\n    return values[bPoint];\n  });\n  return (_valArray$currentBrea = valArray[currentBreakpoint]) !== null && _valArray$currentBrea !== void 0 ? _valArray$currentBrea : valArray.slice(0, currentBreakpoint + 1).filter(function (v) {\n    return !isNil(v);\n  }).pop();\n}\nexport function getClosestBreakpoint(values, point) {\n  var dimValues = Object.values(values);\n  var index = -1;\n  var breakpointsObj = {};\n\n  for (var i = 0; i < dimValues.length; i++) {\n    breakpointsObj[dimValues[i]] = i;\n  }\n\n  var breakpoints = Object.keys(breakpointsObj);\n\n  for (var _i = 0; _i < breakpoints.length; _i++) {\n    if (parseInt(breakpoints[_i]) === point) {\n      index = breakpointsObj[breakpoints[_i]];\n      break;\n    } else if (parseInt(breakpoints[_i]) > point && _i !== 0) {\n      index = breakpointsObj[breakpoints[_i - 1]];\n      break;\n    } else if (parseInt(breakpoints[_i]) < point && _i === dimValues.length - 1) {\n      index = breakpointsObj[breakpoints[_i]];\n      break;\n    }\n  }\n\n  return index;\n}\nexport var baseFontSize = 16;\nexport var convertAbsoluteToRem = function convertAbsoluteToRem(px) {\n  return \"\".concat(px / baseFontSize, \"rem\");\n};\nexport var convertRemToAbsolute = function convertRemToAbsolute(rem) {\n  return rem * baseFontSize;\n};\nexport var convertToDp = function convertToDp(value) {\n  var numberRegex = /^\\d+$/;\n\n  if (typeof value === 'number') {\n    return value;\n  } else {\n    var isAbsolute = numberRegex.test(value);\n    var isPx = !isAbsolute && value.endsWith('px');\n    var isRem = !isAbsolute && value.endsWith('rem');\n    var isEm = !isAbsolute && value.endsWith('em');\n    var finalDpValue = 0;\n\n    if (isAbsolute || isPx) {\n      finalDpValue = parseFloat(value);\n    } else if (isEm) {\n      finalDpValue = convertRemToAbsolute(parseFloat(value));\n    } else if (isRem) {\n      finalDpValue = convertRemToAbsolute(parseFloat(value));\n    }\n\n    return finalDpValue;\n  }\n};\nexport var platformSpecificSpaceUnits = function platformSpecificSpaceUnits(theme) {\n  var scales = ['space', 'sizes', 'fontSizes'];\n\n  var newTheme = _objectSpread({}, theme);\n\n  var isWeb = Platform.OS === 'web';\n  scales.forEach(function (key) {\n    var scale = get(theme, key, {});\n\n    var newScale = _objectSpread({}, scale);\n\n    for (var scaleKey in scale) {\n      var val = scale[scaleKey];\n\n      if (typeof val !== 'object') {\n        var isAbsolute = typeof val === 'number';\n        var isPx = !isAbsolute && val.endsWith('px');\n        var isRem = !isAbsolute && val.endsWith('rem');\n\n        if (isWeb) {\n          if (isAbsolute) {\n            newScale[scaleKey] = convertAbsoluteToRem(val);\n          }\n        } else {\n          if (isRem) {\n            newScale[scaleKey] = convertRemToAbsolute(parseFloat(val));\n          } else if (isPx) {\n            newScale[scaleKey] = parseFloat(val);\n          }\n        }\n      }\n    }\n\n    newTheme[key] = newScale;\n  });\n  return newTheme;\n};\nexport function isResponsiveAnyProp(props, theme) {\n  if (props) {\n    var keys = Object.keys(props);\n\n    for (var i = 0; i < keys.length; i++) {\n      if (hasValidBreakpointFormat(props[keys[i]], theme.breakpoints, keys[i])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/theme/tools/utils.js"],"names":["stylingProps","margin","padding","border","layout","flexbox","position","background","omitBy","result","characters","charactersLength","i","Math","ret","Object","values","obj","omitUndefined","orderedPick","omit","pick","theme","colorScheme","isDisabled","props","simpleColorScheme","customColorScheme","inValidBreakpointProps","property","Array","breaks","keys","themeBreakPointKeys","valArray","_valArray$currentBrea","currentBreakpoint","isNil","dimValues","index","breakpointsObj","breakpoints","parseInt","baseFontSize","convertAbsoluteToRem","px","convertRemToAbsolute","rem","convertToDp","numberRegex","isAbsolute","isPx","value","isRem","isEm","finalDpValue","parseFloat","platformSpecificSpaceUnits","scales","newTheme","isWeb","Platform","scale","get","newScale","val","hasValidBreakpointFormat"],"mappings":"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","sourcesContent":["import omitBy from 'lodash.omitby';\nimport isNil from 'lodash.isnil';\nimport pick from 'lodash.pick';\nimport omit from 'lodash.omit';\nimport get from 'lodash.get';\nimport { Platform } from 'react-native';\nexport const stylingProps = {\n  margin: ['margin', 'm', 'marginTop', 'mt', 'marginRight', 'mr', 'marginBottom', 'mb', 'marginLeft', 'ml', 'marginX', 'mx', 'marginY', 'my'],\n  padding: ['padding', 'p', 'paddingTop', 'pt', 'paddingRight', 'pr', 'paddingBottom', 'pb', 'paddingLeft', 'pl', 'paddingX', 'px', 'paddingY', 'py'],\n  border: ['border', 'borderWidth', 'borderStyle', 'borderColor', 'borderRadius', 'borderTop', 'borderTopWidth', 'borderTopStyle', 'borderTopColor', 'borderTopLeftRadius', 'borderTopRightRadius', 'borderRight', 'borderRightWidth', 'borderRightStyle', 'borderRightColor', 'borderBottom', 'borderBottomWidth', 'borderBottomStyle', 'borderBottomColor', 'borderBottomLeftRadius', 'borderBottomRightRadius', 'borderLeft', 'borderLeftWidth', 'borderLeftStyle', 'borderLeftColor', 'borderX', 'borderY'],\n  layout: ['width', 'w', 'height', 'h', 'display', 'minWidth', 'minW', 'minH', 'minHeight', 'maxWidth', 'maxW', 'maxHeight', 'maxH', 'size', 'verticalAlign', 'overflow', 'overflowX', 'overflowY'],\n  flexbox: ['alignItems', 'alignContent', 'justifyItems', 'justifyContent', 'flexWrap', 'flexDirection', 'flex', 'flexGrow', 'flexShrink', 'flexBasis', 'justifySelf', 'alignSelf', 'order'],\n  position: ['position', 'zIndex', 'top', 'right', 'bottom', 'left'],\n  background: ['bg', 'backgroundColor', 'bgColor']\n};\nexport function omitUndefined(obj) {\n  return omitBy(obj, isNil);\n}\nexport function getRandomString(length) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n} // Inefficient way for pick, but retains order of props.\n\nfunction orderedPick(obj, values) {\n  const ret = {};\n  Object.keys(obj).forEach(key => {\n    if (values.includes(key)) {\n      ret[key] = obj[key];\n    }\n  });\n  return ret;\n}\n\nexport function orderedExtractInObject(parent, values) {\n  return [omitUndefined(orderedPick(parent, values)), omitUndefined(omit(parent, values))];\n}\n/**\n *\n * @param parent The object from which data needs to extracted\n * @param values Keys which needs to be extracted\n * @returns [extractedProps, remainingProps]\n */\n\nexport function extractInObject(parent, values) {\n  return [omitUndefined(pick(parent, values)), omitUndefined(omit(parent, values))];\n}\nexport function getColorFormColorScheme(props) {\n  const {\n    theme,\n    colorScheme,\n    isDisabled\n  } = props;\n  const simpleColorScheme = colorScheme.split('.')[0];\n  if (isDisabled) return 'gray.300';else if (simpleColorScheme in theme.colors) {\n    return theme.colors[simpleColorScheme][0] === '#' ? simpleColorScheme : theme.colors[simpleColorScheme][400] || theme.colors[simpleColorScheme][200];\n  } else return 'primary.200';\n} // TODO: This function can be removed.\n\nexport function getColorScheme(props, customColorScheme) {\n  let {\n    theme,\n    colorScheme\n  } = props;\n  colorScheme = customColorScheme || colorScheme;\n  if (!(colorScheme in theme.colors)) return 'primary';else {\n    if (typeof theme.colors[colorScheme] === 'object') return colorScheme;\n  }\n}\nexport const inValidBreakpointProps = ['style', 'children', 'shadowOffset'];\nexport function hasValidBreakpointFormat(breaks, themeBreakpoints, property) {\n  if (property && inValidBreakpointProps.indexOf(property) !== -1) {\n    return false;\n  } else if (Array.isArray(breaks)) {\n    return breaks.length ? true : false;\n  } else if (typeof breaks === 'object' && breaks !== null) {\n    const keys = Object.keys(breaks);\n    const themeBreakPointKeys = Object.keys(themeBreakpoints);\n\n    for (let i = 0; i < keys.length; i++) {\n      if (themeBreakPointKeys.indexOf(keys[i]) === -1) {\n        return false;\n      }\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function findLastValidBreakpoint(values, themeBreakpoints, currentBreakpoint) {\n  var _valArray$currentBrea;\n\n  const valArray = Array.isArray(values) ? values : Object.keys(themeBreakpoints).map(bPoint => values[bPoint]);\n  return (_valArray$currentBrea = valArray[currentBreakpoint]) !== null && _valArray$currentBrea !== void 0 ? _valArray$currentBrea : valArray.slice(0, currentBreakpoint + 1).filter(v => !isNil(v)).pop();\n}\nexport function getClosestBreakpoint(values, point) {\n  const dimValues = Object.values(values);\n  let index = -1;\n  let breakpointsObj = {};\n\n  for (let i = 0; i < dimValues.length; i++) {\n    breakpointsObj[dimValues[i]] = i;\n  }\n\n  const breakpoints = Object.keys(breakpointsObj);\n\n  for (let i = 0; i < breakpoints.length; i++) {\n    if (parseInt(breakpoints[i]) === point) {\n      index = breakpointsObj[breakpoints[i]];\n      break;\n    } else if (parseInt(breakpoints[i]) > point && i !== 0) {\n      index = breakpointsObj[breakpoints[i - 1]];\n      break;\n    } // If windowWidth is greater than last available breakpoint clamp it to last index\n    else if (parseInt(breakpoints[i]) < point && i === dimValues.length - 1) {\n        index = breakpointsObj[breakpoints[i]];\n        break;\n      }\n  }\n\n  return index;\n}\nexport const baseFontSize = 16;\nexport const convertAbsoluteToRem = px => {\n  return \"\".concat(px / baseFontSize, \"rem\");\n};\nexport const convertRemToAbsolute = rem => {\n  return rem * baseFontSize;\n};\nexport const convertToDp = value => {\n  const numberRegex = /^\\d+$/;\n\n  if (typeof value === 'number') {\n    return value;\n  } else {\n    const isAbsolute = numberRegex.test(value);\n    const isPx = !isAbsolute && value.endsWith('px');\n    const isRem = !isAbsolute && value.endsWith('rem');\n    const isEm = !isAbsolute && value.endsWith('em');\n    let finalDpValue = 0;\n\n    if (isAbsolute || isPx) {\n      finalDpValue = parseFloat(value);\n    } else if (isEm) {\n      finalDpValue = convertRemToAbsolute(parseFloat(value));\n    } else if (isRem) {\n      finalDpValue = convertRemToAbsolute(parseFloat(value));\n    }\n\n    return finalDpValue;\n  }\n};\n/**\n *\n * @param theme\n * @description\n  - Converts space/sizes/lineHeights/letterSpacings/fontSizes to `rem` on web if the token value specified is an absolute number.\n  - Converts space/sizes/lineHeights/letterSpacings/fontSizes to absolute number on native if the token value specified is in `px` or `rem`\n*/\n\nexport const platformSpecificSpaceUnits = theme => {\n  const scales = ['space', 'sizes', 'fontSizes'];\n  const newTheme = { ...theme\n  };\n  const isWeb = Platform.OS === 'web';\n  scales.forEach(key => {\n    const scale = get(theme, key, {});\n    const newScale = { ...scale\n    };\n\n    for (const scaleKey in scale) {\n      const val = scale[scaleKey];\n\n      if (typeof val !== 'object') {\n        const isAbsolute = typeof val === 'number';\n        const isPx = !isAbsolute && val.endsWith('px');\n        const isRem = !isAbsolute && val.endsWith('rem'); // If platform is web, we need to convert absolute unit to rem. e.g. 16 to 1rem\n\n        if (isWeb) {\n          if (isAbsolute) {\n            newScale[scaleKey] = convertAbsoluteToRem(val);\n          }\n        } // If platform is not web, we need to convert px unit to absolute and rem unit to absolute. e.g. 16px to 16. 1rem to 16.\n        else {\n            if (isRem) {\n              newScale[scaleKey] = convertRemToAbsolute(parseFloat(val));\n            } else if (isPx) {\n              newScale[scaleKey] = parseFloat(val);\n            }\n          }\n      }\n    } //@ts-ignore\n\n\n    newTheme[key] = newScale;\n  });\n  return newTheme;\n};\nexport function isResponsiveAnyProp(props, theme) {\n  if (props) {\n    const keys = Object.keys(props);\n\n    for (let i = 0; i < keys.length; i++) {\n      if (hasValidBreakpointFormat(props[keys[i]], theme.breakpoints, keys[i])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}