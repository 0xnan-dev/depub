{"ast":null,"code":"import _objectWithoutProperties from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"htmlProps\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport Box from \"../../primitives/Box\";\nimport { useFormControlProvider, FormControlContext } from \"./useFormControl\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar FormControl = function FormControl(props, ref) {\n  _s();\n\n  var _useFormControlProvid = useFormControlProvider(props),\n      htmlProps = _useFormControlProvid.htmlProps,\n      context = _objectWithoutProperties(_useFormControlProvid, _excluded);\n\n  var resolvedProps = usePropsResolution('FormControl', props, {\n    isDisabled: context.isDisabled,\n    isReadOnly: context.isReadOnly,\n    isInvalid: context.isInvalid\n  });\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(FormControlContext.Provider, {\n    value: context\n  }, React.createElement(Box, _extends({\n    width: \"100%\"\n  }, resolvedProps, htmlProps, {\n    ref: ref\n  })));\n};\n\n_s(FormControl, \"VHuSqZsQeChkol2KhosOYoKfUpw=\", false, function () {\n  return [useFormControlProvider, usePropsResolution, useHasResponsiveProps];\n});\n\n_c = FormControl;\nexport default _c3 = memo(_c2 = forwardRef(FormControl));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FormControl\");\n$RefreshReg$(_c2, \"%default%$memo\");\n$RefreshReg$(_c3, \"%default%\");\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/components/composites/FormControl/FormControl.js"],"names":["_extends","Object","i","arguments","source","target","FormControl","htmlProps","context","useFormControlProvider","resolvedProps","usePropsResolution","isDisabled","isReadOnly","isInvalid","useHasResponsiveProps","React","FormControlContext","value","width","ref","memo","forwardRef"],"mappings":";;;;;;AAAA,SAAA,QAAA,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAANA,MAAAA,IAAiB,UAAA,MAAA,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,SAAS,CAA7B,MAAA,EAAsCD,CAAtC,EAAA,EAA2C;AAAE,UAAIE,MAAM,GAAGD,SAAS,CAAtB,CAAsB,CAAtB;;AAA2B,WAAK,IAAL,GAAA,IAAA,MAAA,EAAwB;AAAE,YAAIF,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAJ,GAAIA,CAAJ,EAAuD;AAAEI,UAAAA,MAAM,CAANA,GAAM,CAANA,GAAcD,MAAM,CAApBC,GAAoB,CAApBA;AAA8B;AAAE;AAAC;;AAAA,WAAA,MAAA;AAA5OL,GAAAA;;AAA8P,SAAOA,QAAQ,CAARA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AAEpR;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,SAAA,kBAAA;AACA,OAAA,GAAA;AACA,SAAA,sBAAA,EAAA,kBAAA;AACA,SAAA,qBAAA;;AAEA,IAAMM,WAAW,GAAXA,SAAAA,WAAAA,CAAc,KAAdA,EAAc,GAAdA,EAA8B;AAAA,EAAA,EAAA;;AAClC,MAAA,qBAAA,GAGIG,sBAAsB,CAH1B,KAG0B,CAH1B;AAAA,MACEF,SADF,GAAA,qBAAA,CAAA,SAAA;AAAA,MAEKC,OAFL,GAAA,wBAAA,CAAA,qBAAA,EAAA,SAAA,CAAA;;AAIA,MAAME,aAAa,GAAGC,kBAAkB,CAAA,aAAA,EAAA,KAAA,EAAuB;AAC7DC,IAAAA,UAAU,EAAEJ,OAAO,CAD0C,UAAA;AAE7DK,IAAAA,UAAU,EAAEL,OAAO,CAF0C,UAAA;AAG7DM,IAAAA,SAAS,EAAEN,OAAO,CAHpB;AAA+D,GAAvB,CAAxC;;AAOA,MAAIO,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AAGF;;AAAA,SAAoBC,KAAK,CAALA,aAAAA,CAAoBC,kBAAkB,CAAtCD,QAAAA,EAAiD;AACnEE,IAAAA,KAAK,EADaF;AAAiD,GAAjDA,EAEJA,KAAK,CAALA,aAAAA,CAAAA,GAAAA,EAAyBhB,QAAQ,CAAC;AAChDmB,IAAAA,KAAK,EAD0C;AAAC,GAAD,EAAA,aAAA,EAAA,SAAA,EAEpB;AAC3BC,IAAAA,GAAG,EALL;AAI6B,GAFoB,CAAjCJ,CAFIA,CAApB;AAhBF,CAAA;;GAAMV,W;UAIAG,sB,EACkBE,kB,EAOlBI,qB;;;KAZAT,W;AAyBN,eAAA,GAAA,GAA4Be,IAAI,CAAA,GAAA,GAAeC,UAAU,CAAzD,WAAyD,CAAzB,CAAhC","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport Box from '../../primitives/Box';\nimport { useFormControlProvider, FormControlContext } from './useFormControl';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst FormControl = (props, ref) => {\n  const {\n    htmlProps,\n    ...context\n  } = useFormControlProvider(props);\n  const resolvedProps = usePropsResolution('FormControl', props, {\n    isDisabled: context.isDisabled,\n    isReadOnly: context.isReadOnly,\n    isInvalid: context.isInvalid // isRequired: context.isRequired,\n\n  }); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(Box, _extends({\n    width: \"100%\"\n  }, resolvedProps, htmlProps, {\n    ref: ref\n  })));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(FormControl));\n//# sourceMappingURL=FormControl.js.map"]},"metadata":{},"sourceType":"module"}