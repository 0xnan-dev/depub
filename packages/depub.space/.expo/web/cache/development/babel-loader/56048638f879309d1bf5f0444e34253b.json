{"ast":null,"code":"import _objectWithoutProperties from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"_web\", \"_ios\", \"_android\"];\nimport merge from 'lodash.merge';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport var usePlatformProps = function usePlatformProps(props) {\n  var _web = props._web,\n      _ios = props._ios,\n      _android = props._android,\n      remainingProps = _objectWithoutProperties(props, _excluded);\n\n  var platformProps = function platformProps() {\n    switch (Platform.OS) {\n      case 'web':\n        return _web;\n\n      case 'ios':\n        return _ios;\n\n      case 'android':\n        return _android;\n\n      default:\n        return {};\n    }\n  };\n\n  return merge(remainingProps, platformProps());\n};\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/hooks/usePlatformProps.js"],"names":["usePlatformProps","_web","_ios","_android","remainingProps","props","platformProps","Platform","merge"],"mappings":";;AAAA,OAAA,KAAA,MAAA,cAAA;;AAEA,OAAO,IAAMA,gBAAgB,GAAhBA,SAAAA,gBAAAA,CAAmB,KAAnBA,EAA4B;AACvC,MACEC,IADF,GAKII,KALJ,CAAA,IAAA;AAAA,MAEEH,IAFF,GAKIG,KALJ,CAAA,IAAA;AAAA,MAGEF,QAHF,GAKIE,KALJ,CAAA,QAAA;AAAA,MAIKD,cAJL,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;AAOA,MAAME,aAAa,GAAbA,SAAAA,aAAAA,GAAsB;AAC1B,YAAQC,QAAQ,CAAhB,EAAA;AACE,WAAA,KAAA;AACE,eAAA,IAAA;;AAEF,WAAA,KAAA;AACE,eAAA,IAAA;;AAEF,WAAA,SAAA;AACE,eAAA,QAAA;;AAEF;AACE,eAXJ,EAWI;AAXJ;AADF,GAAA;;AAgBA,SAAOC,KAAK,CAAA,cAAA,EAAiBF,aAA7B,EAAY,CAAZ;AAxBK,CAAA","sourcesContent":["import merge from 'lodash.merge';\nimport { Platform } from 'react-native';\nexport const usePlatformProps = props => {\n  const {\n    _web,\n    _ios,\n    _android,\n    ...remainingProps\n  } = props;\n\n  const platformProps = () => {\n    switch (Platform.OS) {\n      case 'web':\n        return _web;\n\n      case 'ios':\n        return _ios;\n\n      case 'android':\n        return _android;\n\n      default:\n        return {};\n    }\n  };\n\n  return merge(remainingProps, platformProps());\n};\n//# sourceMappingURL=usePlatformProps.js.map"]},"metadata":{},"sourceType":"module"}