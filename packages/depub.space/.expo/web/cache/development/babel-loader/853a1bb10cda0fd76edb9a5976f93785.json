{"ast":null,"code":"import { getColorFormColorScheme, getColorScheme, mode } from \"../tools\";\n\nfunction baseStyle(props) {\n  var activeColor = getColorFormColorScheme(props);\n  return {\n    activeTabStyle: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      mb: '-2px',\n      flexDirection: 'row',\n      _text: {\n        fontSize: 'sm',\n        fontWeight: 'bold'\n      }\n    },\n    inactiveTabStyle: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      mb: '-2px',\n      flexDirection: 'row',\n      _text: {\n        color: mode('gray.500', 'gray.400')(props),\n        fontSize: 'sm',\n        fontWeight: 'bold'\n      }\n    },\n    activeIconProps: {\n      color: activeColor,\n      name: 'home',\n      mx: 2\n    },\n    inactiveIconProps: {\n      name: 'home',\n      mx: 2\n    }\n  };\n}\n\nvar sizes = {\n  sm: {\n    activeTabStyle: {\n      _text: {\n        fontSize: 'sm'\n      },\n      py: 2,\n      px: 3\n    },\n    inactiveTabStyle: {\n      _text: {\n        fontSize: 'sm'\n      },\n      py: 2,\n      px: 3\n    }\n  },\n  md: {\n    activeTabStyle: {\n      _text: {\n        fontSize: 'md'\n      },\n      py: 3,\n      px: 4\n    },\n    inactiveTabStyle: {\n      _text: {\n        fontSize: 'md'\n      },\n      py: 3,\n      px: 4\n    }\n  },\n  lg: {\n    activeTabStyle: {\n      _text: {\n        fontSize: 'lg'\n      },\n      py: 4,\n      px: 5\n    },\n    inactiveTabStyle: {\n      _text: {\n        fontSize: 'lg'\n      },\n      py: 4,\n      px: 5\n    }\n  }\n};\n\nfunction variantOutline(props) {\n  var activeColor = getColorFormColorScheme(props);\n  var colorScheme = props.colorScheme,\n      status = props.status;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: {\n        color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props)\n      },\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      },\n      borderBottomWidth: 2\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      }\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props)\n    }\n  };\n}\n\nfunction variantFilled(props) {\n  var activeColor = getColorFormColorScheme(props);\n  var colorScheme = props.colorScheme,\n      status = props.status;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: {\n        color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props)\n      },\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      },\n      borderBottomWidth: 2,\n      bg: mode(\"\".concat(colorScheme, \".100\"), \"\".concat(colorScheme, \".700\"))(props)\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      }\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props)\n    }\n  };\n}\n\nfunction variantFilledOutline(props) {\n  var activeColor = getColorFormColorScheme(props);\n  var colorScheme = props.colorScheme,\n      status = props.status;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: {\n        color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props)\n      },\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      },\n      borderBottomWidth: 2\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      }\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props),\n      bg: mode(\"\".concat(colorScheme, \".100\"), \"\".concat(colorScheme, \".700\"))(props)\n    }\n  };\n}\n\nvar variants = {\n  'outline': variantOutline,\n  'filled': variantFilled,\n  'filled-outline': variantFilledOutline\n};\nvar defaultProps = {\n  size: 'md',\n  variant: 'outline',\n  colorScheme: 'primary'\n};\nexport default {\n  baseStyle: baseStyle,\n  variants: variants,\n  sizes: sizes,\n  defaultProps: defaultProps\n};\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/theme/components/tabs.js"],"names":["activeColor","getColorFormColorScheme","activeTabStyle","justifyContent","alignItems","mb","flexDirection","_text","fontSize","fontWeight","inactiveTabStyle","color","mode","activeIconProps","name","mx","inactiveIconProps","sizes","sm","py","px","md","lg","colorScheme","status","props","getColorScheme","borderColor","_hover","bg","borderBottomWidth","tabBarStyle","variants","defaultProps","size","variant","baseStyle"],"mappings":"AAAA,SAAA,uBAAA,EAAA,cAAA,EAAA,IAAA;;AAEA,SAAA,SAAA,CAAA,KAAA,EAA0B;AACxB,MAAMA,WAAW,GAAGC,uBAAuB,CAA3C,KAA2C,CAA3C;AACA,SAAO;AACLC,IAAAA,cAAc,EAAE;AACdC,MAAAA,cAAc,EADA,QAAA;AAEdC,MAAAA,UAAU,EAFI,QAAA;AAGdC,MAAAA,EAAE,EAHY,MAAA;AAIdC,MAAAA,aAAa,EAJC,KAAA;AAKdC,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EADH,IAAA;AAELC,QAAAA,UAAU,EART;AAMI;AALO,KADX;AAWLC,IAAAA,gBAAgB,EAAE;AAChBP,MAAAA,cAAc,EADE,QAAA;AAEhBC,MAAAA,UAAU,EAFM,QAAA;AAGhBC,MAAAA,EAAE,EAHc,MAAA;AAIhBC,MAAAA,aAAa,EAJG,KAAA;AAKhBC,MAAAA,KAAK,EAAE;AACLI,QAAAA,KAAK,EAAEC,IAAI,CAAA,UAAA,EAAJA,UAAI,CAAJA,CADF,KACEA,CADF;AAELJ,QAAAA,QAAQ,EAFH,IAAA;AAGLC,QAAAA,UAAU,EAnBT;AAgBI;AALS,KAXb;AAsBLI,IAAAA,eAAe,EAAE;AACfF,MAAAA,KAAK,EADU,WAAA;AAEfG,MAAAA,IAAI,EAFW,MAAA;AAGfC,MAAAA,EAAE,EAzBC;AAsBY,KAtBZ;AA2BLC,IAAAA,iBAAiB,EAAE;AACjBF,MAAAA,IAAI,EADa,MAAA;AAEjBC,MAAAA,EAAE,EA7BN;AA2BqB;AA3Bd,GAAP;AAkCF;;AAAA,IAAME,KAAK,GAAG;AACZC,EAAAA,EAAE,EAAE;AACFhB,IAAAA,cAAc,EAAE;AACdK,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAFI;AACP,OADO;AAIdW,MAAAA,EAAE,EAJY,CAAA;AAKdC,MAAAA,EAAE,EANF;AACc,KADd;AAQFV,IAAAA,gBAAgB,EAAE;AAChBH,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAFM;AACT,OADS;AAIhBW,MAAAA,EAAE,EAJc,CAAA;AAKhBC,MAAAA,EAAE,EAdM;AASQ;AARhB,GADQ;AAiBZC,EAAAA,EAAE,EAAE;AACFnB,IAAAA,cAAc,EAAE;AACdK,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAFI;AACP,OADO;AAIdW,MAAAA,EAAE,EAJY,CAAA;AAKdC,MAAAA,EAAE,EANF;AACc,KADd;AAQFV,IAAAA,gBAAgB,EAAE;AAChBH,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAFM;AACT,OADS;AAIhBW,MAAAA,EAAE,EAJc,CAAA;AAKhBC,MAAAA,EAAE,EA9BM;AAyBQ;AARhB,GAjBQ;AAiCZE,EAAAA,EAAE,EAAE;AACFpB,IAAAA,cAAc,EAAE;AACdK,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAFI;AACP,OADO;AAIdW,MAAAA,EAAE,EAJY,CAAA;AAKdC,MAAAA,EAAE,EANF;AACc,KADd;AAQFV,IAAAA,gBAAgB,EAAE;AAChBH,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAFM;AACT,OADS;AAIhBW,MAAAA,EAAE,EAJc,CAAA;AAKhBC,MAAAA,EAAE,EA9CR;AAyCsB;AARhB;AAjCQ,CAAd;;AAmDA,SAAA,cAAA,CAAA,KAAA,EAA+B;AAC7B,MAAMpB,WAAW,GAAGC,uBAAuB,CAA3C,KAA2C,CAA3C;AACA,MACEsB,WADF,GAGIE,KAHJ,CAAA,WAAA;AAAA,MAEED,MAFF,GAGIC,KAHJ,CAAA,MAAA;AAIAF,EAAAA,WAAW,GAAGG,cAAc,CAAA,KAAA,EAAQH,WAAW,KAAXA,SAAAA,GAAAA,WAAAA,GAApCA,MAA4B,CAA5BA;AACA,SAAO;AACLrB,IAAAA,cAAc,EAAE;AACdyB,MAAAA,WAAW,EADG,WAAA;AAEdpB,MAAAA,KAAK,EAAE;AACLI,QAAAA,KAAK,EAAEC,IAAI,CAAC,GAAA,MAAA,CAAA,WAAA,EAAD,MAAC,CAAD,EAAiC,GAAA,MAAA,CAAA,WAAA,EAArCA,MAAqC,CAAjC,CAAJA,CAHK,KAGLA;AADF,OAFO;AAKdgB,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAEjB,IAAI,CAAC,GAAA,MAAA,CAAA,WAAA,EAAD,KAAC,CAAD,EAAgC,GAAA,MAAA,CAAA,WAAA,EAApCA,MAAoC,CAAhC,CAAJA,CANQ,KAMRA;AADE,OALM;AAQdkB,MAAAA,iBAAiB,EATd;AACW,KADX;AAWLpB,IAAAA,gBAAgB,EAAE;AAChBiB,MAAAA,WAAW,EADK,aAAA;AAEhBG,MAAAA,iBAAiB,EAFD,CAAA;AAGhBF,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAEjB,IAAI,CAAC,GAAA,MAAA,CAAA,WAAA,EAAD,KAAC,CAAD,EAAgC,GAAA,MAAA,CAAA,WAAA,EAApCA,MAAoC,CAAhC,CAAJA,CAfH,KAeGA;AADE;AAHQ,KAXb;AAkBLmB,IAAAA,WAAW,EAAE;AACXD,MAAAA,iBAAiB,EADN,CAAA;AAEXH,MAAAA,WAAW,EAAEf,IAAI,CAAA,WAAA,EAAJA,WAAI,CAAJA,CApBjB,KAoBiBA;AAFF;AAlBR,GAAP;AAyBF;;AAAA,SAAA,aAAA,CAAA,KAAA,EAA8B;AAC5B,MAAMZ,WAAW,GAAGC,uBAAuB,CAA3C,KAA2C,CAA3C;AACA,MACEsB,WADF,GAGIE,KAHJ,CAAA,WAAA;AAAA,MAEED,MAFF,GAGIC,KAHJ,CAAA,MAAA;AAIAF,EAAAA,WAAW,GAAGG,cAAc,CAAA,KAAA,EAAQH,WAAW,KAAXA,SAAAA,GAAAA,WAAAA,GAApCA,MAA4B,CAA5BA;AACA,SAAO;AACLrB,IAAAA,cAAc,EAAE;AACdyB,MAAAA,WAAW,EADG,WAAA;AAEdpB,MAAAA,KAAK,EAAE;AACLI,QAAAA,KAAK,EAAEC,IAAI,CAAC,GAAA,MAAA,CAAA,WAAA,EAAD,MAAC,CAAD,EAAiC,GAAA,MAAA,CAAA,WAAA,EAArCA,MAAqC,CAAjC,CAAJA,CAHK,KAGLA;AADF,OAFO;AAKdgB,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAEjB,IAAI,CAAC,GAAA,MAAA,CAAA,WAAA,EAAD,KAAC,CAAD,EAAgC,GAAA,MAAA,CAAA,WAAA,EAApCA,MAAoC,CAAhC,CAAJA,CANQ,KAMRA;AADE,OALM;AAQdkB,MAAAA,iBAAiB,EARH,CAAA;AASdD,MAAAA,EAAE,EAAEjB,IAAI,CAAC,GAAA,MAAA,CAAA,WAAA,EAAD,MAAC,CAAD,EAAiC,GAAA,MAAA,CAAA,WAAA,EAArCA,MAAqC,CAAjC,CAAJA,CAVD,KAUCA;AATU,KADX;AAYLF,IAAAA,gBAAgB,EAAE;AAChBiB,MAAAA,WAAW,EADK,aAAA;AAEhBG,MAAAA,iBAAiB,EAFD,CAAA;AAGhBF,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAEjB,IAAI,CAAC,GAAA,MAAA,CAAA,WAAA,EAAD,KAAC,CAAD,EAAgC,GAAA,MAAA,CAAA,WAAA,EAApCA,MAAoC,CAAhC,CAAJA,CAhBH,KAgBGA;AADE;AAHQ,KAZb;AAmBLmB,IAAAA,WAAW,EAAE;AACXD,MAAAA,iBAAiB,EADN,CAAA;AAEXH,MAAAA,WAAW,EAAEf,IAAI,CAAA,WAAA,EAAJA,WAAI,CAAJA,CArBjB,KAqBiBA;AAFF;AAnBR,GAAP;AA0CF;;AAAA,SAAA,oBAAA,CAAA,KAAA,EAAqC;AACnC,MAAMZ,WAAW,GAAGC,uBAAuB,CAA3C,KAA2C,CAA3C;AACA,MACEsB,WADF,GAGIE,KAHJ,CAAA,WAAA;AAAA,MAEED,MAFF,GAGIC,KAHJ,CAAA,MAAA;AAIAF,EAAAA,WAAW,GAAGG,cAAc,CAAA,KAAA,EAAQH,WAAW,KAAXA,SAAAA,GAAAA,WAAAA,GAApCA,MAA4B,CAA5BA;AACA,SAAO;AACLrB,IAAAA,cAAc,EAAE;AACdyB,MAAAA,WAAW,EADG,WAAA;AAEdpB,MAAAA,KAAK,EAAE;AACLI,QAAAA,KAAK,EAAEC,IAAI,CAAC,GAAA,MAAA,CAAA,WAAA,EAAD,MAAC,CAAD,EAAiC,GAAA,MAAA,CAAA,WAAA,EAArCA,MAAqC,CAAjC,CAAJA,CAHK,KAGLA;AADF,OAFO;AAKdgB,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAEjB,IAAI,CAAC,GAAA,MAAA,CAAA,WAAA,EAAD,KAAC,CAAD,EAAgC,GAAA,MAAA,CAAA,WAAA,EAApCA,MAAoC,CAAhC,CAAJA,CANQ,KAMRA;AADE,OALM;AAQdkB,MAAAA,iBAAiB,EATd;AACW,KADX;AAWLpB,IAAAA,gBAAgB,EAAE;AAChBiB,MAAAA,WAAW,EADK,aAAA;AAEhBG,MAAAA,iBAAiB,EAFD,CAAA;AAGhBF,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAEjB,IAAI,CAAC,GAAA,MAAA,CAAA,WAAA,EAAD,KAAC,CAAD,EAAgC,GAAA,MAAA,CAAA,WAAA,EAApCA,MAAoC,CAAhC,CAAJA,CAfH,KAeGA;AADE;AAHQ,KAXb;AAkBLmB,IAAAA,WAAW,EAAE;AACXD,MAAAA,iBAAiB,EADN,CAAA;AAEXH,MAAAA,WAAW,EAAEf,IAAI,CAAA,WAAA,EAAJA,WAAI,CAAJA,CAFF,KAEEA,CAFF;AAGXiB,MAAAA,EAAE,EAAEjB,IAAI,CAAC,GAAA,MAAA,CAAA,WAAA,EAAD,MAAC,CAAD,EAAiC,GAAA,MAAA,CAAA,WAAA,EAArCA,MAAqC,CAAjC,CAAJA,CArBR,KAqBQA;AAHO;AAlBR,GAAP;AA6DF;;AAAA,IAAMoB,QAAQ,GAAG;AACf,aADe,cAAA;AAEf,YAFe,aAAA;AAGf,oBAHF;AAAiB,CAAjB;AAQA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EADe,IAAA;AAEnBC,EAAAA,OAAO,EAFY,SAAA;AAGnBZ,EAAAA,WAAW,EAHb;AAAqB,CAArB;AAKA,eAAe;AACba,EAAAA,SAAS,EADI,SAAA;AAEbJ,EAAAA,QAAQ,EAFK,QAAA;AAGbf,EAAAA,KAAK,EAHQ,KAAA;AAIbgB,EAAAA,YAAY,EAJd;AAAe,CAAf","sourcesContent":["import { getColorFormColorScheme, getColorScheme, mode } from '../tools';\n\nfunction baseStyle(props) {\n  const activeColor = getColorFormColorScheme(props);\n  return {\n    activeTabStyle: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      mb: '-2px',\n      flexDirection: 'row',\n      _text: {\n        fontSize: 'sm',\n        fontWeight: 'bold'\n      }\n    },\n    inactiveTabStyle: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      mb: '-2px',\n      flexDirection: 'row',\n      _text: {\n        color: mode('gray.500', 'gray.400')(props),\n        fontSize: 'sm',\n        fontWeight: 'bold'\n      }\n    },\n    activeIconProps: {\n      color: activeColor,\n      name: 'home',\n      mx: 2\n    },\n    inactiveIconProps: {\n      name: 'home',\n      mx: 2\n    }\n  };\n}\n\nconst sizes = {\n  sm: {\n    activeTabStyle: {\n      _text: {\n        fontSize: 'sm'\n      },\n      py: 2,\n      px: 3\n    },\n    inactiveTabStyle: {\n      _text: {\n        fontSize: 'sm'\n      },\n      py: 2,\n      px: 3\n    }\n  },\n  md: {\n    activeTabStyle: {\n      _text: {\n        fontSize: 'md'\n      },\n      py: 3,\n      px: 4\n    },\n    inactiveTabStyle: {\n      _text: {\n        fontSize: 'md'\n      },\n      py: 3,\n      px: 4\n    }\n  },\n  lg: {\n    activeTabStyle: {\n      _text: {\n        fontSize: 'lg'\n      },\n      py: 4,\n      px: 5\n    },\n    inactiveTabStyle: {\n      _text: {\n        fontSize: 'lg'\n      },\n      py: 4,\n      px: 5\n    }\n  }\n};\n\nfunction variantOutline(props) {\n  const activeColor = getColorFormColorScheme(props);\n  let {\n    colorScheme,\n    status\n  } = props;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: {\n        color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props)\n      },\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      },\n      borderBottomWidth: 2\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      }\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props)\n    }\n  };\n}\n\nfunction variantFilled(props) {\n  const activeColor = getColorFormColorScheme(props);\n  let {\n    colorScheme,\n    status\n  } = props;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: {\n        color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props)\n      },\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      },\n      borderBottomWidth: 2,\n      bg: mode(\"\".concat(colorScheme, \".100\"), \"\".concat(colorScheme, \".700\"))(props)\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      }\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props)\n    }\n  };\n} // function variantEnclosed(props: Record<string, any>) {\n//   const activeColor = getColorFormColorScheme(props);\n//   return {\n//     activeTabStyle: {\n//       borderTopWidth: 2,\n//       borderLeftWidth: 2,\n//       borderRightWidth: 2,\n//       borderColor: activeColor,\n//     },\n//     inactiveTabStyle: {\n//       borderColor: 'muted.200',\n//       borderBottomWidth: 2,\n//     },\n//     tabBarStyle: {},\n//   };\n// }\n\n\nfunction variantFilledOutline(props) {\n  const activeColor = getColorFormColorScheme(props);\n  let {\n    colorScheme,\n    status\n  } = props;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: {\n        color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props)\n      },\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      },\n      borderBottomWidth: 2\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      }\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props),\n      bg: mode(\"\".concat(colorScheme, \".100\"), \"\".concat(colorScheme, \".700\"))(props)\n    }\n  };\n} // function varientSoftRounded(props: Record<string, any>) {\n//   const activeColor = getColorFormColorScheme(props);\n//   return {\n//     activeTabStyle: {\n//       borderRadius: 'full',\n//       bg: transparentize(activeColor, 0.7)(props.theme),\n//       color: 'white',\n//     },\n//     inactiveTabStyle: {},\n//     tabBarStyle: {},\n//   };\n// }\n// function varientSolidRounded(props: Record<string, any>) {\n//   const activeColor = getColorFormColorScheme(props);\n//   return {\n//     activeTabStyle: {\n//       borderRadius: 'full',\n//       bg: activeColor,\n//       color: 'white',\n//     },\n//     inactiveTabStyle: {},\n//     tabBarStyle: {},\n//   };\n// }\n// function varientSolidBox(props: Record<string, any>) {\n//   const activeColor = getColorFormColorScheme(props);\n//   return {\n//     activeTabStyle: {\n//       bg: activeColor,\n//       color: 'white',\n//     },\n//     inactiveTabStyle: {},\n//     tabBarStyle: {},\n//   };\n// }\n\n\nconst variants = {\n  'outline': variantOutline,\n  'filled': variantFilled,\n  'filled-outline': variantFilledOutline // 'soft-rounded': varientSoftRounded,\n  // 'solid-rounded': varientSolidRounded,\n  // 'solid-box': varientSolidBox,\n\n};\nconst defaultProps = {\n  size: 'md',\n  variant: 'outline',\n  colorScheme: 'primary'\n};\nexport default {\n  baseStyle,\n  variants,\n  sizes,\n  defaultProps\n};\n//# sourceMappingURL=tabs.js.map"]},"metadata":{},"sourceType":"module"}