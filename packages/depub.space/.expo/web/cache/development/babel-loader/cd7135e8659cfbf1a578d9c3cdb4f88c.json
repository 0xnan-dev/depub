{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { getClosestBreakpoint, hasValidBreakpointFormat, findLastValidBreakpoint } from \"../theme/tools\";\nimport { useTheme } from \"./../hooks/useTheme\";\nexport function useBreakpointValue(values) {\n  _s();\n\n  var _useWindowDimensions;\n\n  var windowWidth = (_useWindowDimensions = useWindowDimensions()) === null || _useWindowDimensions === void 0 ? void 0 : _useWindowDimensions.width;\n  var theme = useTheme();\n\n  if (hasValidBreakpointFormat(values, theme.breakpoints)) {\n    var currentBreakpoint = getClosestBreakpoint(theme.breakpoints, windowWidth);\n    return findLastValidBreakpoint(values, theme.breakpoints, currentBreakpoint);\n  } else {\n    return values;\n  }\n}\n\n_s(useBreakpointValue, \"RBaeiZNWQpZdtGaPRzSi03Cm9Cc=\", false, function () {\n  return [useWindowDimensions, useTheme];\n});\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/hooks/useBreakpointValue.js"],"names":["useBreakpointValue","windowWidth","_useWindowDimensions","useWindowDimensions","theme","useTheme","hasValidBreakpointFormat","currentBreakpoint","getClosestBreakpoint","findLastValidBreakpoint"],"mappings":";;;AACA,SAAA,oBAAA,EAAA,wBAAA,EAAA,uBAAA;AACA,SAAA,QAAA;AACA,OAAO,SAAA,kBAAA,CAAA,MAAA,EAAoC;AAAA,EAAA,EAAA;;AACzC,MAAA,oBAAA;;AAEA,MAAIC,WAAW,GAAG,CAACC,oBAAoB,GAAGC,mBAAxB,EAAA,MAAA,IAAA,IAA2DD,oBAAoB,KAAK,KAApF,CAAA,GAA6F,KAA7F,CAAA,GAAsGA,oBAAoB,CAA5I,KAAA;AACA,MAAME,KAAK,GAAGC,QAAd,EAAA;;AAEA,MAAIC,wBAAwB,CAAA,MAAA,EAASF,KAAK,CAA1C,WAA4B,CAA5B,EAAyD;AACvD,QAAIG,iBAAiB,GAAGC,oBAAoB,CAACJ,KAAK,CAAN,WAAA,EAA5C,WAA4C,CAA5C;AACA,WAAOK,uBAAuB,CAAA,MAAA,EAASL,KAAK,CAAd,WAAA,EAA9B,iBAA8B,CAA9B;AAFF,GAAA,MAGO;AACL,WAAA,MAAA;AAEH;;;GAZeJ,kB;UAG4BG,mB,EAC5BE,Q","sourcesContent":["import { useWindowDimensions } from 'react-native';\nimport { getClosestBreakpoint, hasValidBreakpointFormat, findLastValidBreakpoint } from '../theme/tools';\nimport { useTheme } from './../hooks/useTheme';\nexport function useBreakpointValue(values) {\n  var _useWindowDimensions;\n\n  let windowWidth = (_useWindowDimensions = useWindowDimensions()) === null || _useWindowDimensions === void 0 ? void 0 : _useWindowDimensions.width;\n  const theme = useTheme();\n\n  if (hasValidBreakpointFormat(values, theme.breakpoints)) {\n    let currentBreakpoint = getClosestBreakpoint(theme.breakpoints, windowWidth);\n    return findLastValidBreakpoint(values, theme.breakpoints, currentBreakpoint);\n  } else {\n    return values;\n  }\n}\n//# sourceMappingURL=useBreakpointValue.js.map"]},"metadata":{},"sourceType":"module"}