{"ast":null,"code":"export var dropdownDefaultStateValues = {\n  highlightedIndex: -1,\n  isOpen: false,\n  selectedItem: null,\n  inputValue: ''\n};\nexport function capitalizeString(string) {\n  return \"\".concat(string.slice(0, 1).toUpperCase()).concat(string.slice(1));\n}\nexport function getDefaultValue(props, propKey) {\n  var defaultStateValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : dropdownDefaultStateValues;\n  var defaultPropKey = \"default\".concat(capitalizeString(propKey));\n\n  if (defaultPropKey in props) {\n    return props[defaultPropKey];\n  }\n\n  return defaultStateValues[propKey];\n}\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/components/composites/Typeahead/useTypeahead/utils.js"],"names":["dropdownDefaultStateValues","highlightedIndex","isOpen","selectedItem","inputValue","string","defaultStateValues","defaultPropKey","capitalizeString","props"],"mappings":"AAAA,OAAO,IAAMA,0BAA0B,GAAG;AACxCC,EAAAA,gBAAgB,EAAE,CADsB,CAAA;AAExCC,EAAAA,MAAM,EAFkC,KAAA;AAGxCC,EAAAA,YAAY,EAH4B,IAAA;AAIxCC,EAAAA,UAAU,EAJL;AAAmC,CAAnC;AAMP,OAAO,SAAA,gBAAA,CAAA,MAAA,EAAkC;AACvC,SAAO,GAAA,MAAA,CAAUC,MAAM,CAANA,KAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAV,WAAUA,EAAV,EAAA,MAAA,CAAmDA,MAAM,CAANA,KAAAA,CAA1D,CAA0DA,CAAnD,CAAP;AAEF;AAAA,OAAO,SAAA,eAAA,CAAA,KAAA,EAAA,OAAA,EAA0F;AAAjDC,MAAAA,kBAAiD,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAA5BN,0BAArBM;AAC9C,MAAMC,cAAc,GAAG,UAAA,MAAA,CAAiBC,gBAAgB,CAAxD,OAAwD,CAAjC,CAAvB;;AAEA,MAAID,cAAc,IAAlB,KAAA,EAA6B;AAC3B,WAAOE,KAAK,CAAZ,cAAY,CAAZ;AAIF;;AAAA,SAAOH,kBAAkB,CAAzB,OAAyB,CAAzB;AACD","sourcesContent":["export const dropdownDefaultStateValues = {\n  highlightedIndex: -1,\n  isOpen: false,\n  selectedItem: null,\n  inputValue: ''\n};\nexport function capitalizeString(string) {\n  return \"\".concat(string.slice(0, 1).toUpperCase()).concat(string.slice(1));\n}\nexport function getDefaultValue(props, propKey, defaultStateValues = dropdownDefaultStateValues) {\n  const defaultPropKey = \"default\".concat(capitalizeString(propKey));\n\n  if (defaultPropKey in props) {\n    return props[defaultPropKey];\n  } //@ts-ignore\n\n\n  return defaultStateValues[propKey];\n}\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}