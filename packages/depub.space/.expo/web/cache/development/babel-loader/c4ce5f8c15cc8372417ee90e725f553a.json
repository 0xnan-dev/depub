{"ast":null,"code":"import _toConsumableArray from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"onValueChange\", \"selectedValue\", \"children\", \"dropdownIcon\", \"dropdownCloseIcon\", \"dropdownOpenIcon\", \"placeholder\", \"accessibilityLabel\", \"defaultValue\", \"_item\", \"_selectedItem\", \"onOpen\", \"onClose\", \"optimized\", \"customDropdownIconProps\", \"_actionSheetContent\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, memo } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Actionsheet } from \"../../composites/Actionsheet\";\nimport Box from \"../Box\";\nimport { Input } from \"../Input\";\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { useControllableState } from \"../../../hooks\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from \"../../../utils\";\nimport { useFormControl } from \"../../composites/FormControl\";\nimport { ChevronDownIcon } from \"../Icon/Icons\";\nimport { ScrollView } from \"../../basic/ScrollView\";\nimport { extractInObject, stylingProps } from \"../../../theme/tools/utils\";\nimport { FlatList } from \"../../basic/FlatList\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar unstyledSelecWebtStyles = {\n  appearance: 'none',\n  WebkitAppearance: 'none',\n  MozAppearance: 'none',\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  opacity: 0,\n  zIndex: 1\n};\nexport var SelectContext = React.createContext({\n  onValueChange: function onValueChange() {},\n  selectedValue: null,\n  _selectedItem: {},\n  _item: {}\n});\n\nvar Select = function Select(props, ref) {\n  _s();\n\n  var selectProps = useFormControl({\n    isDisabled: props.isDisabled,\n    nativeID: props.nativeID\n  });\n  var flatListData = [];\n  var isDisabled = selectProps.disabled;\n  var tempFix = '__NativebasePlaceholder__';\n\n  var _ref = React.useRef(null);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isOpen = _React$useState2[0],\n      setIsOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isFocused = _React$useState4[0],\n      setIsFocused = _React$useState4[1];\n\n  var _useFocusRing = useFocusRing(),\n      focusProps = _useFocusRing.focusProps,\n      isFocusVisible = _useFocusRing.isFocusVisible;\n\n  var _useHover = useHover({\n    isDisabled: isDisabled\n  }, _ref),\n      hoverProps = _useHover.hoverProps,\n      isHovered = _useHover.isHovered;\n\n  var _usePropsResolution = usePropsResolution('Select', props, {\n    isDisabled: isDisabled,\n    isHovered: isHovered,\n    isFocused: isFocused,\n    isFocusVisible: isFocusVisible\n  }, undefined),\n      onValueChange = _usePropsResolution.onValueChange,\n      selectedValue = _usePropsResolution.selectedValue,\n      children = _usePropsResolution.children,\n      dropdownIcon = _usePropsResolution.dropdownIcon,\n      dropdownCloseIcon = _usePropsResolution.dropdownCloseIcon,\n      dropdownOpenIcon = _usePropsResolution.dropdownOpenIcon,\n      placeholder = _usePropsResolution.placeholder,\n      accessibilityLabel = _usePropsResolution.accessibilityLabel,\n      defaultValue = _usePropsResolution.defaultValue,\n      _item = _usePropsResolution._item,\n      _selectedItem = _usePropsResolution._selectedItem,\n      onOpen = _usePropsResolution.onOpen,\n      onClose = _usePropsResolution.onClose,\n      optimized = _usePropsResolution.optimized,\n      customDropdownIconProps = _usePropsResolution.customDropdownIconProps,\n      _actionSheetContent = _usePropsResolution._actionSheetContent,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded);\n\n  var _useControllableState = useControllableState({\n    value: selectedValue,\n    defaultValue: defaultValue,\n    onChange: function onChange(newValue) {\n      onValueChange && onValueChange(newValue);\n      setIsOpen(false);\n    }\n  }),\n      _useControllableState2 = _slicedToArray(_useControllableState, 2),\n      value = _useControllableState2[0],\n      setValue = _useControllableState2[1];\n\n  var itemsList = React.Children.map(children, function (child) {\n    return {\n      label: child.props.label,\n      value: child.props.value\n    };\n  });\n  var selectedItemArray = itemsList.filter(function (item) {\n    return item.value === value;\n  });\n  var selectedItem = selectedItemArray && selectedItemArray.length ? selectedItemArray[0] : null;\n  var contextValue = React.useMemo(function () {\n    return {\n      onValueChange: setValue,\n      selectedValue: value,\n      _selectedItem: _selectedItem !== null && _selectedItem !== void 0 ? _selectedItem : {},\n      _item: _item !== null && _item !== void 0 ? _item : {}\n    };\n  }, [value, setValue, _selectedItem, _item]);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  var rightIcon = isOpen && dropdownOpenIcon ? dropdownOpenIcon : !isOpen && dropdownCloseIcon ? dropdownCloseIcon : dropdownIcon ? dropdownIcon : React.createElement(ChevronDownIcon, customDropdownIconProps);\n\n  var handleClose = function handleClose() {\n    setIsOpen(false);\n    onClose && onClose();\n  };\n\n  if (optimized) {\n    React.Children.map(children, function (child) {\n      flatListData.push(child.props);\n    });\n  }\n\n  var _extractInObject = extractInObject(resolvedProps, [].concat(_toConsumableArray(stylingProps.margin), _toConsumableArray(stylingProps.flexbox), _toConsumableArray(stylingProps.position), ['shadow', 'opacity'])),\n      _extractInObject2 = _slicedToArray(_extractInObject, 1),\n      layoutProps = _extractInObject2[0];\n\n  var commonInput = React.createElement(Input, _extends({\n    placeholder: placeholder,\n    InputRightElement: rightIcon\n  }, resolvedProps, {\n    isFocused: isFocused,\n    isHovered: isHovered,\n    \"aria-hidden\": true,\n    importantForAccessibility: \"no\",\n    value: selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.label,\n    editable: false,\n    focusable: false,\n    isDisabled: isDisabled,\n    pointerEvents: \"none\"\n  }));\n  return Platform.OS === 'web' ? React.createElement(Box, null, React.createElement(\"select\", _extends({\n    \"aria-readonly\": selectProps.readOnly,\n    required: selectProps.required,\n    disabled: isDisabled\n  }, focusProps, hoverProps, {\n    ref: mergeRefs([ref, _ref]),\n    style: unstyledSelecWebtStyles,\n    onChange: function onChange(e) {\n      setValue(e.target.value);\n    },\n    value: selectedItem === null ? tempFix : value,\n    \"aria-label\": placeholder,\n    onFocus: function onFocus() {\n      setIsFocused(true);\n      onOpen && onOpen();\n    },\n    onBlur: function onBlur() {\n      setIsFocused(false);\n      onClose && onClose();\n    }\n  }), React.createElement(\"option\", {\n    disabled: true,\n    value: tempFix\n  }, placeholder), children), commonInput) : React.createElement(React.Fragment, null, React.createElement(Pressable, _extends({\n    onPress: function onPress() {\n      Keyboard.dismiss();\n      setIsOpen(true);\n      onOpen && onOpen();\n    },\n    disabled: isDisabled,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    ref: mergeRefs([ref, _ref])\n  }, layoutProps), commonInput), React.createElement(Actionsheet, {\n    isOpen: isOpen,\n    onClose: handleClose\n  }, React.createElement(Actionsheet.Content, _actionSheetContent, optimized ? React.createElement(FlatList, {\n    w: \"100%\",\n    data: flatListData,\n    keyExtractor: function keyExtractor(_item, index) {\n      return index.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      var isSelected = selectedValue === item.value;\n      return React.createElement(Actionsheet.Item, _extends({\n        onPress: function onPress() {\n          if (!isDisabled) {\n            setValue(item.value);\n          }\n        },\n        accessibilityState: {\n          selected: isSelected\n        }\n      }, item, _item, isSelected && _selectedItem), item.label);\n    }\n  }) : React.createElement(ScrollView, {\n    width: \"100%\"\n  }, React.createElement(SelectContext.Provider, {\n    value: contextValue\n  }, children)))));\n};\n\n_s(Select, \"dJuA3Atb0nnQxWGN0FPBZZcQEdo=\", false, function () {\n  return [useFormControl, useFocusRing, useHover, usePropsResolution, useControllableState, useHasResponsiveProps];\n});\n\n_c = Select;\nexport default _c3 = memo(_c2 = forwardRef(Select));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Select\");\n$RefreshReg$(_c2, \"%default%$memo\");\n$RefreshReg$(_c3, \"%default%\");\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/components/primitives/Select/Select.js"],"names":["_extends","Object","i","arguments","source","target","unstyledSelecWebtStyles","appearance","WebkitAppearance","MozAppearance","position","width","height","opacity","zIndex","SelectContext","React","onValueChange","selectedValue","_selectedItem","_item","Select","selectProps","useFormControl","isDisabled","props","nativeID","flatListData","tempFix","_ref","isOpen","setIsOpen","isFocused","setIsFocused","focusProps","isFocusVisible","useFocusRing","hoverProps","isHovered","useHover","children","dropdownIcon","dropdownCloseIcon","dropdownOpenIcon","placeholder","accessibilityLabel","defaultValue","onOpen","onClose","optimized","customDropdownIconProps","_actionSheetContent","resolvedProps","usePropsResolution","value","setValue","useControllableState","onChange","itemsList","label","child","selectedItemArray","item","selectedItem","contextValue","useHasResponsiveProps","rightIcon","handleClose","layoutProps","extractInObject","stylingProps","commonInput","InputRightElement","importantForAccessibility","editable","focusable","pointerEvents","Platform","required","disabled","ref","mergeRefs","style","e","onFocus","onBlur","onPress","Keyboard","accessibilityRole","Actionsheet","w","data","keyExtractor","index","renderItem","isSelected","accessibilityState","selected","memo","forwardRef"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef, memo } from 'react';\nimport { Platform, Pressable, Keyboard } from 'react-native';\nimport { Actionsheet } from '../../composites/Actionsheet';\nimport Box from '../Box';\nimport { Input } from '../Input';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { useControllableState } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils';\nimport { useFormControl } from '../../composites/FormControl';\nimport { ChevronDownIcon } from '../Icon/Icons';\nimport { ScrollView } from '../../basic/ScrollView';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { FlatList } from '../../basic/FlatList';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nconst unstyledSelecWebtStyles = {\n  appearance: 'none',\n  WebkitAppearance: 'none',\n  MozAppearance: 'none',\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  opacity: 0,\n  zIndex: 1\n};\nexport const SelectContext = /*#__PURE__*/React.createContext({\n  onValueChange: () => {},\n  selectedValue: null,\n  _selectedItem: {},\n  _item: {}\n});\n\nconst Select = (props, ref) => {\n  const selectProps = useFormControl({\n    isDisabled: props.isDisabled,\n    nativeID: props.nativeID\n  });\n  const flatListData = [];\n  const isDisabled = selectProps.disabled;\n  const tempFix = '__NativebasePlaceholder__';\n\n  const _ref = React.useRef(null);\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [isFocused, setIsFocused] = React.useState(false);\n  const {\n    focusProps,\n    isFocusVisible\n  } = useFocusRing();\n  const {\n    hoverProps,\n    isHovered\n  } = useHover({\n    isDisabled\n  }, _ref);\n  const {\n    onValueChange,\n    selectedValue,\n    children,\n    dropdownIcon,\n    dropdownCloseIcon,\n    dropdownOpenIcon,\n    placeholder,\n    accessibilityLabel,\n    defaultValue,\n    _item,\n    _selectedItem,\n    onOpen,\n    onClose,\n    optimized,\n    customDropdownIconProps,\n    _actionSheetContent,\n    ...resolvedProps\n  } = usePropsResolution('Select', props, {\n    isDisabled,\n    isHovered,\n    isFocused,\n    isFocusVisible\n  }, undefined);\n  const [value, setValue] = useControllableState({\n    value: selectedValue,\n    defaultValue,\n    onChange: newValue => {\n      onValueChange && onValueChange(newValue);\n      setIsOpen(false);\n    }\n  });\n  const itemsList = React.Children.map(children, child => {\n    return {\n      label: child.props.label,\n      value: child.props.value\n    };\n  });\n  const selectedItemArray = itemsList.filter(item => item.value === value);\n  const selectedItem = selectedItemArray && selectedItemArray.length ? selectedItemArray[0] : null;\n  const contextValue = React.useMemo(() => {\n    return {\n      onValueChange: setValue,\n      selectedValue: value,\n      _selectedItem: _selectedItem !== null && _selectedItem !== void 0 ? _selectedItem : {},\n      _item: _item !== null && _item !== void 0 ? _item : {}\n    };\n  }, [value, setValue, _selectedItem, _item]); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  const rightIcon = isOpen && dropdownOpenIcon ? dropdownOpenIcon : !isOpen && dropdownCloseIcon ? dropdownCloseIcon : dropdownIcon ? dropdownIcon : /*#__PURE__*/React.createElement(ChevronDownIcon, customDropdownIconProps);\n\n  const handleClose = () => {\n    setIsOpen(false);\n    onClose && onClose();\n  };\n\n  if (optimized) {\n    React.Children.map(children, child => {\n      flatListData.push(child.props);\n    });\n  }\n\n  const [layoutProps] = extractInObject(resolvedProps, [...stylingProps.margin, ...stylingProps.flexbox, ...stylingProps.position, 'shadow', 'opacity']);\n  const commonInput = /*#__PURE__*/React.createElement(Input, _extends({\n    placeholder: placeholder,\n    InputRightElement: rightIcon\n  }, resolvedProps, {\n    // NOTE: Adding ts-ignore as we're not exposing isFocused in the Input component\n    // @ts-ignore-next-line\n    isFocused: isFocused,\n    isHovered: isHovered,\n    \"aria-hidden\": true,\n    importantForAccessibility: \"no\",\n    value: selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.label,\n    editable: false,\n    focusable: false,\n    isDisabled: isDisabled,\n    pointerEvents: \"none\"\n  }));\n  return Platform.OS === 'web' ? /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(\"select\", _extends({\n    \"aria-readonly\": selectProps.readOnly,\n    required: selectProps.required,\n    disabled: isDisabled\n  }, focusProps, hoverProps, {\n    ref: mergeRefs([ref, _ref]) //@ts-ignore\n    ,\n    style: unstyledSelecWebtStyles,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    value: selectedItem === null ? tempFix : value,\n    \"aria-label\": placeholder,\n    onFocus: () => {\n      setIsFocused(true);\n      onOpen && onOpen();\n    },\n    onBlur: () => {\n      setIsFocused(false);\n      onClose && onClose();\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    disabled: true,\n    value: tempFix\n  }, placeholder), children), commonInput) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Pressable, _extends({\n    onPress: () => {\n      Keyboard.dismiss();\n      setIsOpen(true);\n      onOpen && onOpen();\n    },\n    disabled: isDisabled,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    ref: mergeRefs([ref, _ref])\n  }, layoutProps), commonInput), /*#__PURE__*/React.createElement(Actionsheet, {\n    isOpen: isOpen,\n    onClose: handleClose\n  }, /*#__PURE__*/React.createElement(Actionsheet.Content, _actionSheetContent, optimized ? /*#__PURE__*/React.createElement(FlatList, {\n    w: \"100%\",\n    data: flatListData,\n    keyExtractor: (_item, index) => index.toString(),\n    renderItem: ({\n      item\n    }) => {\n      const isSelected = selectedValue === item.value;\n      return /*#__PURE__*/React.createElement(Actionsheet.Item, _extends({\n        onPress: () => {\n          if (!isDisabled) {\n            setValue(item.value);\n          }\n        },\n        accessibilityState: {\n          selected: isSelected\n        }\n      }, item, _item, isSelected && _selectedItem), item.label);\n    }\n  }) : /*#__PURE__*/React.createElement(ScrollView, {\n    width: \"100%\"\n  }, /*#__PURE__*/React.createElement(SelectContext.Provider, {\n    value: contextValue\n  }, children)))));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Select));\n//# sourceMappingURL=Select.js.map"]},"metadata":{},"sourceType":"module"}