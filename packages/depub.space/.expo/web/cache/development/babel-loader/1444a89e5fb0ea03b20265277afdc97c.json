{"ast":null,"code":"import { getColorScheme, mode } from \"../tools\";\nexport var SliderTrack = {\n  baseStyle: function baseStyle(props) {\n    var simplifiedColorScheme = getColorScheme(props);\n    return {\n      bg: \"\".concat(simplifiedColorScheme, \".100\"),\n      borderRadius: 'lg',\n      overflow: 'hidden'\n    };\n  }\n};\nexport var SliderThumb = {\n  baseStyle: function baseStyle(props) {\n    var simplifiedColorScheme = getColorScheme(props);\n    return {\n      borderRadius: 99999,\n      zIndex: 999,\n      alignItems: 'center',\n      justifyContent: 'center',\n      bg: mode(\"\".concat(simplifiedColorScheme, \".600\"), \"\".concat(simplifiedColorScheme, \".300\"))(props),\n      scaleOnPressed: 1.2\n    };\n  }\n};\nexport var SliderFilledTrack = {\n  baseStyle: function baseStyle(props) {\n    var simplifiedColorScheme = getColorScheme(props);\n    return {\n      bg: mode(\"\".concat(simplifiedColorScheme, \".600\"), \"\".concat(simplifiedColorScheme, \".300\"))(props)\n    };\n  }\n};\nvar sizes = {\n  lg: {\n    thumbSize: 6,\n    sliderSize: 6\n  },\n  md: {\n    thumbSize: 5,\n    sliderSize: 5\n  },\n  sm: {\n    thumbSize: 4,\n    sliderSize: 4\n  }\n};\nexport var Slider = {\n  defaultProps: {\n    size: 'sm'\n  },\n  sizes: sizes\n};\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/theme/components/slider.js"],"names":["SliderTrack","baseStyle","simplifiedColorScheme","getColorScheme","bg","borderRadius","overflow","SliderThumb","zIndex","alignItems","justifyContent","mode","scaleOnPressed","SliderFilledTrack","sizes","lg","thumbSize","sliderSize","md","sm","Slider","defaultProps","size"],"mappings":"AAAA,SAAA,cAAA,EAAA,IAAA;AACA,OAAO,IAAMA,WAAW,GAAG;AACzBC,EAAAA,SAAS,EAAE,SAAA,SAAA,CAAA,KAAA,EAAS;AAClB,QAAMC,qBAAqB,GAAGC,cAAc,CAA5C,KAA4C,CAA5C;AACA,WAAO;AACLC,MAAAA,EAAE,EAAE,GAAA,MAAA,CAAA,qBAAA,EADC,MACD,CADC;AAELC,MAAAA,YAAY,EAFP,IAAA;AAGLC,MAAAA,QAAQ,EAHV;AAAO,KAAP;AAHG;AAAoB,CAApB;AAUP,OAAO,IAAMC,WAAW,GAAG;AACzBN,EAAAA,SAAS,EAAE,SAAA,SAAA,CAAA,KAAA,EAAS;AAClB,QAAMC,qBAAqB,GAAGC,cAAc,CAA5C,KAA4C,CAA5C;AACA,WAAO;AACLE,MAAAA,YAAY,EADP,KAAA;AAELG,MAAAA,MAAM,EAFD,GAAA;AAGLC,MAAAA,UAAU,EAHL,QAAA;AAILC,MAAAA,cAAc,EAJT,QAAA;AAKLN,MAAAA,EAAE,EAAEO,IAAI,CAAC,GAAA,MAAA,CAAA,qBAAA,EAAD,MAAC,CAAD,EAA2C,GAAA,MAAA,CAAA,qBAAA,EAA/CA,MAA+C,CAA3C,CAAJA,CALC,KAKDA,CALC;AAMLC,MAAAA,cAAc,EANhB;AAAO,KAAP;AAHG;AAAoB,CAApB;AAaP,OAAO,IAAMC,iBAAiB,GAAG;AAC/BZ,EAAAA,SAAS,EAAE,SAAA,SAAA,CAAA,KAAA,EAAS;AAClB,QAAMC,qBAAqB,GAAGC,cAAc,CAA5C,KAA4C,CAA5C;AACA,WAAO;AACLC,MAAAA,EAAE,EAAEO,IAAI,CAAC,GAAA,MAAA,CAAA,qBAAA,EAAD,MAAC,CAAD,EAA2C,GAAA,MAAA,CAAA,qBAAA,EAA/CA,MAA+C,CAA3C,CAAJA,CADN,KACMA;AADC,KAAP;AAHG;AAA0B,CAA1B;AAQP,IAAMG,KAAK,GAAG;AACZC,EAAAA,EAAE,EAAE;AACFC,IAAAA,SAAS,EADP,CAAA;AAEFC,IAAAA,UAAU,EAHA;AACR,GADQ;AAKZC,EAAAA,EAAE,EAAE;AACFF,IAAAA,SAAS,EADP,CAAA;AAEFC,IAAAA,UAAU,EAPA;AAKR,GALQ;AASZE,EAAAA,EAAE,EAAE;AACFH,IAAAA,SAAS,EADP,CAAA;AAEFC,IAAAA,UAAU,EAXd;AASM;AATQ,CAAd;AAcA,OAAO,IAAMG,MAAM,GAAG;AACpBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAFc;AACN,GADM;AAIpBR,EAAAA,KAAK,EAJA;AAAe,CAAf","sourcesContent":["import { getColorScheme, mode } from '../tools';\nexport const SliderTrack = {\n  baseStyle: props => {\n    const simplifiedColorScheme = getColorScheme(props);\n    return {\n      bg: \"\".concat(simplifiedColorScheme, \".100\"),\n      borderRadius: 'lg',\n      overflow: 'hidden'\n    };\n  }\n};\nexport const SliderThumb = {\n  baseStyle: props => {\n    const simplifiedColorScheme = getColorScheme(props);\n    return {\n      borderRadius: 99999,\n      zIndex: 999,\n      alignItems: 'center',\n      justifyContent: 'center',\n      bg: mode(\"\".concat(simplifiedColorScheme, \".600\"), \"\".concat(simplifiedColorScheme, \".300\"))(props),\n      scaleOnPressed: 1.2\n    };\n  }\n};\nexport const SliderFilledTrack = {\n  baseStyle: props => {\n    const simplifiedColorScheme = getColorScheme(props);\n    return {\n      bg: mode(\"\".concat(simplifiedColorScheme, \".600\"), \"\".concat(simplifiedColorScheme, \".300\"))(props)\n    };\n  }\n};\nconst sizes = {\n  lg: {\n    thumbSize: 6,\n    sliderSize: 6\n  },\n  md: {\n    thumbSize: 5,\n    sliderSize: 5\n  },\n  sm: {\n    thumbSize: 4,\n    sliderSize: 4\n  }\n};\nexport const Slider = {\n  defaultProps: {\n    size: 'sm'\n  },\n  sizes\n};\n//# sourceMappingURL=slider.js.map"]},"metadata":{},"sourceType":"module"}