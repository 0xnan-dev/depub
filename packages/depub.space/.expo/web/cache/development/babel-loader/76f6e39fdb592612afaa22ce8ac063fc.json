{"ast":null,"code":"import _asyncToGenerator from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport Clipboard from \"react-native-web/dist/exports/Clipboard\";\nexport function useClipboard() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      hasCopied = _React$useState2[0],\n      setHasCopied = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      value = _React$useState4[0],\n      setValue = _React$useState4[1];\n\n  var onCopy = function () {\n    var _ref = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(copiedValue) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!Clipboard) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return Clipboard.setString(copiedValue);\n\n            case 3:\n              setValue(copiedValue);\n              setHasCopied(true);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onCopy(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return {\n    value: value,\n    onCopy: onCopy,\n    hasCopied: hasCopied\n  };\n}\n\n_s(useClipboard, \"wScOM9etQVLLiadMpRhyFbPIYBg=\");\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/hooks/useClipboard.js"],"names":["useClipboard","hasCopied","setHasCopied","React","value","setValue","onCopy","Clipboard"],"mappings":";;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;;AAEA,OAAO,SAAA,YAAA,GAAwB;AAAA,EAAA,EAAA;;AAC7B,MAAA,eAAA,GAAkCG,KAAK,CAALA,QAAAA,CAAlC,KAAkCA,CAAlC;AAAA,MAAA,gBAAA,GAAA,cAAA,CAAA,eAAA,EAAA,CAAA,CAAA;AAAA,MAAOF,SAAP,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,MAAkBC,YAAlB,GAAA,gBAAA,CAAA,CAAA,CAAA;;AACA,MAAA,gBAAA,GAA0BC,KAAK,CAALA,QAAAA,CAA1B,EAA0BA,CAA1B;AAAA,MAAA,gBAAA,GAAA,cAAA,CAAA,gBAAA,EAAA,CAAA,CAAA;AAAA,MAAOC,KAAP,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,MAAcC,QAAd,GAAA,gBAAA,CAAA,CAAA,CAAA;;AAEA,MAAMC,MAAM,GAAA,YAAA;AAAA,QAAA,IAAA,GAAA,iBAAA,CAAA,mBAAA,CAAA,IAAA,CAAG,SAAA,OAAA,CAAA,WAAA,EAAA;AAAA,aAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;AAAA,eAAA,CAAA,EAAA;AAAA,kBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,iBAAA,CAAA;AAAA,kBAAA,CAAA,SAAA,EAAA;AAAA,gBAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA;AAAA;;AAAA,cAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,qBAELC,SAAS,CAATA,SAAAA,CAFK,WAELA,CAFK;;AAAA,iBAAA,CAAA;AAKbF,cAAAA,QAAQ,CAARA,WAAQ,CAARA;AACAH,cAAAA,YAAY,CAAZA,IAAY,CAAZA;;AANa,iBAAA,CAAA;AAAA,iBAAA,KAAA;AAAA,qBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,OAAA,EAAA,OAAA,CAAA;AAAH,KAAA,CAAA,CAAA;;AAAA,WAANI,SAAAA,MAAAA,CAAM,EAANA,EAAM;AAAA,aAAA,IAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AAAA,KAAA;AAAZ,GAAY,EAAZ;;AASA,SAAO;AACLF,IAAAA,KAAK,EADA,KAAA;AAELE,IAAAA,MAAM,EAFD,MAAA;AAGLL,IAAAA,SAAS,EAHX;AAAO,GAAP;;;GAbcD,Y","sourcesContent":["import React from 'react';\nimport { Clipboard } from 'react-native';\nexport function useClipboard() {\n  const [hasCopied, setHasCopied] = React.useState(false);\n  const [value, setValue] = React.useState('');\n\n  const onCopy = async copiedValue => {\n    if (Clipboard) {\n      await Clipboard.setString(copiedValue);\n    }\n\n    setValue(copiedValue);\n    setHasCopied(true);\n  };\n\n  return {\n    value,\n    onCopy,\n    hasCopied\n  };\n}\n//# sourceMappingURL=useClipboard.js.map"]},"metadata":{},"sourceType":"module"}