{"ast":null,"code":"import _objectWithoutProperties from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar _excluded = [\"children\"],\n    _excluded2 = [\"focusable\", \"stroke\", \"color\", \"size\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { useToken, usePropsResolution } from \"../../../hooks\";\nimport { makeStyledComponent } from \"../../../utils/styled\";\nimport { Svg, G } from \"./nbSvg\";\nimport { questionOutlineIconPath } from \"./Icons/questionIconPath\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar SVG = makeStyledComponent(Svg);\n_c = SVG;\n\nvar SVGIcon = function SVGIcon(_ref, ref) {\n  _s();\n\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _usePropsResolution = usePropsResolution('Icon', props),\n      focusable = _usePropsResolution.focusable,\n      stroke = _usePropsResolution.stroke,\n      color = _usePropsResolution.color,\n      size = _usePropsResolution.size,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  var strokeHex = useToken('colors', stroke || '');\n  var colorHex = useToken('colors', color || '');\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(SVG, _extends({}, resolvedProps, {\n    size: size,\n    color: colorHex,\n    stroke: strokeHex,\n    focusable: focusable,\n    accessibilityRole: \"image\",\n    ref: ref\n  }), React.Children.count(children) > 0 ? React.createElement(G, null, React.Children.map(children, function (child, i) {\n    var _child$key;\n\n    return React.createElement(ChildPath, _extends({\n      key: (_child$key = child === null || child === void 0 ? void 0 : child.key) !== null && _child$key !== void 0 ? _child$key : i,\n      element: child\n    }, child === null || child === void 0 ? void 0 : child.props));\n  })) : questionOutlineIconPath);\n};\n\n_s(SVGIcon, \"/+kTynCBibmSEVM1QZLMTsTEptE=\", false, function () {\n  return [usePropsResolution, useToken, useToken, useHasResponsiveProps];\n});\n\n_c2 = SVGIcon;\n\nvar ChildPath = function ChildPath(_ref2) {\n  _s2();\n\n  var element = _ref2.element,\n      fill = _ref2.fill,\n      pathStroke = _ref2.stroke;\n  var pathStrokeColor = useToken('colors', pathStroke || '');\n  var fillColor = useToken('colors', fill || '');\n\n  if (!element) {\n    return null;\n  }\n\n  return React.cloneElement(element, {\n    fill: fillColor ? fillColor : 'currentColor',\n    stroke: pathStrokeColor\n  });\n};\n\n_s2(ChildPath, \"NiXVjYdwA3l24XKlVCx9Q1H7ZR8=\", false, function () {\n  return [useToken, useToken];\n});\n\n_c3 = ChildPath;\nexport default _c5 = memo(_c4 = forwardRef(SVGIcon));\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"SVG\");\n$RefreshReg$(_c2, \"SVGIcon\");\n$RefreshReg$(_c3, \"ChildPath\");\n$RefreshReg$(_c4, \"%default%$memo\");\n$RefreshReg$(_c5, \"%default%\");\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/components/primitives/Icon/SVGIcon.js"],"names":["_extends","Object","i","arguments","source","target","SVG","makeStyledComponent","SVGIcon","children","props","focusable","stroke","color","size","resolvedProps","usePropsResolution","strokeHex","useToken","colorHex","useHasResponsiveProps","React","accessibilityRole","ref","key","_child$key","child","element","ChildPath","fill","pathStroke","pathStrokeColor","fillColor","memo","forwardRef"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport { useToken, usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { Svg, G } from './nbSvg';\nimport { questionOutlineIconPath } from './Icons/questionIconPath';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nconst SVG = makeStyledComponent(Svg);\n\nconst SVGIcon = ({\n  children,\n  ...props\n}, ref) => {\n  const {\n    focusable,\n    stroke,\n    color,\n    size,\n    ...resolvedProps\n  } = usePropsResolution('Icon', props);\n  const strokeHex = useToken('colors', stroke || '');\n  const colorHex = useToken('colors', color || ''); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(SVG, _extends({}, resolvedProps, {\n    // height={\n    //   newProps.size\n    //     ? parseInt(newProps.size, 10)\n    //     : parseInt(newProps.height, 10)\n    // }\n    // width={\n    //   newProps.size\n    //     ? parseInt(newProps.size, 10)\n    //     : parseInt(newProps.width, 10)\n    // }\n    size: size,\n    color: colorHex,\n    stroke: strokeHex,\n    focusable: focusable,\n    accessibilityRole: \"image\" // style={style}\n    ,\n    ref: ref\n  }), React.Children.count(children) > 0 ? /*#__PURE__*/React.createElement(G, null, React.Children.map(children, (child, i) => {\n    var _child$key;\n\n    return /*#__PURE__*/React.createElement(ChildPath, _extends({\n      key: (_child$key = child === null || child === void 0 ? void 0 : child.key) !== null && _child$key !== void 0 ? _child$key : i,\n      element: child\n    }, child === null || child === void 0 ? void 0 : child.props));\n  })) : questionOutlineIconPath);\n};\n\nconst ChildPath = ({\n  element,\n  fill,\n  stroke: pathStroke\n}) => {\n  const pathStrokeColor = useToken('colors', pathStroke || '');\n  const fillColor = useToken('colors', fill || '');\n\n  if (!element) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.cloneElement(element, {\n    fill: fillColor ? fillColor : 'currentColor',\n    stroke: pathStrokeColor\n  });\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(SVGIcon));\n//# sourceMappingURL=SVGIcon.js.map"]},"metadata":{},"sourceType":"module"}