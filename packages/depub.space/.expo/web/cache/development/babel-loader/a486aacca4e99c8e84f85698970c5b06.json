{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDimensionsWithEnable = exports.getResponsiveStylesImpl = void 0;\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar getResponsiveStylesImpl = function getResponsiveStylesImpl(width) {\n  return function (queries) {\n    if (typeof width === 'number') {\n      var styles = queries.initial ? [_reactNative.StyleSheet.create({\n        initial: _reactNative.StyleSheet.flatten(queries.initial)\n      }).initial] : [];\n\n      if (queries.query) {\n        queries.query.forEach(function (queryRule) {\n          if (queryRule.style) {\n            var flattenQueryStyle = _reactNative.StyleSheet.flatten(queryRule.style);\n\n            if (typeof queryRule.maxWidth === 'number' && typeof queryRule.minWidth === 'number') {\n              if (width >= queryRule.minWidth && width <= queryRule.maxWidth) {\n                styles.push(_reactNative.StyleSheet.create({\n                  rangeStyle: flattenQueryStyle\n                }).rangeStyle);\n              }\n            } else if (typeof queryRule.minWidth === 'number') {\n              if (width >= queryRule.minWidth) {\n                styles.push(_reactNative.StyleSheet.create({\n                  minWidthStyle: flattenQueryStyle\n                }).minWidthStyle);\n              }\n            } else if (typeof queryRule.maxWidth === 'number') {\n              if (width <= queryRule.maxWidth) {\n                styles.push(_reactNative.StyleSheet.create({\n                  maxWidthStyle: flattenQueryStyle\n                }).maxWidthStyle);\n              }\n            }\n          }\n        });\n        return {\n          styles: styles\n        };\n      }\n    }\n\n    return {};\n  };\n};\n\nexports.getResponsiveStylesImpl = getResponsiveStylesImpl;\n\nvar useDimensionsWithEnable = function useDimensionsWithEnable(_ref) {\n  var enable = _ref.enable;\n\n  var _react$default$useSta = _react[\"default\"].useState(function () {\n    return _reactNative.Dimensions.get('window');\n  }),\n      _react$default$useSta2 = _slicedToArray(_react$default$useSta, 2),\n      dimensions = _react$default$useSta2[0],\n      setDimensions = _react$default$useSta2[1];\n\n  _react[\"default\"].useEffect(function () {\n    if (enable) {\n      var handleChange = function handleChange(_ref2) {\n        var window = _ref2.window;\n\n        if (dimensions.width !== window.width || dimensions.height !== window.height || dimensions.scale !== window.scale || dimensions.fontScale !== window.fontScale) {\n          setDimensions(window);\n        }\n      };\n\n      _reactNative.Dimensions.addEventListener('change', handleChange);\n\n      handleChange({\n        window: _reactNative.Dimensions.get('window')\n      });\n      return function () {\n        _reactNative.Dimensions.removeEventListener('change', handleChange);\n      };\n    }\n\n    return function () {};\n  }, [dimensions, enable]);\n\n  return dimensions;\n};\n\nexports.useDimensionsWithEnable = useDimensionsWithEnable;","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/commonjs/utils/useResponsiveQuery/common.js"],"names":["Object","value","exports","_react","_interopRequireDefault","require","obj","default","getResponsiveStylesImpl","styles","queries","_reactNative","initial","queryRule","flattenQueryStyle","width","rangeStyle","minWidthStyle","maxWidthStyle","useDimensionsWithEnable","enable","dimensions","setDimensions","window","handleChange"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDimensionsWithEnable = exports.getResponsiveStylesImpl = void 0;\n\nvar _reactNative = require(\"react-native\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getResponsiveStylesImpl = width => queries => {\n  if (typeof width === 'number') {\n    let styles = queries.initial ? [_reactNative.StyleSheet.create({\n      initial: _reactNative.StyleSheet.flatten(queries.initial)\n    }).initial] : [];\n\n    if (queries.query) {\n      queries.query.forEach(queryRule => {\n        if (queryRule.style) {\n          const flattenQueryStyle = _reactNative.StyleSheet.flatten(queryRule.style);\n\n          if (typeof queryRule.maxWidth === 'number' && typeof queryRule.minWidth === 'number') {\n            if (width >= queryRule.minWidth && width <= queryRule.maxWidth) {\n              styles.push(_reactNative.StyleSheet.create({\n                rangeStyle: flattenQueryStyle\n              }).rangeStyle);\n            }\n          } else if (typeof queryRule.minWidth === 'number') {\n            if (width >= queryRule.minWidth) {\n              styles.push(_reactNative.StyleSheet.create({\n                minWidthStyle: flattenQueryStyle\n              }).minWidthStyle);\n            }\n          } else if (typeof queryRule.maxWidth === 'number') {\n            if (width <= queryRule.maxWidth) {\n              styles.push(_reactNative.StyleSheet.create({\n                maxWidthStyle: flattenQueryStyle\n              }).maxWidthStyle);\n            }\n          }\n        }\n      });\n      return {\n        styles\n      };\n    }\n  }\n\n  return {};\n}; // The below implementation is taken from React Native's source and added a flag to conditionally attach/remove listeners\n\n\nexports.getResponsiveStylesImpl = getResponsiveStylesImpl;\n\nconst useDimensionsWithEnable = ({\n  enable\n}) => {\n  const [dimensions, setDimensions] = _react.default.useState(() => _reactNative.Dimensions.get('window'));\n\n  _react.default.useEffect(() => {\n    if (enable) {\n      function handleChange({\n        window\n      }) {\n        if (dimensions.width !== window.width || dimensions.height !== window.height || dimensions.scale !== window.scale || dimensions.fontScale !== window.fontScale) {\n          setDimensions(window);\n        }\n      }\n\n      _reactNative.Dimensions.addEventListener('change', handleChange); // We might have missed an update between calling `get` in render and\n      // `addEventListener` in this handler, so we set it here. If there was\n      // no change, React will filter out this update as a no-op.\n\n\n      handleChange({\n        window: _reactNative.Dimensions.get('window')\n      });\n      return () => {\n        _reactNative.Dimensions.removeEventListener('change', handleChange);\n      };\n    }\n\n    return () => {};\n  }, [dimensions, enable]);\n\n  return dimensions;\n};\n\nexports.useDimensionsWithEnable = useDimensionsWithEnable;\n//# sourceMappingURL=common.js.map"]},"metadata":{},"sourceType":"script"}