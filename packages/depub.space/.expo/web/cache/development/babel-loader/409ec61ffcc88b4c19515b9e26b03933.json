{"ast":null,"code":"import _slicedToArray from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"children\", \"isOpen\", \"onClose\", \"defaultIsOpen\", \"initialFocusRef\", \"finalFocusRef\", \"avoidKeyboard\", \"closeOnOverlayClick\", \"isKeyboardDismissable\", \"overlayVisible\", \"backdropVisible\", \"animationPreset\"],\n    _excluded2 = [\"contentSize\", \"_backdrop\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, memo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Backdrop from \"../Backdrop\";\nimport { Slide } from \"../Transitions\";\nimport { FocusScope } from '@react-native-aria/focus';\nimport { useControllableState, usePropsResolution } from \"../../../hooks\";\nimport { ModalContext } from \"./Context\";\nimport Box from \"../../primitives/Box\";\nimport { Fade } from \"../../composites/Transitions\";\nimport { useKeyboardBottomInset } from \"../../../utils\";\nimport { Overlay } from \"../../primitives/Overlay\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar Modal = function Modal(_ref, ref) {\n  _s();\n\n  var children = _ref.children,\n      isOpen = _ref.isOpen,\n      onClose = _ref.onClose,\n      defaultIsOpen = _ref.defaultIsOpen,\n      initialFocusRef = _ref.initialFocusRef,\n      finalFocusRef = _ref.finalFocusRef,\n      avoidKeyboard = _ref.avoidKeyboard,\n      _ref$closeOnOverlayCl = _ref.closeOnOverlayClick,\n      closeOnOverlayClick = _ref$closeOnOverlayCl === void 0 ? true : _ref$closeOnOverlayCl,\n      _ref$isKeyboardDismis = _ref.isKeyboardDismissable,\n      isKeyboardDismissable = _ref$isKeyboardDismis === void 0 ? true : _ref$isKeyboardDismis,\n      _ref$overlayVisible = _ref.overlayVisible,\n      overlayVisible = _ref$overlayVisible === void 0 ? true : _ref$overlayVisible,\n      _ref$backdropVisible = _ref.backdropVisible,\n      backdropVisible = _ref$backdropVisible === void 0 ? true : _ref$backdropVisible,\n      _ref$animationPreset = _ref.animationPreset,\n      animationPreset = _ref$animationPreset === void 0 ? 'fade' : _ref$animationPreset,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var bottomInset = useKeyboardBottomInset();\n\n  var _usePropsResolution = usePropsResolution('Modal', rest),\n      contentSize = _usePropsResolution.contentSize,\n      _backdrop = _usePropsResolution._backdrop,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  var _useControllableState = useControllableState({\n    value: isOpen,\n    defaultValue: defaultIsOpen,\n    onChange: function onChange(val) {\n      if (!val) onClose && onClose();\n    }\n  }),\n      _useControllableState2 = _slicedToArray(_useControllableState, 2),\n      visible = _useControllableState2[0],\n      setVisible = _useControllableState2[1];\n\n  var handleClose = React.useCallback(function () {\n    return setVisible(false);\n  }, [setVisible]);\n  var child = React.createElement(Box, _extends({\n    bottom: avoidKeyboard ? bottomInset + 'px' : undefined\n  }, resolvedProps, {\n    ref: ref,\n    pointerEvents: \"box-none\"\n  }), children);\n  var contextValue = React.useMemo(function () {\n    return {\n      handleClose: handleClose,\n      contentSize: contentSize,\n      initialFocusRef: initialFocusRef,\n      finalFocusRef: finalFocusRef,\n      visible: visible\n    };\n  }, [handleClose, contentSize, initialFocusRef, finalFocusRef, visible]);\n\n  if (useHasResponsiveProps(rest)) {\n    return null;\n  }\n\n  return React.createElement(Overlay, {\n    isOpen: visible,\n    onRequestClose: handleClose,\n    isKeyboardDismissable: isKeyboardDismissable,\n    animationPreset: animationPreset,\n    useRNModalOnAndroid: true\n  }, React.createElement(ModalContext.Provider, {\n    value: contextValue\n  }, React.createElement(Fade, {\n    exitDuration: 150,\n    entryDuration: 200,\n    \"in\": visible,\n    style: StyleSheet.absoluteFill\n  }, overlayVisible && backdropVisible && React.createElement(Backdrop, _extends({\n    onPress: function onPress() {\n      closeOnOverlayClick && handleClose();\n    }\n  }, _backdrop))), animationPreset === 'slide' ? React.createElement(Slide, {\n    \"in\": visible,\n    overlay: false,\n    duration: 200\n  }, React.createElement(FocusScope, {\n    contain: visible,\n    autoFocus: visible && !initialFocusRef,\n    restoreFocus: visible && !finalFocusRef\n  }, child)) : React.createElement(Fade, {\n    exitDuration: 100,\n    entryDuration: 200,\n    \"in\": visible,\n    style: StyleSheet.absoluteFill\n  }, React.createElement(FocusScope, {\n    contain: visible,\n    autoFocus: visible && !initialFocusRef,\n    restoreFocus: visible && !finalFocusRef\n  }, child))));\n};\n\n_s(Modal, \"YSlqeMHGiMv5Irxdpld/le2+HOw=\", false, function () {\n  return [useKeyboardBottomInset, usePropsResolution, useControllableState, useHasResponsiveProps];\n});\n\n_c = Modal;\nexport default _c3 = memo(_c2 = forwardRef(Modal));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"%default%$memo\");\n$RefreshReg$(_c3, \"%default%\");\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/components/composites/Modal/Modal.js"],"names":["_extends","Object","i","arguments","source","target","Modal","children","isOpen","onClose","defaultIsOpen","initialFocusRef","finalFocusRef","avoidKeyboard","closeOnOverlayClick","isKeyboardDismissable","overlayVisible","backdropVisible","animationPreset","rest","bottomInset","useKeyboardBottomInset","contentSize","_backdrop","resolvedProps","usePropsResolution","visible","setVisible","useControllableState","value","defaultValue","onChange","handleClose","React","child","bottom","ref","pointerEvents","contextValue","useHasResponsiveProps","onRequestClose","useRNModalOnAndroid","ModalContext","exitDuration","entryDuration","style","StyleSheet","onPress","overlay","duration","contain","autoFocus","restoreFocus","memo","forwardRef"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef, memo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport Backdrop from '../Backdrop';\nimport { Slide } from '../Transitions';\nimport { FocusScope } from '@react-native-aria/focus';\nimport { useControllableState, usePropsResolution } from '../../../hooks';\nimport { ModalContext } from './Context';\nimport Box from '../../primitives/Box';\nimport { Fade } from '../../composites/Transitions';\nimport { useKeyboardBottomInset } from '../../../utils';\nimport { Overlay } from '../../primitives/Overlay';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Modal = ({\n  children,\n  isOpen,\n  onClose,\n  defaultIsOpen,\n  initialFocusRef,\n  finalFocusRef,\n  avoidKeyboard,\n  closeOnOverlayClick = true,\n  isKeyboardDismissable = true,\n  overlayVisible = true,\n  backdropVisible = true,\n  //@ts-ignore - internal purpose only\n  animationPreset = 'fade',\n  ...rest\n}, ref) => {\n  const bottomInset = useKeyboardBottomInset();\n  const {\n    contentSize,\n    _backdrop,\n    ...resolvedProps\n  } = usePropsResolution('Modal', rest);\n  const [visible, setVisible] = useControllableState({\n    value: isOpen,\n    defaultValue: defaultIsOpen,\n    onChange: val => {\n      if (!val) onClose && onClose();\n    }\n  });\n  const handleClose = React.useCallback(() => setVisible(false), [setVisible]);\n  const child = /*#__PURE__*/React.createElement(Box, _extends({\n    bottom: avoidKeyboard ? bottomInset + 'px' : undefined\n  }, resolvedProps, {\n    ref: ref,\n    pointerEvents: \"box-none\"\n  }), children);\n  const contextValue = React.useMemo(() => {\n    return {\n      handleClose,\n      contentSize,\n      initialFocusRef,\n      finalFocusRef,\n      visible\n    };\n  }, [handleClose, contentSize, initialFocusRef, finalFocusRef, visible]); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(rest)) {\n    return null;\n  } // console.log('visible here', visible);\n\n\n  return /*#__PURE__*/React.createElement(Overlay, {\n    isOpen: visible,\n    onRequestClose: handleClose,\n    isKeyboardDismissable: isKeyboardDismissable,\n    animationPreset: animationPreset,\n    useRNModalOnAndroid: true\n  }, /*#__PURE__*/React.createElement(ModalContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(Fade, {\n    exitDuration: 150,\n    entryDuration: 200,\n    in: visible,\n    style: StyleSheet.absoluteFill\n  }, overlayVisible && backdropVisible && /*#__PURE__*/React.createElement(Backdrop, _extends({\n    onPress: () => {\n      closeOnOverlayClick && handleClose();\n    }\n  }, _backdrop))), animationPreset === 'slide' ? /*#__PURE__*/React.createElement(Slide, {\n    in: visible,\n    overlay: false,\n    duration: 200\n  }, /*#__PURE__*/React.createElement(FocusScope, {\n    contain: visible,\n    autoFocus: visible && !initialFocusRef,\n    restoreFocus: visible && !finalFocusRef\n  }, child)) : /*#__PURE__*/React.createElement(Fade, {\n    exitDuration: 100,\n    entryDuration: 200,\n    in: visible,\n    style: StyleSheet.absoluteFill\n  }, /*#__PURE__*/React.createElement(FocusScope, {\n    contain: visible,\n    autoFocus: visible && !initialFocusRef,\n    restoreFocus: visible && !finalFocusRef\n  }, child))));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Modal));\n//# sourceMappingURL=Modal.js.map"]},"metadata":{},"sourceType":"module"}