{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useClipboard = useClipboard;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction useClipboard() {\n  var _react$default$useSta = _react[\"default\"].useState(false),\n      _react$default$useSta2 = _slicedToArray(_react$default$useSta, 2),\n      hasCopied = _react$default$useSta2[0],\n      setHasCopied = _react$default$useSta2[1];\n\n  var _react$default$useSta3 = _react[\"default\"].useState(''),\n      _react$default$useSta4 = _slicedToArray(_react$default$useSta3, 2),\n      value = _react$default$useSta4[0],\n      setValue = _react$default$useSta4[1];\n\n  var onCopy = function onCopy(copiedValue) {\n    return _regeneratorRuntime.async(function onCopy$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!_reactNative.Clipboard) {\n              _context.next = 3;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(_reactNative.Clipboard.setString(copiedValue));\n\n          case 3:\n            setValue(copiedValue);\n            setHasCopied(true);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return {\n    value: value,\n    onCopy: onCopy,\n    hasCopied: hasCopied\n  };\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/commonjs/hooks/useClipboard.js"],"names":["Object","value","exports","_react","_interopRequireDefault","require","obj","default","hasCopied","setHasCopied","setValue","onCopy","_reactNative"],"mappings":"AAAA;;;;;;AAEAA,MAAM,CAANA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAA6C;AAC3CC,EAAAA,KAAK,EADPD;AAA6C,CAA7CA;AAGAE,OAAO,CAAPA,YAAAA,GAAAA,YAAAA;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAA3C,OAA2C,CAAR,CAAnC;;;;AAIA,SAAA,sBAAA,CAAA,GAAA,EAAqC;AAAE,SAAOC,GAAG,IAAIA,GAAG,CAAVA,UAAAA,GAAAA,GAAAA,GAA8B;AAAEC,eAAvC;AAAqC,GAArC;AAEvC;;AAAA,SAAA,YAAA,GAAwB;AACtB,MAAA,qBAAA,GAAkCJ,MAAAA,WAAAA,CAAAA,QAAAA,CAAlC,KAAkCA,CAAlC;AAAA,MAAA,sBAAA,GAAA,cAAA,CAAA,qBAAA,EAAA,CAAA,CAAA;AAAA,MAAOK,SAAP,GAAA,sBAAA,CAAA,CAAA,CAAA;AAAA,MAAkBC,YAAlB,GAAA,sBAAA,CAAA,CAAA,CAAA;;AAEA,MAAA,sBAAA,GAA0BN,MAAAA,WAAAA,CAAAA,QAAAA,CAA1B,EAA0BA,CAA1B;AAAA,MAAA,sBAAA,GAAA,cAAA,CAAA,sBAAA,EAAA,CAAA,CAAA;AAAA,MAAOF,KAAP,GAAA,sBAAA,CAAA,CAAA,CAAA;AAAA,MAAcS,QAAd,GAAA,sBAAA,CAAA,CAAA,CAAA;;AAEA,MAAMC,MAAM,GAANA,SAAAA,MAAAA,CAAS,WAATA,EAAS;AAAA,WAAA,mBAAA,CAAA,KAAA,CAAA,SAAA,OAAA,CAAA,QAAA,EAAA;AAAA,aAAA,CAAA,EAAA;AAAA,gBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,eAAA,CAAA;AAAA,gBAAA,CACTC,YAAY,CADH,SAAA,EAAA;AAAA,cAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA;AAAA;;AAAA,YAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,mBAAA,mBAAA,CAAA,KAAA,CAELA,YAAY,CAAZA,SAAAA,CAAAA,SAAAA,CAFK,WAELA,CAFK,CAAA;;AAAA,eAAA,CAAA;AAKbF,YAAAA,QAAQ,CAARA,WAAQ,CAARA;AACAD,YAAAA,YAAY,CAAZA,IAAY,CAAZA;;AANa,eAAA,CAAA;AAAA,eAAA,KAAA;AAAA,mBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,CAAA;AAAf,GAAA;;AASA,SAAO;AACLR,IAAAA,KAAK,EADA,KAAA;AAELU,IAAAA,MAAM,EAFD,MAAA;AAGLH,IAAAA,SAAS,EAHX;AAAO,GAAP;AAKD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useClipboard = useClipboard;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction useClipboard() {\n  const [hasCopied, setHasCopied] = _react.default.useState(false);\n\n  const [value, setValue] = _react.default.useState('');\n\n  const onCopy = async copiedValue => {\n    if (_reactNative.Clipboard) {\n      await _reactNative.Clipboard.setString(copiedValue);\n    }\n\n    setValue(copiedValue);\n    setHasCopied(true);\n  };\n\n  return {\n    value,\n    onCopy,\n    hasCopied\n  };\n}\n//# sourceMappingURL=useClipboard.js.map"]},"metadata":{},"sourceType":"script"}