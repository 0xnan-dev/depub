{"ast":null,"code":"import _defineProperty from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { useEffect, useState } from 'react';\nimport { useTheme } from \"../hooks/useTheme\";\nimport { useNativeBaseConfig } from \"../core/NativeBaseContext\";\nimport { isResponsiveAnyProp } from \"../theme/tools\";\nexport function useResponsiveSSRProps(incomingProps) {\n  _s();\n\n  var _useState = useState(false),\n      modified = _useState[0],\n      setModified = _useState[1];\n\n  var theme = useTheme();\n  var responsivePropsExists = isResponsiveAnyProp(incomingProps, theme);\n  var isSSR = useNativeBaseConfig('useBreakpointResolvedProps').isSSR;\n  var modifiedProps = incomingProps;\n\n  if (responsivePropsExists && isSSR && !modified) {\n    modifiedProps = _objectSpread(_objectSpread({}, modifiedProps), {}, {\n      key: Math.random()\n    });\n  }\n\n  useEffect(function () {\n    if (responsivePropsExists && isSSR) {\n      setModified(true);\n    }\n  }, [responsivePropsExists, isSSR]);\n  return modifiedProps;\n}\n\n_s(useResponsiveSSRProps, \"UNGT/8iNYjOWUzmQoxzNUK6SGIg=\", false, function () {\n  return [useTheme, useNativeBaseConfig];\n});\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/hooks/useResponsiveSSRProps.js"],"names":["useResponsiveSSRProps","modified","setModified","useState","theme","useTheme","responsivePropsExists","isResponsiveAnyProp","isSSR","useNativeBaseConfig","modifiedProps","key","Math","useEffect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,SAAA,SAAA,EAAA,QAAA,QAAA,OAAA;AACA,SAAA,QAAA;AACA,SAAA,mBAAA;AACA,SAAA,mBAAA;AACA,OAAO,SAAA,qBAAA,CAAA,aAAA,EAA8C;AAAA,EAAA,EAAA;;AACnD,MAAA,SAAA,GAAgCG,QAAQ,CAAxC,KAAwC,CAAxC;AAAA,MAAOF,QAAP,GAAA,SAAA,CAAA,CAAA,CAAA;AAAA,MAAiBC,WAAjB,GAAA,SAAA,CAAA,CAAA,CAAA;;AACA,MAAME,KAAK,GAAGC,QAAd,EAAA;AACA,MAAMC,qBAAqB,GAAGC,mBAAmB,CAAA,aAAA,EAAjD,KAAiD,CAAjD;AACA,MAAMC,KAAK,GAAGC,mBAAmB,CAAnBA,4BAAmB,CAAnBA,CAAd,KAAA;AACA,MAAIC,aAAa,GAAjB,aAAA;;AAEA,MAAIJ,qBAAqB,IAArBA,KAAAA,IAAkC,CAAtC,QAAA,EAAiD;AAC/CI,IAAAA,aAAa,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA;AACXC,MAAAA,GAAG,EAAEC,IAAI,CADXF,MACOE;AADM,KAAA,CAAbF;AAKFG;;AAAAA,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIP,qBAAqB,IAAzB,KAAA,EAAoC;AAClCJ,MAAAA,WAAW,CAAXA,IAAW,CAAXA;AAEH;AAJQ,GAAA,EAIN,CAAA,qBAAA,EAJHW,KAIG,CAJM,CAATA;AAKA,SAAA,aAAA;;;GAlBcb,qB;UAEAK,Q,EAEAI,mB","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useTheme } from '../hooks/useTheme';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { isResponsiveAnyProp } from '../theme/tools';\nexport function useResponsiveSSRProps(incomingProps) {\n  const [modified, setModified] = useState(false);\n  const theme = useTheme();\n  const responsivePropsExists = isResponsiveAnyProp(incomingProps, theme);\n  const isSSR = useNativeBaseConfig('useBreakpointResolvedProps').isSSR;\n  let modifiedProps = incomingProps;\n\n  if (responsivePropsExists && isSSR && !modified) {\n    modifiedProps = { ...modifiedProps,\n      key: Math.random()\n    };\n  }\n\n  useEffect(() => {\n    if (responsivePropsExists && isSSR) {\n      setModified(true);\n    }\n  }, [responsivePropsExists, isSSR]);\n  return modifiedProps;\n}\n//# sourceMappingURL=useResponsiveSSRProps.js.map"]},"metadata":{},"sourceType":"module"}