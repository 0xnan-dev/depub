{"ast":null,"code":"import _objectWithoutProperties from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"style\", \"debug\"];\nimport { getStyleAndFilteredProps, propConfig } from \"../theme/styled-system\";\nimport { useTheme } from \"./useTheme\";\nimport React from 'react';\nimport { useNativeBaseConfig } from \"../core/NativeBaseContext\";\nimport { useResponsiveQuery } from \"../utils/useResponsiveQuery\";\nimport stableHash from 'stable-hash';\n\nvar getStyledSystemPropsAndRestProps = function getStyledSystemPropsAndRestProps(props) {\n  var styledSystemProps = {};\n  var restProps = {};\n\n  for (var key in props) {\n    if (key in propConfig) {\n      styledSystemProps[key] = props[key];\n    } else {\n      restProps[key] = props[key];\n    }\n  }\n\n  return {\n    styledSystemProps: styledSystemProps,\n    restProps: restProps\n  };\n};\n\nexport var useStyledSystemPropsResolver = function useStyledSystemPropsResolver(_ref) {\n  _s();\n\n  var propStyle = _ref.style,\n      debug = _ref.debug,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var theme = useTheme();\n\n  var _useNativeBaseConfig = useNativeBaseConfig('makeStyledComponent'),\n      currentBreakpoint = _useNativeBaseConfig.currentBreakpoint,\n      config = _useNativeBaseConfig.config;\n\n  var strictMode = config.strictMode;\n\n  var _useResponsiveQuery = useResponsiveQuery(),\n      getResponsiveStyles = _useResponsiveQuery.getResponsiveStyles;\n\n  var _getStyledSystemProps = getStyledSystemPropsAndRestProps(props),\n      styledSystemProps = _getStyledSystemProps.styledSystemProps,\n      restProps = _getStyledSystemProps.restProps;\n\n  var _React$useMemo = React.useMemo(function () {\n    var _getStyleAndFilteredP = getStyleAndFilteredProps({\n      styledSystemProps: styledSystemProps,\n      theme: theme,\n      debug: debug,\n      currentBreakpoint: currentBreakpoint,\n      strictMode: strictMode,\n      getResponsiveStyles: getResponsiveStyles\n    }),\n        styleSheet = _getStyleAndFilteredP.styleSheet,\n        dataSet = _getStyleAndFilteredP.dataSet;\n\n    if (propStyle) {\n      return {\n        style: [styleSheet.box, propStyle],\n        dataSet: dataSet\n      };\n    } else {\n      return {\n        style: styleSheet.box,\n        dataSet: dataSet\n      };\n    }\n  }, [stableHash(styledSystemProps), theme, debug, currentBreakpoint, strictMode, propStyle, getResponsiveStyles, props]),\n      style = _React$useMemo.style,\n      dataSet = _React$useMemo.dataSet;\n\n  if (true && debug) {\n    console.log('style,resprops', currentBreakpoint);\n  }\n\n  restProps.dataSet = dataSet;\n  return [style, restProps];\n};\n\n_s(useStyledSystemPropsResolver, \"+LukDN38XIGDaA+YuKH5Oq5h80w=\", false, function () {\n  return [useTheme, useNativeBaseConfig, useResponsiveQuery];\n});\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/hooks/useStyledSystemPropsResolver.js"],"names":["getStyledSystemPropsAndRestProps","styledSystemProps","restProps","key","props","useStyledSystemPropsResolver","style","propStyle","debug","theme","useTheme","currentBreakpoint","config","useNativeBaseConfig","strictMode","getResponsiveStyles","useResponsiveQuery","dataSet","React","styleSheet","getStyleAndFilteredProps","stableHash","console"],"mappings":"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","sourcesContent":["import { getStyleAndFilteredProps, propConfig } from '../theme/styled-system';\nimport { useTheme } from './useTheme';\nimport React from 'react';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { useResponsiveQuery } from '../utils/useResponsiveQuery'; //@ts-ignore\n\nimport stableHash from 'stable-hash';\n\nconst getStyledSystemPropsAndRestProps = props => {\n  const styledSystemProps = {};\n  const restProps = {};\n\n  for (let key in props) {\n    if (key in propConfig) {\n      styledSystemProps[key] = props[key];\n    } else {\n      restProps[key] = props[key];\n    }\n  }\n\n  return {\n    styledSystemProps,\n    restProps\n  };\n};\n\nexport const useStyledSystemPropsResolver = ({\n  style: propStyle,\n  debug,\n  ...props\n}) => {\n  const theme = useTheme();\n  const {\n    currentBreakpoint,\n    config\n  } = useNativeBaseConfig('makeStyledComponent');\n  const strictMode = config.strictMode;\n  const {\n    getResponsiveStyles\n  } = useResponsiveQuery();\n  const {\n    styledSystemProps,\n    restProps\n  } = getStyledSystemPropsAndRestProps(props);\n  const {\n    style,\n    dataSet\n  } = React.useMemo(() => {\n    const {\n      styleSheet,\n      dataSet\n    } = getStyleAndFilteredProps({\n      styledSystemProps,\n      theme,\n      debug,\n      currentBreakpoint,\n      strictMode,\n      getResponsiveStyles\n    });\n\n    if (propStyle) {\n      return {\n        style: [styleSheet.box, propStyle],\n        dataSet\n      };\n    } else {\n      return {\n        style: styleSheet.box,\n        dataSet\n      };\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [// eslint-disable-next-line react-hooks/exhaustive-deps\n  stableHash(styledSystemProps), theme, debug, currentBreakpoint, strictMode, propStyle, getResponsiveStyles, props]);\n\n  if (process.env.NODE_ENV === 'development' && debug) {\n    /* eslint-disable-next-line */\n    console.log('style,resprops', currentBreakpoint);\n  }\n\n  restProps.dataSet = dataSet;\n  return [style, restProps];\n};\n//# sourceMappingURL=useStyledSystemPropsResolver.js.map"]},"metadata":{},"sourceType":"module"}