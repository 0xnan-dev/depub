{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _excluded = [\"children\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Hidden = Hidden;\nexports[\"default\"] = void 0;\n\nvar _react = require(\"react\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _hooks2 = require(\"../../../core/color-mode/hooks\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nfunction Hidden(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _ref2 = (0, _useThemeProps.usePropsResolution)('Hidden', props, {}, {\n    ignoreProps: ['only', 'platform']\n  }),\n      from = _ref2.from,\n      till = _ref2.till,\n      only = _ref2.only,\n      platform = _ref2.platform,\n      colorMode = _ref2.colorMode;\n\n  var _ref3 = (0, _hooks.useTheme)(),\n      breakpoints = _ref3.breakpoints;\n\n  var currentColorMode = (0, _hooks2.useColorMode)();\n  var breakpointValueObject = Object.keys(breakpoints).reduce(function (obj, val) {\n    obj[val] = val;\n    return obj;\n  }, {});\n  var breakpointValue = (0, _hooks.useBreakpointValue)(breakpointValueObject);\n\n  var _ref4 = (0, _hooks.useToken)('breakpoints', [breakpointValue]),\n      _ref5 = _slicedToArray(_ref4, 1),\n      currentBreakpointValue = _ref5[0];\n\n  var _ref6 = (0, _hooks.useToken)('breakpoints', [from]),\n      _ref7 = _slicedToArray(_ref6, 1),\n      fromBreakPointValue = _ref7[0];\n\n  var _ref8 = (0, _hooks.useToken)('breakpoints', [till]),\n      _ref9 = _slicedToArray(_ref8, 1),\n      tillBreakPointValue = _ref9[0];\n\n  if (!from && !till && !only && !colorMode && !platform) {\n    return null;\n  } else if (from && till && currentBreakpointValue >= fromBreakPointValue && currentBreakpointValue < tillBreakPointValue) {\n    return null;\n  } else if (from && !till && currentBreakpointValue >= fromBreakPointValue) {\n    return null;\n  } else if (till && !from && currentBreakpointValue < tillBreakPointValue) {\n    return null;\n  } else if (Array.isArray(only) && only.includes(breakpointValue) || only === breakpointValue) {\n    return null;\n  } else if (Array.isArray(platform) && platform.includes(_reactNative.Platform.OS) || platform === _reactNative.Platform.OS) {\n    return null;\n  } else if (colorMode === currentColorMode.colorMode) {\n    return null;\n  }\n\n  return children;\n}\n\nvar _default = (0, _react.memo)(Hidden);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/commonjs/components/primitives/Hidden/index.js"],"names":["Object","value","exports","_react","require","_useThemeProps","_hooks","_hooks2","children","props","from","till","only","platform","colorMode","ignoreProps","breakpoints","currentColorMode","breakpointValueObject","obj","breakpointValue","currentBreakpointValue","fromBreakPointValue","tillBreakPointValue","Array","_reactNative","_default"],"mappings":"AAAA;;;;;;;AAEAA,MAAM,CAANA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAA6C;AAC3CC,EAAAA,KAAK,EADPD;AAA6C,CAA7CA;AAGAE,OAAO,CAAPA,MAAAA,GAAAA,MAAAA;AACAA,OAAAA,WAAAA,GAAkB,KAAlBA,CAAAA;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAApB,OAAoB,CAApB;;AAEA,IAAIC,cAAc,GAAGD,OAArB,gCAAA;;AAEA,IAAIE,MAAM,GAAGF,OAAb,kBAAA;;AAEA,IAAIG,OAAO,GAAGH,OAAd,kCAAA;;;;AAIA,SAAA,MAAA,CAAA,IAAA,EAGG;AAFDI,MAAAA,QAEC,GAAA,IAAA,CAFDA,QAAAA;AAAAA,MACGC,KACF,GAAA,wBAAA,CAAA,IAAA,EAAA,SAAA,CAFDD;;AAGA,MAAA,KAAA,GAMI,CAAC,GAAGH,cAAc,CAAlB,kBAAA,EAAA,QAAA,EAAA,KAAA,EAAA,EAAA,EAA4D;AAC9DU,IAAAA,WAAW,EAAE,CAAA,MAAA,EAPf,UAOe;AADiD,GAA5D,CANJ;AAAA,MACEL,IADF,GAAA,KAAA,CAAA,IAAA;AAAA,MAEEC,IAFF,GAAA,KAAA,CAAA,IAAA;AAAA,MAGEC,IAHF,GAAA,KAAA,CAAA,IAAA;AAAA,MAIEC,QAJF,GAAA,KAAA,CAAA,QAAA;AAAA,MAKEC,SALF,GAAA,KAAA,CAAA,SAAA;;AASA,MAAA,KAAA,GAEI,CAAC,GAAGR,MAAM,CAFd,QAEI,GAFJ;AAAA,MACEU,WADF,GAAA,KAAA,CAAA,WAAA;;AAGA,MAAMC,gBAAgB,GAAG,CAAC,GAAGV,OAAO,CAApC,YAAyB,GAAzB;AACA,MAAMW,qBAAqB,GAAGlB,MAAM,CAANA,IAAAA,CAAAA,WAAAA,EAAAA,MAAAA,CAAgC,UAAA,GAAA,EAAA,GAAA,EAAc;AAC1EmB,IAAAA,GAAG,CAAHA,GAAG,CAAHA,GAAAA,GAAAA;AACA,WAAA,GAAA;AAF4BnB,GAAAA,EAA9B,EAA8BA,CAA9B;AAIA,MAAMoB,eAAe,GAAG,CAAC,GAAGd,MAAM,CAAV,kBAAA,EAAxB,qBAAwB,CAAxB;;AACA,MAAA,KAAA,GAAiC,CAAC,GAAGA,MAAM,CAAV,QAAA,EAAA,aAAA,EAAoC,CAArE,eAAqE,CAApC,CAAjC;AAAA,MAAA,KAAA,GAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AAAA,MAAOe,sBAAP,GAAA,KAAA,CAAA,CAAA,CAAA;;AACA,MAAA,KAAA,GAA8B,CAAC,GAAGf,MAAM,CAAV,QAAA,EAAA,aAAA,EAAoC,CAAlE,IAAkE,CAApC,CAA9B;AAAA,MAAA,KAAA,GAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AAAA,MAAOgB,mBAAP,GAAA,KAAA,CAAA,CAAA,CAAA;;AACA,MAAA,KAAA,GAA8B,CAAC,GAAGhB,MAAM,CAAV,QAAA,EAAA,aAAA,EAAoC,CAAlE,IAAkE,CAApC,CAA9B;AAAA,MAAA,KAAA,GAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AAAA,MAAOiB,mBAAP,GAAA,KAAA,CAAA,CAAA,CAAA;;AAEA,MAAI,CAAA,IAAA,IAAS,CAAT,IAAA,IAAkB,CAAlB,IAAA,IAA2B,CAA3B,SAAA,IAAyC,CAA7C,QAAA,EAAwD;AACtD,WAAA,IAAA;AADF,GAAA,MAGK,IAAIb,IAAI,IAAJA,IAAAA,IAAgBW,sBAAsB,IAAtCX,mBAAAA,IAAiEW,sBAAsB,GAA3F,mBAAA,EAAmH;AACpH,WAAA,IAAA;AADC,GAAA,MAGE,IAAIX,IAAI,IAAI,CAARA,IAAAA,IAAiBW,sBAAsB,IAA3C,mBAAA,EAAoE;AACrE,WAAA,IAAA;AADC,GAAA,MAGE,IAAIV,IAAI,IAAI,CAARA,IAAAA,IAAiBU,sBAAsB,GAA3C,mBAAA,EAAmE;AACpE,WAAA,IAAA;AADC,GAAA,MAIE,IAAIG,KAAK,CAALA,OAAAA,CAAAA,IAAAA,KAAuBZ,IAAI,CAAJA,QAAAA,CAAvBY,eAAuBZ,CAAvBY,IAAyDZ,IAAI,KAAjE,eAAA,EAAuF;AACxF,WAAA,IAAA;AADC,GAAA,MAIE,IAAIY,KAAK,CAALA,OAAAA,CAAAA,QAAAA,KAA2BX,QAAQ,CAARA,QAAAA,CAAkBY,YAAY,CAAZA,QAAAA,CAA7CD,EAA2BX,CAA3BW,IAA0EX,QAAQ,KAAKY,YAAY,CAAZA,QAAAA,CAA3F,EAAA,EAAqH;AACtH,WAAA,IAAA;AADC,GAAA,MAGE,IAAIX,SAAS,KAAKG,gBAAgB,CAAlC,SAAA,EAA8C;AAC/C,WAAA,IAAA;AAGd;;AAAA,SAAA,QAAA;AAGF;;AAAA,IAAIS,QAAQ,GAAgB,CAAC,GAAGvB,MAAM,CAAV,IAAA,EAA5B,MAA4B,CAA5B;;AAEAD,OAAAA,WAAAA,GAAAA,QAAAA","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Hidden = Hidden;\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _hooks2 = require(\"../../../core/color-mode/hooks\");\n\nvar _reactNative = require(\"react-native\");\n\nfunction Hidden({\n  children,\n  ...props\n}) {\n  const {\n    from,\n    till,\n    only,\n    platform,\n    colorMode\n  } = (0, _useThemeProps.usePropsResolution)('Hidden', props, {}, {\n    ignoreProps: ['only', 'platform']\n  });\n  const {\n    breakpoints\n  } = (0, _hooks.useTheme)();\n  const currentColorMode = (0, _hooks2.useColorMode)();\n  const breakpointValueObject = Object.keys(breakpoints).reduce((obj, val) => {\n    obj[val] = val;\n    return obj;\n  }, {});\n  const breakpointValue = (0, _hooks.useBreakpointValue)(breakpointValueObject);\n  const [currentBreakpointValue] = (0, _hooks.useToken)('breakpoints', [breakpointValue]);\n  const [fromBreakPointValue] = (0, _hooks.useToken)('breakpoints', [from]);\n  const [tillBreakPointValue] = (0, _hooks.useToken)('breakpoints', [till]); //if no prop is passed, it will hide the element wrapped with hidden\n\n  if (!from && !till && !only && !colorMode && !platform) {\n    return null;\n  } //if from and till prop exists, it will hide the element wrapped accordingly\n  else if (from && till && currentBreakpointValue >= fromBreakPointValue && currentBreakpointValue < tillBreakPointValue) {\n      return null;\n    } //if from prop exists, it will hide the element wrapped starting from that breakpoint.\n    else if (from && !till && currentBreakpointValue >= fromBreakPointValue) {\n        return null;\n      } //if till prop exists, it will hide the element wrapped starting from  0 till that breakpoint.\n      else if (till && !from && currentBreakpointValue < tillBreakPointValue) {\n          return null;\n        } //if only prop exists and is array, check that array consists current breakpoint value, and if that exists, hide on that breakpoint to next breakpoint.\n        // if only prop is string, hide on that breakpoint to next breakpoint.\n        else if (Array.isArray(only) && only.includes(breakpointValue) || only === breakpointValue) {\n            return null;\n          } //if platform prop exists and is array, check that array consists current platform value, and if that exists, hide on that platform.\n          // if platform prop is string, hide on that platform.\n          else if (Array.isArray(platform) && platform.includes(_reactNative.Platform.OS) || platform === _reactNative.Platform.OS) {\n              return null;\n            } //if colormode prop is valid string, hide on that colormode.\n            else if (colorMode === currentColorMode.colorMode) {\n                return null;\n              }\n\n  return children;\n}\n\nvar _default = /*#__PURE__*/(0, _react.memo)(Hidden);\n\nexports.default = _default;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}