{"ast":null,"code":"import _slicedToArray from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React from 'react';\nexport var getResponsiveStylesImpl = function getResponsiveStylesImpl(width) {\n  return function (queries) {\n    if (typeof width === 'number') {\n      var styles = queries.initial ? [StyleSheet.create({\n        initial: StyleSheet.flatten(queries.initial)\n      }).initial] : [];\n\n      if (queries.query) {\n        queries.query.forEach(function (queryRule) {\n          if (queryRule.style) {\n            var flattenQueryStyle = StyleSheet.flatten(queryRule.style);\n\n            if (typeof queryRule.maxWidth === 'number' && typeof queryRule.minWidth === 'number') {\n              if (width >= queryRule.minWidth && width <= queryRule.maxWidth) {\n                styles.push(StyleSheet.create({\n                  rangeStyle: flattenQueryStyle\n                }).rangeStyle);\n              }\n            } else if (typeof queryRule.minWidth === 'number') {\n              if (width >= queryRule.minWidth) {\n                styles.push(StyleSheet.create({\n                  minWidthStyle: flattenQueryStyle\n                }).minWidthStyle);\n              }\n            } else if (typeof queryRule.maxWidth === 'number') {\n              if (width <= queryRule.maxWidth) {\n                styles.push(StyleSheet.create({\n                  maxWidthStyle: flattenQueryStyle\n                }).maxWidthStyle);\n              }\n            }\n          }\n        });\n        return {\n          styles: styles\n        };\n      }\n    }\n\n    return {};\n  };\n};\nexport var useDimensionsWithEnable = function useDimensionsWithEnable(_ref) {\n  _s();\n\n  var enable = _ref.enable;\n\n  var _React$useState = React.useState(function () {\n    return Dimensions.get('window');\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dimensions = _React$useState2[0],\n      setDimensions = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (enable) {\n      var handleChange = function handleChange(_ref2) {\n        var window = _ref2.window;\n\n        if (dimensions.width !== window.width || dimensions.height !== window.height || dimensions.scale !== window.scale || dimensions.fontScale !== window.fontScale) {\n          setDimensions(window);\n        }\n      };\n\n      Dimensions.addEventListener('change', handleChange);\n      handleChange({\n        window: Dimensions.get('window')\n      });\n      return function () {\n        Dimensions.removeEventListener('change', handleChange);\n      };\n    }\n\n    return function () {};\n  }, [dimensions, enable]);\n  return dimensions;\n};\n\n_s(useDimensionsWithEnable, \"ba0M5RfDBUqYbZCK7vWCEzwQ6vk=\");\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/utils/useResponsiveQuery/common.js"],"names":["getResponsiveStylesImpl","styles","queries","StyleSheet","initial","queryRule","flattenQueryStyle","width","rangeStyle","minWidthStyle","maxWidthStyle","useDimensionsWithEnable","enable","dimensions","setDimensions","React","Dimensions","handleChange","window"],"mappings":"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","sourcesContent":["import { Dimensions, StyleSheet } from 'react-native';\nimport React from 'react';\nexport const getResponsiveStylesImpl = width => queries => {\n  if (typeof width === 'number') {\n    let styles = queries.initial ? [StyleSheet.create({\n      initial: StyleSheet.flatten(queries.initial)\n    }).initial] : [];\n\n    if (queries.query) {\n      queries.query.forEach(queryRule => {\n        if (queryRule.style) {\n          const flattenQueryStyle = StyleSheet.flatten(queryRule.style);\n\n          if (typeof queryRule.maxWidth === 'number' && typeof queryRule.minWidth === 'number') {\n            if (width >= queryRule.minWidth && width <= queryRule.maxWidth) {\n              styles.push(StyleSheet.create({\n                rangeStyle: flattenQueryStyle\n              }).rangeStyle);\n            }\n          } else if (typeof queryRule.minWidth === 'number') {\n            if (width >= queryRule.minWidth) {\n              styles.push(StyleSheet.create({\n                minWidthStyle: flattenQueryStyle\n              }).minWidthStyle);\n            }\n          } else if (typeof queryRule.maxWidth === 'number') {\n            if (width <= queryRule.maxWidth) {\n              styles.push(StyleSheet.create({\n                maxWidthStyle: flattenQueryStyle\n              }).maxWidthStyle);\n            }\n          }\n        }\n      });\n      return {\n        styles\n      };\n    }\n  }\n\n  return {};\n}; // The below implementation is taken from React Native's source and added a flag to conditionally attach/remove listeners\n\nexport const useDimensionsWithEnable = ({\n  enable\n}) => {\n  const [dimensions, setDimensions] = React.useState(() => Dimensions.get('window'));\n  React.useEffect(() => {\n    if (enable) {\n      function handleChange({\n        window\n      }) {\n        if (dimensions.width !== window.width || dimensions.height !== window.height || dimensions.scale !== window.scale || dimensions.fontScale !== window.fontScale) {\n          setDimensions(window);\n        }\n      }\n\n      Dimensions.addEventListener('change', handleChange); // We might have missed an update between calling `get` in render and\n      // `addEventListener` in this handler, so we set it here. If there was\n      // no change, React will filter out this update as a no-op.\n\n      handleChange({\n        window: Dimensions.get('window')\n      });\n      return () => {\n        Dimensions.removeEventListener('change', handleChange);\n      };\n    }\n\n    return () => {};\n  }, [dimensions, enable]);\n  return dimensions;\n};\n//# sourceMappingURL=common.js.map"]},"metadata":{},"sourceType":"module"}