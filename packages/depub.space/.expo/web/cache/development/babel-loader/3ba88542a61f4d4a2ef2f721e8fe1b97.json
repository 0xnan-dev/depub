{"ast":null,"code":"import _asyncToGenerator from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nexport function useScreenReaderEnabled() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      enabled = _React$useState2[0],\n      setEnabled = _React$useState2[1];\n\n  var mountedRef = React.useRef(false);\n\n  var handleSetEnabled = function handleSetEnabled(value) {\n    if (mountedRef.current) {\n      setEnabled(value);\n    }\n  };\n\n  React.useEffect(function () {\n    mountedRef.current = true;\n\n    function setInitialValue() {\n      return _setInitialValue.apply(this, arguments);\n    }\n\n    function _setInitialValue() {\n      _setInitialValue = _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return AccessibilityInfo.isScreenReaderEnabled();\n\n              case 2:\n                res = _context.sent;\n                handleSetEnabled(res);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _setInitialValue.apply(this, arguments);\n    }\n\n    var handler = AccessibilityInfo.addEventListener('screenReaderChanged', function (event) {\n      handleSetEnabled(event);\n    });\n    setInitialValue();\n    return function () {\n      mountedRef.current = false;\n      AccessibilityInfo.removeEventListener('screenReaderChanged', handler);\n    };\n  });\n  return enabled;\n}\n\n_s(useScreenReaderEnabled, \"lYEv5EE4yQebWQ8ZJOJ3Yj+4LBc=\");\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/hooks/useScreenReaderEnabled.js"],"names":["useScreenReaderEnabled","enabled","setEnabled","React","mountedRef","handleSetEnabled","res","AccessibilityInfo","handler","setInitialValue"],"mappings":";;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;;AAEA,OAAO,SAAA,sBAAA,GAAkC;AAAA,EAAA,EAAA;;AACvC,MAAA,eAAA,GAA8BG,KAAK,CAALA,QAAAA,CAA9B,KAA8BA,CAA9B;AAAA,MAAA,gBAAA,GAAA,cAAA,CAAA,eAAA,EAAA,CAAA,CAAA;AAAA,MAAOF,OAAP,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,MAAgBC,UAAhB,GAAA,gBAAA,CAAA,CAAA,CAAA;;AACA,MAAME,UAAU,GAAGD,KAAK,CAALA,MAAAA,CAAnB,KAAmBA,CAAnB;;AAEA,MAAME,gBAAgB,GAAhBA,SAAAA,gBAAAA,CAAmB,KAAnBA,EAA4B;AAChC,QAAID,UAAU,CAAd,OAAA,EAAwB;AACtBF,MAAAA,UAAU,CAAVA,KAAU,CAAVA;AAEH;AAJD,GAAA;;AAMAC,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpBC,IAAAA,UAAU,CAAVA,OAAAA,GAAAA,IAAAA;;AADoB,aAAA,eAAA,GAAA;AAAA,aAAA,gBAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AAAA;;AAAA,aAAA,gBAAA,GAAA;AAAA,MAAA,gBAAA,GAAA,iBAAA,CAAA,mBAAA,CAAA,IAAA,CAGpB,SAAA,OAAA,GAAA;AAAA,YAAA,GAAA;AAAA,eAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;AAAA,iBAAA,CAAA,EAAA;AAAA,oBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,mBAAA,CAAA;AAAA,gBAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,uBACoBG,iBAAiB,CADrC,qBACoBA,EADpB;;AAAA,mBAAA,CAAA;AACQD,gBAAAA,GADR,GAAA,QAAA,CAAA,IACQA;AACND,gBAAAA,gBAAgB,CAAhBA,GAAgB,CAAhBA;;AAFF,mBAAA,CAAA;AAAA,mBAAA,KAAA;AAAA,uBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,SAAA,EAAA,OAAA,CAAA;AAHoB,OAAA,CAAA,CAAA;AAAA,aAAA,gBAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AAQpB;;AAAA,QAAIG,OAAO,GAAGD,iBAAiB,CAAjBA,gBAAAA,CAAAA,qBAAAA,EAA0D,UAAA,KAAA,EAAS;AAC/EF,MAAAA,gBAAgB,CAAhBA,KAAgB,CAAhBA;AADF,KAAcE,CAAd;AAGAE,IAAAA,eAAe;AACf,WAAO,YAAM;AACXL,MAAAA,UAAU,CAAVA,OAAAA,GAAAA,KAAAA;AACAG,MAAAA,iBAAiB,CAAjBA,mBAAAA,CAAAA,qBAAAA,EAAAA,OAAAA;AAFF,KAAA;AAZFJ,GAAAA;AAiBA,SAAA,OAAA;;;GA3BcH,sB","sourcesContent":["import React from 'react';\nimport { AccessibilityInfo } from 'react-native';\nexport function useScreenReaderEnabled() {\n  const [enabled, setEnabled] = React.useState(false);\n  const mountedRef = React.useRef(false);\n\n  const handleSetEnabled = value => {\n    if (mountedRef.current) {\n      setEnabled(value);\n    }\n  };\n\n  React.useEffect(() => {\n    mountedRef.current = true;\n\n    async function setInitialValue() {\n      const res = await AccessibilityInfo.isScreenReaderEnabled();\n      handleSetEnabled(res);\n    }\n\n    let handler = AccessibilityInfo.addEventListener('screenReaderChanged', event => {\n      handleSetEnabled(event);\n    });\n    setInitialValue();\n    return () => {\n      mountedRef.current = false;\n      AccessibilityInfo.removeEventListener('screenReaderChanged', handler);\n    };\n  });\n  return enabled;\n}\n//# sourceMappingURL=useScreenReaderEnabled.js.map"]},"metadata":{},"sourceType":"module"}