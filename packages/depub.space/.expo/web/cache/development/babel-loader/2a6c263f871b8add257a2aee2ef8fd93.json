{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _excluded = [\"columns\", \"space\", \"spacingX\", \"spacingY\", \"minChildWidth\", \"children\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _primitives = require(\"../../primitives\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DEBUG_STYLES = false ? {\n  rows: {\n    borderWidth: '1px'\n  },\n  cols: {\n    borderWidth: '1px'\n  }\n} : {\n  rows: {},\n  cols: {}\n};\n\nvar SimpleGrid = function SimpleGrid(props, ref) {\n  var _ref = (0, _useThemeProps.useThemeProps)('SimpleGrid', props),\n      columns = _ref.columns,\n      space = _ref.space,\n      spacingX = _ref.spacingX,\n      spacingY = _ref.spacingY,\n      minChildWidth = _ref.minChildWidth,\n      children = _ref.children,\n      remainingProps = _objectWithoutProperties(_ref, _excluded);\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return _react[\"default\"].createElement(_react[\"default\"].Fragment, null);\n  }\n\n  var cellSpacing = space !== null && space !== void 0 ? space : 0;\n  var cellSpacingX = spacingX !== null && spacingX !== void 0 ? spacingX : cellSpacing;\n  var cellSpacingY = spacingY !== null && spacingY !== void 0 ? spacingY : cellSpacing;\n\n  var childrenArray = _react[\"default\"].Children.toArray(children);\n\n  if (columns) {\n    var rowSlices = [];\n\n    for (var i = 0; i < childrenArray.length; i = i + columns) {\n      rowSlices.push(childrenArray.slice(i, i + columns));\n    }\n\n    return _react[\"default\"].createElement(_primitives.VStack, _extends({}, DEBUG_STYLES.rows, {\n      space: cellSpacingY\n    }, remainingProps, {\n      ref: ref\n    }), rowSlices.map(function (row, rowIndex) {\n      return _react[\"default\"].createElement(_primitives.HStack, {\n        space: cellSpacingX,\n        key: rowIndex\n      }, row.map(function (col) {\n        return _react[\"default\"].createElement(_primitives.Box, _extends({}, DEBUG_STYLES.cols, {\n          key: col.key\n        }), col);\n      }));\n    }));\n  } else if (minChildWidth) {\n    return _react[\"default\"].createElement(_primitives.Box, _extends({\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\"\n    }, remainingProps, {\n      ref: ref\n    }), childrenArray.map(function (col) {\n      return _react[\"default\"].createElement(_primitives.Box, _extends({}, DEBUG_STYLES.cols, {\n        mx: cellSpacingX,\n        my: cellSpacingY,\n        key: col.key,\n        minWidth: minChildWidth\n      }), col);\n    }));\n  }\n\n  return _react[\"default\"].createElement(_react[\"default\"].Fragment, null);\n};\n\nvar _default = _react[\"default\"].memo(_react[\"default\"].forwardRef(SimpleGrid));\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/commonjs/components/composites/SimpleGrid/SimpleGrid.js"],"names":["Object","value","exports","_react","_interopRequireDefault","require","_primitives","_useThemeProps","_useHasResponsiveProps","obj","default","_extends","i","arguments","source","target","DEBUG_STYLES","rows","borderWidth","cols","SimpleGrid","columns","space","spacingX","spacingY","minChildWidth","children","remainingProps","cellSpacing","cellSpacingX","cellSpacingY","childrenArray","rowSlices","ref","key","row","col","flexDirection","flexWrap","justifyContent","mx","my","minWidth","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _primitives = require(\"../../primitives\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nconst DEBUG_STYLES = false ? {\n  rows: {\n    borderWidth: '1px'\n  },\n  cols: {\n    borderWidth: '1px'\n  }\n} : {\n  rows: {},\n  cols: {}\n};\n\nconst SimpleGrid = (props, ref) => {\n  const {\n    columns,\n    space,\n    spacingX,\n    spacingY,\n    minChildWidth,\n    children,\n    ...remainingProps\n  } = (0, _useThemeProps.useThemeProps)('SimpleGrid', props); //TODO: refactor for responsive prop\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null);\n  }\n\n  let cellSpacing = space !== null && space !== void 0 ? space : 0;\n  let cellSpacingX = spacingX !== null && spacingX !== void 0 ? spacingX : cellSpacing;\n  let cellSpacingY = spacingY !== null && spacingY !== void 0 ? spacingY : cellSpacing;\n\n  const childrenArray = _react.default.Children.toArray(children);\n\n  if (columns) {\n    let rowSlices = [];\n\n    for (let i = 0; i < childrenArray.length; i = i + columns) {\n      rowSlices.push(childrenArray.slice(i, i + columns));\n    }\n\n    return /*#__PURE__*/_react.default.createElement(_primitives.VStack, _extends({}, DEBUG_STYLES.rows, {\n      space: cellSpacingY\n    }, remainingProps, {\n      ref: ref\n    }), rowSlices.map((row, rowIndex) => {\n      return /*#__PURE__*/_react.default.createElement(_primitives.HStack, {\n        space: cellSpacingX,\n        key: rowIndex\n      }, row.map(col => {\n        return /*#__PURE__*/_react.default.createElement(_primitives.Box, _extends({}, DEBUG_STYLES.cols, {\n          key: col.key\n        }), col);\n      }));\n    }));\n  } // Needs more work for empty spacing i.e. auto-fit. Current workaround is to use wrap and let the columns be created dynamically\n  // https://css-tricks.com/auto-sizing-columns-css-grid-auto-fill-vs-auto-fit/\n  else if (minChildWidth) {\n      return /*#__PURE__*/_react.default.createElement(_primitives.Box, _extends({\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\"\n      }, remainingProps, {\n        ref: ref\n      }), childrenArray.map(col => {\n        return /*#__PURE__*/_react.default.createElement(_primitives.Box, _extends({}, DEBUG_STYLES.cols, {\n          mx: cellSpacingX,\n          my: cellSpacingY,\n          key: col.key,\n          minWidth: minChildWidth\n        }), col);\n      }));\n    }\n\n  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null);\n};\n\nvar _default = /*#__PURE__*/_react.default.memo( /*#__PURE__*/_react.default.forwardRef(SimpleGrid));\n\nexports.default = _default;\n//# sourceMappingURL=SimpleGrid.js.map"]},"metadata":{},"sourceType":"script"}