{"ast":null,"code":"import { theme as defaultTheme } from \"./../theme\";\nimport mergeWith from 'lodash.mergewith';\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nexport function extendTheme(overrides) {\n  function customizer(source, override) {\n    if (isFunction(source)) {\n      return function () {\n        var sourceValue = source.apply(void 0, arguments);\n        var overrideValue = isFunction(override) ? override.apply(void 0, arguments) : override;\n        return mergeWith({}, sourceValue, overrideValue, customizer);\n      };\n    }\n\n    return undefined;\n  }\n\n  for (var _len = arguments.length, restOverrides = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    restOverrides[_key - 1] = arguments[_key];\n  }\n\n  var finalOverrides = [overrides].concat(restOverrides).reduce(function (prevValue, currentValue) {\n    return mergeWith({}, prevValue, currentValue, customizer);\n  }, defaultTheme);\n  return finalOverrides;\n}\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/core/extendTheme.js"],"names":["theme","restOverrides","isFunction","sourceValue","source","overrideValue","override","mergeWith","finalOverrides"],"mappings":"AAAA,SAASA,KAAK,IAAd,YAAA;AACA,OAAA,SAAA,MAAA,kBAAA;;AAEA,SAAA,UAAA,CAAA,KAAA,EAA2B;AACzB,SAAO,OAAA,KAAA,KAAP,UAAA;AAGF;;AAAA,OAAO,SAAA,WAAA,CAAA,SAAA,EAAkD;AACvD,WAAA,UAAA,CAAA,MAAA,EAAA,QAAA,EAAsC;AACpC,QAAIE,UAAU,CAAd,MAAc,CAAd,EAAwB;AACtB,aAAO,YAAa;AAClB,YAAMC,WAAW,GAAGC,MAAM,CAANA,KAAAA,CAAAA,KAAAA,CAAAA,EAApB,SAAoBA,CAApB;AACA,YAAMC,aAAa,GAAGH,UAAU,CAAVA,QAAU,CAAVA,GAAuBI,QAAQ,CAARA,KAAAA,CAAAA,KAAAA,CAAAA,EAAvBJ,SAAuBI,CAAvBJ,GAAtB,QAAA;AACA,eAAOK,SAAS,CAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAhB,UAAgB,CAAhB;AAHF,OAAA;AAOF;;AAAA,WAAA,SAAA;AAVqD;;AAAA,OAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAfN,aAAe,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAfA,IAAAA,aAAe,CAAA,IAAA,GAAA,CAAA,CAAfA,GAAe,SAAA,CAAA,IAAA,CAAfA;AAaxC;;AAAA,MAAMO,cAAc,GAAG,CAAA,SAAA,EAAA,MAAA,CAAA,aAAA,EAAA,MAAA,CAAqC,UAAA,SAAA,EAAA,YAAA,EAA6B;AACvF,WAAOD,SAAS,CAAA,EAAA,EAAA,SAAA,EAAA,YAAA,EAAhB,UAAgB,CAAhB;AADqB,GAAA,EAAvB,YAAuB,CAAvB;AAGA,SAAA,cAAA;AACD","sourcesContent":["import { theme as defaultTheme } from './../theme';\nimport mergeWith from 'lodash.mergewith';\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nexport function extendTheme(overrides, ...restOverrides) {\n  function customizer(source, override) {\n    if (isFunction(source)) {\n      return (...args) => {\n        const sourceValue = source(...args);\n        const overrideValue = isFunction(override) ? override(...args) : override;\n        return mergeWith({}, sourceValue, overrideValue, customizer);\n      };\n    }\n\n    return undefined;\n  }\n\n  const finalOverrides = [overrides, ...restOverrides].reduce((prevValue, currentValue) => {\n    return mergeWith({}, prevValue, currentValue, customizer);\n  }, defaultTheme);\n  return finalOverrides;\n}\n//# sourceMappingURL=extendTheme.js.map"]},"metadata":{},"sourceType":"module"}