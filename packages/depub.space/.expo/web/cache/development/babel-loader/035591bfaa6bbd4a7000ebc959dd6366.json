{"ast":null,"code":"import _defineProperty from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport * as stateChangeTypes from \"./types\";\nimport { getDefaultValue } from \"./utils\";\nexport function useTypeaheadReducer(state, action) {\n  var type = action.type,\n      props = action.props;\n  var changes;\n\n  switch (type) {\n    case stateChangeTypes.ItemClick:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index])\n      };\n      break;\n\n    case stateChangeTypes.InputBlur:\n      if (state.isOpen) {\n        changes = {\n          isOpen: false\n        };\n      }\n\n      break;\n\n    case stateChangeTypes.InputChange:\n      changes = {\n        isOpen: true,\n        inputValue: action.inputValue\n      };\n      break;\n\n    case stateChangeTypes.ToggleButtonClick:\n    case stateChangeTypes.FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen\n      };\n      break;\n\n    case stateChangeTypes.FunctionOpenMenu:\n      changes = {\n        isOpen: true\n      };\n      break;\n\n    case stateChangeTypes.FunctionCloseMenu:\n      changes = {\n        isOpen: false\n      };\n      break;\n\n    case stateChangeTypes.FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n        inputValue: props.itemToString(action.selectedItem)\n      };\n      break;\n\n    case stateChangeTypes.ControlledPropUpdatedSelectedItem:\n    case stateChangeTypes.FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: getDefaultValue(props, 'selectedItem'),\n        inputValue: getDefaultValue(props, 'inputValue')\n      };\n      break;\n\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return _objectSpread(_objectSpread({}, state), changes);\n}\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/components/composites/Typeahead/useTypeahead/reducer.js"],"names":["type","props","action","stateChangeTypes","changes","isOpen","getDefaultValue","selectedItem","inputValue","state"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,OAAO,KAAP,gBAAA;AACA,SAAA,eAAA;AACA,OAAO,SAAA,mBAAA,CAAA,KAAA,EAAA,MAAA,EAA4C;AACjD,MACEA,IADF,GAGIE,MAHJ,CAAA,IAAA;AAAA,MAEED,KAFF,GAGIC,MAHJ,CAAA,KAAA;AAIA,MAAA,OAAA;;AAEA,UAAA,IAAA;AACE,SAAKC,gBAAgB,CAArB,SAAA;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAEC,eAAe,CAAA,KAAA,EADf,QACe,CADf;AAERC,QAAAA,YAAY,EAAEN,KAAK,CAALA,KAAAA,CAAYC,MAAM,CAFxB,KAEMD,CAFN;AAGRO,QAAAA,UAAU,EAAEP,KAAK,CAALA,YAAAA,CAAmBA,KAAK,CAALA,KAAAA,CAAYC,MAAM,CAHnDE,KAGiCH,CAAnBA;AAHJ,OAAVG;AAKA;;AAEF,SAAKD,gBAAgB,CAArB,SAAA;AACE,UAAIM,KAAK,CAAT,MAAA,EAAkB;AAChBL,QAAAA,OAAO,GAAG;AACRC,UAAAA,MAAM,EADRD;AAAU,SAAVA;AAKF;;AAAA;;AAEF,SAAKD,gBAAgB,CAArB,WAAA;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EADE,IAAA;AAERG,QAAAA,UAAU,EAAEN,MAAM,CAFpBE;AAAU,OAAVA;AAIA;;AAEF,SAAKD,gBAAgB,CAArB,iBAAA;AACA,SAAKA,gBAAgB,CAArB,kBAAA;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,CAACI,KAAK,CADhBL;AAAU,OAAVA;AAGA;;AAEF,SAAKD,gBAAgB,CAArB,gBAAA;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EADRD;AAAU,OAAVA;AAGA;;AAEF,SAAKD,gBAAgB,CAArB,iBAAA;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EADRD;AAAU,OAAVA;AAGA;;AAEF,SAAKD,gBAAgB,CAArB,kBAAA;AACEC,MAAAA,OAAO,GAAG;AACRG,QAAAA,YAAY,EAAEL,MAAM,CADZ,YAAA;AAERM,QAAAA,UAAU,EAAEP,KAAK,CAALA,YAAAA,CAAmBC,MAAM,CAFvCE,YAEcH;AAFJ,OAAVG;AAIA;;AAEF,SAAKD,gBAAgB,CAArB,iCAAA;AACA,SAAKA,gBAAgB,CAArB,qBAAA;AACEC,MAAAA,OAAO,GAAG;AACRI,QAAAA,UAAU,EAAEN,MAAM,CADpBE;AAAU,OAAVA;AAGA;;AAEF,SAAKD,gBAAgB,CAArB,aAAA;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAEC,eAAe,CAAA,KAAA,EADf,QACe,CADf;AAERC,QAAAA,YAAY,EAAED,eAAe,CAAA,KAAA,EAFrB,cAEqB,CAFrB;AAGRE,QAAAA,UAAU,EAAEF,eAAe,CAAA,KAAA,EAH7BF,YAG6B;AAHnB,OAAVA;AAKA;;AAEF;AACE,YAAM,IAAA,KAAA,CAnEV,4CAmEU,CAAN;AAnEJ;;AAsEA,SAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,KAAA,CAAA,EAAA,OAAA,CAAA;AAGD","sourcesContent":["import * as stateChangeTypes from './types';\nimport { getDefaultValue } from './utils';\nexport function useTypeaheadReducer(state, action) {\n  const {\n    type,\n    props\n  } = action;\n  let changes;\n\n  switch (type) {\n    case stateChangeTypes.ItemClick:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index])\n      };\n      break;\n\n    case stateChangeTypes.InputBlur:\n      if (state.isOpen) {\n        changes = {\n          isOpen: false\n        };\n      }\n\n      break;\n\n    case stateChangeTypes.InputChange:\n      changes = {\n        isOpen: true,\n        inputValue: action.inputValue\n      };\n      break;\n\n    case stateChangeTypes.ToggleButtonClick:\n    case stateChangeTypes.FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen\n      };\n      break;\n\n    case stateChangeTypes.FunctionOpenMenu:\n      changes = {\n        isOpen: true\n      };\n      break;\n\n    case stateChangeTypes.FunctionCloseMenu:\n      changes = {\n        isOpen: false\n      };\n      break;\n\n    case stateChangeTypes.FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n        inputValue: props.itemToString(action.selectedItem)\n      };\n      break;\n\n    case stateChangeTypes.ControlledPropUpdatedSelectedItem:\n    case stateChangeTypes.FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: getDefaultValue(props, 'selectedItem'),\n        inputValue: getDefaultValue(props, 'inputValue')\n      };\n      break;\n\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return { ...state,\n    ...changes\n  };\n}\n//# sourceMappingURL=reducer.js.map"]},"metadata":{},"sourceType":"module"}