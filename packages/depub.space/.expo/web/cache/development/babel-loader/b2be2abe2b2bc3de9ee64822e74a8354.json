{"ast":null,"code":"import { mode } from \"../tools\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\n\nfunction getSelectionColor(props) {\n  if (Platform.OS === 'ios') {\n    return mode('coolGray.800', 'warmGray.50')(props);\n  } else if (Platform.OS === 'android') {\n    return mode('coolGray.800', 'warmGray.50')(props);\n  }\n}\n\nvar baseStyle = function baseStyle(props) {\n  return {\n    selectionColor: getSelectionColor(props),\n    fontFamily: 'body',\n    p: '2',\n    borderRadius: 'sm',\n    overflow: 'hidden',\n    color: mode('coolGray.800', 'warmGray.50')(props),\n    placeholderTextColor: 'muted.400',\n    borderColor: mode('muted.200', 'gray.500')(props),\n    _disabled: {\n      opacity: '80',\n      bg: mode('muted.100', 'muted.700')(props)\n    },\n    _invalid: {\n      borderColor: mode('danger.600', 'danger.300')(props)\n    },\n    _focus: {\n      borderColor: mode('primary.400', 'primary.500')(props)\n    },\n    _web: {\n      outlineWidth: '0',\n      overflow: 'auto',\n      lineHeight: 'lg'\n    }\n  };\n};\n\nfunction roundedStyle(props) {\n  return {\n    borderRadius: '25',\n    borderWidth: '1',\n    _hover: {\n      bg: mode('gray.100', 'gray.700')(props)\n    }\n  };\n}\n\nfunction outlineStyle(props) {\n  return {\n    borderWidth: '1',\n    _hover: {\n      bg: mode('gray.100', 'gray.700')(props)\n    }\n  };\n}\n\nfunction filledStyle(props) {\n  return {\n    bg: props.bg || mode('muted.200', 'muted.600')(props),\n    borderWidth: '1',\n    borderColor: 'transparent',\n    _hover: {\n      bg: mode('muted.300', 'muted.700')(props)\n    }\n  };\n}\n\nfunction unstyledStyle() {\n  return {\n    borderWidth: '0'\n  };\n}\n\nfunction underlinedStyle() {\n  return {\n    borderRadius: '0',\n    borderTopWidth: '0',\n    borderLeftWidth: '0',\n    borderRightWidth: '0',\n    borderBottomWidth: '1'\n  };\n}\n\nvar variants = {\n  outline: outlineStyle,\n  underlined: underlinedStyle,\n  rounded: roundedStyle,\n  filled: filledStyle,\n  unstyled: unstyledStyle\n};\nvar sizes = {\n  '2xl': {\n    fontSize: 'xl'\n  },\n  'xl': {\n    fontSize: 'lg'\n  },\n  'lg': {\n    fontSize: 'md'\n  },\n  'md': {\n    fontSize: 'sm'\n  },\n  'sm': {\n    fontSize: 'xs'\n  },\n  'xs': {\n    fontSize: '2xs'\n  }\n};\nvar defaultProps = {\n  size: 'sm',\n  variant: 'outline'\n};\nexport var Input = {\n  baseStyle: baseStyle,\n  defaultProps: defaultProps,\n  variants: variants,\n  sizes: sizes\n};\nexport default {};\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/theme/components/input.js"],"names":["Platform","mode","baseStyle","selectionColor","getSelectionColor","fontFamily","p","borderRadius","overflow","color","placeholderTextColor","borderColor","_disabled","opacity","bg","_invalid","_focus","_web","outlineWidth","lineHeight","borderWidth","_hover","props","borderTopWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","variants","outline","underlined","rounded","filled","unstyled","sizes","fontSize","defaultProps","size","variant","Input"],"mappings":"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","sourcesContent":["import { mode } from '../tools';\nimport { Platform } from 'react-native';\n\nfunction getSelectionColor(props) {\n  if (Platform.OS === 'ios') {\n    return mode('coolGray.800', 'warmGray.50')(props);\n  } else if (Platform.OS === 'android') {\n    return mode('coolGray.800', 'warmGray.50')(props);\n  }\n}\n\nconst baseStyle = props => {\n  // const { primary } = props.theme.colors;\n  // Todo: Resolve boxShadow Color or Provide some alternatiove prop for user to change focusRing color\n  // // Todo: Update to support similar focusRing on iOS , Android and Web\n  // const focusRing =\n  //   Platform.OS === 'web'\n  //     ? {\n  //         boxShadow:\n  //           props.variant !== 'underlined'\n  //             ? `${primary[400]} 0px 0px 0px 1px`\n  //             : `${primary[400]} 0px 1px 0px 0px`,\n  //         zIndex: 1,\n  //       }\n  //     : {\n  //         // boxShadow: `${useToken('colors', ['primary.400'])} 0px 0px 0px 1px`,\n  //       };\n  return {\n    selectionColor: getSelectionColor(props),\n    fontFamily: 'body',\n    p: '2',\n    borderRadius: 'sm',\n    overflow: 'hidden',\n    color: mode('coolGray.800', 'warmGray.50')(props),\n    placeholderTextColor: 'muted.400',\n    borderColor: mode('muted.200', 'gray.500')(props),\n    _disabled: {\n      opacity: '80',\n      bg: mode('muted.100', 'muted.700')(props)\n    },\n    _invalid: {\n      borderColor: mode('danger.600', 'danger.300')(props)\n    },\n    _focus: {\n      borderColor: mode('primary.400', 'primary.500')(props)\n    },\n    _web: {\n      outlineWidth: '0',\n      overflow: 'auto',\n      lineHeight: 'lg' // Todo: Move to _web inside size so that sm and xs don't have this much height\n\n    }\n  };\n};\n\nfunction roundedStyle(props) {\n  return {\n    borderRadius: '25',\n    borderWidth: '1',\n    _hover: {\n      bg: mode('gray.100', 'gray.700')(props)\n    }\n  };\n}\n\nfunction outlineStyle(props) {\n  return {\n    borderWidth: '1',\n    _hover: {\n      bg: mode('gray.100', 'gray.700')(props)\n    }\n  };\n}\n\nfunction filledStyle(props) {\n  return {\n    bg: props.bg || mode('muted.200', 'muted.600')(props),\n    borderWidth: '1',\n    borderColor: 'transparent',\n    _hover: {\n      bg: mode('muted.300', 'muted.700')(props)\n    }\n  };\n}\n\nfunction unstyledStyle() {\n  return {\n    borderWidth: '0'\n  };\n}\n\nfunction underlinedStyle() {\n  return {\n    borderRadius: '0',\n    borderTopWidth: '0',\n    borderLeftWidth: '0',\n    borderRightWidth: '0',\n    borderBottomWidth: '1'\n  };\n}\n\nconst variants = {\n  outline: outlineStyle,\n  underlined: underlinedStyle,\n  rounded: roundedStyle,\n  filled: filledStyle,\n  unstyled: unstyledStyle\n};\nconst sizes = {\n  '2xl': {\n    fontSize: 'xl'\n  },\n  'xl': {\n    fontSize: 'lg'\n  },\n  'lg': {\n    fontSize: 'md'\n  },\n  'md': {\n    fontSize: 'sm'\n  },\n  'sm': {\n    fontSize: 'xs'\n  },\n  'xs': {\n    fontSize: '2xs'\n  }\n};\nconst defaultProps = {\n  size: 'sm',\n  variant: 'outline'\n}; // Input\n\nexport const Input = {\n  baseStyle,\n  defaultProps,\n  variants,\n  sizes\n};\nexport default {};\n//# sourceMappingURL=input.js.map"]},"metadata":{},"sourceType":"module"}