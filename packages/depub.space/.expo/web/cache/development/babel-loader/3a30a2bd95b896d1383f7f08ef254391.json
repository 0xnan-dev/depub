{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NativeBaseProvider = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _utils = require(\"@react-native-aria/utils\");\n\nvar _theme = require(\"./../theme\");\n\nvar _HybridProvider = _interopRequireDefault(require(\"./hybrid-overlay/HybridProvider\"));\n\nvar _overlays = require(\"@react-native-aria/overlays\");\n\nvar _Toast = require(\"../components/composites/Toast\");\n\nvar _NativeBaseContext = require(\"./NativeBaseContext\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _utils2 = require(\"../theme/tools/utils\");\n\nvar _useResponsiveQuery = require(\"../utils/useResponsiveQuery\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar defaultInitialWindowMetricsBasedOnPlatform = _reactNative.Platform.select({\n  web: {\n    frame: {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    },\n    insets: {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    }\n  },\n  \"default\": _reactNativeSafeAreaContext.initialWindowMetrics\n});\n\nvar NativeBaseProvider = function NativeBaseProvider(props) {\n  var _config$theme, _useWindowDimensions;\n\n  var colorModeManager = props.colorModeManager,\n      _props$config = props.config,\n      config = _props$config === void 0 ? _NativeBaseContext.defaultConfig : _props$config,\n      children = props.children,\n      _props$theme = props.theme,\n      propsTheme = _props$theme === void 0 ? _theme.theme : _props$theme,\n      initialWindowMetrics = props.initialWindowMetrics,\n      isSSR = props.isSSR,\n      disableContrastText = props.disableContrastText;\n  var theme = (_config$theme = config.theme) !== null && _config$theme !== void 0 ? _config$theme : propsTheme;\n\n  var newTheme = _react[\"default\"].useMemo(function () {\n    if (config.enableRem) {\n      return (0, _utils2.platformSpecificSpaceUnits)(theme);\n    }\n\n    return theme;\n  }, [config.enableRem, theme]);\n\n  var windowWidth = (_useWindowDimensions = (0, _reactNative.useWindowDimensions)()) === null || _useWindowDimensions === void 0 ? void 0 : _useWindowDimensions.width;\n\n  var currentBreakpoint = _react[\"default\"].useMemo(function () {\n    return (0, _utils2.getClosestBreakpoint)(newTheme.breakpoints, windowWidth);\n  }, [windowWidth, newTheme.breakpoints]);\n\n  return _react[\"default\"].createElement(_NativeBaseContext.NativeBaseConfigProvider, {\n    theme: newTheme,\n    config: config,\n    currentBreakpoint: currentBreakpoint,\n    isSSR: isSSR,\n    disableContrastText: disableContrastText\n  }, _react[\"default\"].createElement(_reactNativeSafeAreaContext.SafeAreaProvider, {\n    initialMetrics: initialWindowMetrics !== null && initialWindowMetrics !== void 0 ? initialWindowMetrics : defaultInitialWindowMetricsBasedOnPlatform\n  }, _react[\"default\"].createElement(_useResponsiveQuery.ResponsiveQueryProvider, {\n    disableCSSMediaQueries: !isSSR\n  }, _react[\"default\"].createElement(_HybridProvider[\"default\"], {\n    colorModeManager: colorModeManager,\n    options: theme.config\n  }, _react[\"default\"].createElement(_overlays.OverlayProvider, null, _react[\"default\"].createElement(_Toast.ToastProvider, null, _react[\"default\"].createElement(InitializeToastRef, null), _react[\"default\"].createElement(_utils.SSRProvider, null, children)))))));\n};\n\nexports.NativeBaseProvider = NativeBaseProvider;\n\nvar InitializeToastRef = function InitializeToastRef() {\n  var toast = (0, _Toast.useToast)();\n  _Toast.ToastRef.current = toast;\n  return null;\n};","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/commonjs/core/NativeBaseProvider.js"],"names":["Object","value","exports","_react","_interopRequireDefault","require","_reactNativeSafeAreaContext","_utils","_theme","_HybridProvider","_overlays","_Toast","_NativeBaseContext","_utils2","_useResponsiveQuery","obj","default","defaultInitialWindowMetricsBasedOnPlatform","_reactNative","web","frame","x","y","width","height","insets","top","left","right","bottom","NativeBaseProvider","colorModeManager","config","children","propsTheme","initialWindowMetrics","isSSR","disableContrastText","props","theme","_config$theme","newTheme","windowWidth","_useWindowDimensions","currentBreakpoint","initialMetrics","disableCSSMediaQueries","options","InitializeToastRef","toast"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NativeBaseProvider = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _utils = require(\"@react-native-aria/utils\");\n\nvar _theme = require(\"./../theme\");\n\nvar _HybridProvider = _interopRequireDefault(require(\"./hybrid-overlay/HybridProvider\"));\n\nvar _overlays = require(\"@react-native-aria/overlays\");\n\nvar _Toast = require(\"../components/composites/Toast\");\n\nvar _NativeBaseContext = require(\"./NativeBaseContext\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _utils2 = require(\"../theme/tools/utils\");\n\nvar _useResponsiveQuery = require(\"../utils/useResponsiveQuery\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// For SSR to work, we need to pass initial insets as 0 values on web.\n// https://github.com/th3rdwave/react-native-safe-area-context/issues/132\nconst defaultInitialWindowMetricsBasedOnPlatform = _reactNative.Platform.select({\n  web: {\n    frame: {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    },\n    insets: {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    }\n  },\n  default: _reactNativeSafeAreaContext.initialWindowMetrics\n});\n\nconst NativeBaseProvider = props => {\n  var _config$theme, _useWindowDimensions;\n\n  const {\n    colorModeManager,\n    config = _NativeBaseContext.defaultConfig,\n    children,\n    theme: propsTheme = _theme.theme,\n    initialWindowMetrics,\n    isSSR,\n    disableContrastText\n  } = props;\n  const theme = (_config$theme = config.theme) !== null && _config$theme !== void 0 ? _config$theme : propsTheme;\n\n  const newTheme = _react.default.useMemo(() => {\n    if (config.enableRem) {\n      return (0, _utils2.platformSpecificSpaceUnits)(theme);\n    }\n\n    return theme;\n  }, [config.enableRem, theme]);\n\n  const windowWidth = (_useWindowDimensions = (0, _reactNative.useWindowDimensions)()) === null || _useWindowDimensions === void 0 ? void 0 : _useWindowDimensions.width;\n\n  const currentBreakpoint = _react.default.useMemo(() => (0, _utils2.getClosestBreakpoint)(newTheme.breakpoints, windowWidth), [windowWidth, newTheme.breakpoints]);\n\n  return /*#__PURE__*/_react.default.createElement(_NativeBaseContext.NativeBaseConfigProvider, {\n    theme: newTheme,\n    config: config,\n    currentBreakpoint: currentBreakpoint,\n    isSSR: isSSR,\n    disableContrastText: disableContrastText\n  }, /*#__PURE__*/_react.default.createElement(_reactNativeSafeAreaContext.SafeAreaProvider, {\n    initialMetrics: initialWindowMetrics !== null && initialWindowMetrics !== void 0 ? initialWindowMetrics : defaultInitialWindowMetricsBasedOnPlatform\n  }, /*#__PURE__*/_react.default.createElement(_useResponsiveQuery.ResponsiveQueryProvider, {\n    disableCSSMediaQueries: !isSSR\n  }, /*#__PURE__*/_react.default.createElement(_HybridProvider.default, {\n    colorModeManager: colorModeManager,\n    options: theme.config\n  }, /*#__PURE__*/_react.default.createElement(_overlays.OverlayProvider, null, /*#__PURE__*/_react.default.createElement(_Toast.ToastProvider, null, /*#__PURE__*/_react.default.createElement(InitializeToastRef, null), /*#__PURE__*/_react.default.createElement(_utils.SSRProvider, null, children)))))));\n};\n\nexports.NativeBaseProvider = NativeBaseProvider;\n\nconst InitializeToastRef = () => {\n  const toast = (0, _Toast.useToast)();\n  _Toast.ToastRef.current = toast;\n  return null;\n};\n//# sourceMappingURL=NativeBaseProvider.js.map"]},"metadata":{},"sourceType":"script"}