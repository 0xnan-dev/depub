{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLink = useLink;\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar linkToHREF = function linkToHREF(URL) {\n  _reactNative.Linking.openURL(URL)[\"catch\"](function (err) {\n    return console.error('An error occurred', err);\n  });\n};\n\nvar addOnPressFunctionality = function addOnPressFunctionality(href, callback) {\n  href ? linkToHREF(href) : '';\n  callback ? callback() : function () {};\n};\n\nfunction useLink(props) {\n  var href = props.href,\n      isExternal = props.isExternal,\n      _onPress = props.onPress,\n      _ref = props._ref;\n  var platformLinkProps = {};\n\n  if (_reactNative.Platform.OS === 'web') {\n    platformLinkProps = {\n      href: href,\n      onClick: _onPress\n    };\n\n    if (isExternal && _ref.current) {\n      _ref.current.target = '_blank';\n    }\n  } else {\n    platformLinkProps = {\n      onPress: function onPress() {\n        addOnPressFunctionality(href, _onPress);\n      }\n    };\n  }\n\n  return {\n    linkProps: _objectSpread(_objectSpread({}, platformLinkProps), {}, {\n      accessibilityRole: 'link',\n      accessible: true\n    })\n  };\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/commonjs/components/primitives/Link/useLink.js"],"names":["Object","value","exports","linkToHREF","_reactNative","console","addOnPressFunctionality","href","callback","isExternal","onPress","_ref","props","platformLinkProps","onClick","linkProps","accessibilityRole","accessible"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEAA;;AAAAA,MAAM,CAANA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAA6C;AAC3CC,EAAAA,KAAK,EADPD;AAA6C,CAA7CA;AAGAE,OAAO,CAAPA,OAAAA,GAAAA,OAAAA;;;;AAIA,IAAMC,UAAU,GAAVA,SAAAA,UAAAA,CAAa,GAAbA,EAAoB;AACxBC,EAAAA,YAAY,CAAZA,OAAAA,CAAAA,OAAAA,CAAAA,GAAAA,WAAwC,UAAA,GAAA,EAAG;AAAA,WAAIC,OAAO,CAAPA,KAAAA,CAAAA,mBAAAA,EAAJ,GAAIA,CAAJ;AAA3CD,GAAAA;AADF,CAAA;;AAIA,IAAME,uBAAuB,GAAvBA,SAAAA,uBAAAA,CAA0B,IAA1BA,EAA0B,QAA1BA,EAA8C;AAClDC,EAAAA,IAAI,GAAGJ,UAAU,CAAb,IAAa,CAAb,GAAJI,EAAAA;AACAC,EAAAA,QAAQ,GAAGA,QAAH,EAAA,GAAgB,YAAM,CAA9BA,CAAAA;AAFF,CAAA;;AAKA,SAAA,OAAA,CAAA,KAAA,EAAwB;AACtB,MACED,IADF,GAKIK,KALJ,CAAA,IAAA;AAAA,MAEEH,UAFF,GAKIG,KALJ,CAAA,UAAA;AAAA,MAGEF,QAHF,GAKIE,KALJ,CAAA,OAAA;AAAA,MAIED,IAJF,GAKIC,KALJ,CAAA,IAAA;AAMA,MAAIC,iBAAiB,GAArB,EAAA;;AAEA,MAAIT,YAAY,CAAZA,QAAAA,CAAAA,EAAAA,KAAJ,KAAA,EAAwC;AACtCS,IAAAA,iBAAiB,GAAG;AAClBN,MAAAA,IAAI,EADc,IAAA;AAElBO,MAAAA,OAAO,EAFTD;AAAoB,KAApBA;;AAKA,QAAIJ,UAAU,IAAIE,IAAI,CAAtB,OAAA,EAAgC;AAC9BA,MAAAA,IAAI,CAAJA,OAAAA,CAAAA,MAAAA,GAAAA,QAAAA;AAEH;AATD,GAAA,MASO;AACLE,IAAAA,iBAAiB,GAAG;AAClBH,MAAAA,OAAO,EAAE,SAAA,OAAA,GAAM;AACbJ,QAAAA,uBAAuB,CAAA,IAAA,EAAvBA,QAAuB,CAAvBA;AAFJO;AAAoB,KAApBA;AAOF;;AAAA,SAAO;AACLE,IAAAA,SAAS,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA;AACPC,MAAAA,iBAAiB,EADV,MAAA;AAEPC,MAAAA,UAAU,EAHd;AACW,KAAA;AADJ,GAAP;AAMD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLink = useLink;\n\nvar _reactNative = require(\"react-native\");\n\nconst linkToHREF = URL => {\n  _reactNative.Linking.openURL(URL).catch(err => console.error('An error occurred', err));\n};\n\nconst addOnPressFunctionality = (href, callback) => {\n  href ? linkToHREF(href) : '';\n  callback ? callback() : () => {};\n};\n\nfunction useLink(props) {\n  const {\n    href,\n    isExternal,\n    onPress,\n    _ref\n  } = props;\n  let platformLinkProps = {};\n\n  if (_reactNative.Platform.OS === 'web') {\n    platformLinkProps = {\n      href,\n      onClick: onPress\n    }; // Adding target to a tag created by RN-Web\n\n    if (isExternal && _ref.current) {\n      _ref.current.target = '_blank';\n    }\n  } else {\n    platformLinkProps = {\n      onPress: () => {\n        addOnPressFunctionality(href, onPress);\n      }\n    };\n  }\n\n  return {\n    linkProps: { ...platformLinkProps,\n      accessibilityRole: 'link',\n      accessible: true\n    }\n  };\n}\n//# sourceMappingURL=useLink.js.map"]},"metadata":{},"sourceType":"script"}