{"ast":null,"code":"import _defineProperty from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"onKeyPress\", \"onFocus\", \"onBlur\", \"disableFocusHandling\", \"inputProps\", \"wrapperRef\"],\n    _excluded2 = [\"isFullWidth\", \"isDisabled\", \"isReadOnly\", \"ariaLabel\", \"accessibilityLabel\", \"placeholderTextColor\", \"selectionColor\", \"underlineColorAndroid\", \"type\", \"fontFamily\", \"fontWeight\", \"fontStyle\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useToken } from \"../../../hooks\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from \"../../../utils\";\nimport { makeStyledComponent } from \"../../../utils/styled\";\nimport { useResolvedFontFamily } from \"../../../hooks/useResolvedFontFamily\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar StyledInput = makeStyledComponent(TextInput);\n_c = StyledInput;\n\nvar InputBase = function InputBase(_ref2, ref) {\n  _s();\n\n  var _onKeyPress = _ref2.onKeyPress,\n      _onFocus = _ref2.onFocus,\n      _onBlur = _ref2.onBlur,\n      disableFocusHandling = _ref2.disableFocusHandling,\n      inputProps = _ref2.inputProps,\n      wrapperRef = _ref2.wrapperRef,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isFocused = _React$useState2[0],\n      setIsFocused = _React$useState2[1];\n\n  var handleFocus = function handleFocus(focusState, callback) {\n    !disableFocusHandling && setIsFocused(focusState);\n    callback();\n  };\n\n  var inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required\n  };\n\n  var _ref = React.useRef(null);\n\n  var _useHover = useHover({}, _ref),\n      isHovered = _useHover.isHovered;\n\n  var _usePropsResolution = usePropsResolution('Input', _objectSpread(_objectSpread({}, inputThemeProps), props), {\n    isDisabled: inputThemeProps.isDisabled,\n    isHovered: isHovered,\n    isFocused: isFocused,\n    isInvalid: inputThemeProps.isInvalid,\n    isReadOnly: inputThemeProps.isReadOnly\n  }),\n      isFullWidth = _usePropsResolution.isFullWidth,\n      isDisabled = _usePropsResolution.isDisabled,\n      isReadOnly = _usePropsResolution.isReadOnly,\n      ariaLabel = _usePropsResolution.ariaLabel,\n      accessibilityLabel = _usePropsResolution.accessibilityLabel,\n      placeholderTextColor = _usePropsResolution.placeholderTextColor,\n      selectionColor = _usePropsResolution.selectionColor,\n      underlineColorAndroid = _usePropsResolution.underlineColorAndroid,\n      type = _usePropsResolution.type,\n      fontFamily = _usePropsResolution.fontFamily,\n      fontWeight = _usePropsResolution.fontWeight,\n      fontStyle = _usePropsResolution.fontStyle,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  var resolvedFontFamily = useResolvedFontFamily({\n    fontFamily: fontFamily,\n    fontWeight: fontWeight !== null && fontWeight !== void 0 ? fontWeight : 400,\n    fontStyle: fontStyle !== null && fontStyle !== void 0 ? fontStyle : 'normal'\n  });\n  var resolvedPlaceholderTextColor = useToken('colors', placeholderTextColor);\n  var resolvedSelectionColor = useToken('colors', selectionColor);\n  var resolvedUnderlineColorAndroid = useToken('colors', underlineColorAndroid);\n\n  if (useHasResponsiveProps(_objectSpread(_objectSpread({}, props), {}, {\n    onKeyPress: _onKeyPress,\n    onFocus: _onFocus,\n    onBlur: _onBlur,\n    disableFocusHandling: disableFocusHandling,\n    inputProps: inputProps\n  }))) {\n    return null;\n  }\n\n  return React.createElement(StyledInput, _extends({}, inputProps, resolvedFontFamily, {\n    secureTextEntry: type === 'password',\n    accessible: true,\n    accessibilityLabel: ariaLabel || accessibilityLabel,\n    editable: isDisabled || isReadOnly ? false : true,\n    w: isFullWidth ? '100%' : undefined\n  }, resolvedProps, {\n    placeholderTextColor: resolvedPlaceholderTextColor,\n    selectionColor: resolvedSelectionColor,\n    underlineColorAndroid: resolvedUnderlineColorAndroid,\n    onKeyPress: function onKeyPress(e) {\n      e.persist();\n      _onKeyPress && _onKeyPress(e);\n    },\n    onFocus: function onFocus(e) {\n      handleFocus(true, _onFocus ? function () {\n        return _onFocus(e);\n      } : function () {});\n    },\n    onBlur: function onBlur(e) {\n      handleFocus(false, _onBlur ? function () {\n        return _onBlur(e);\n      } : function () {});\n    }\n  }, Platform.OS === 'web' ? {\n    disabled: isDisabled,\n    cursor: isDisabled ? 'not-allowed' : 'auto'\n  } : {}, {\n    ref: mergeRefs([ref, _ref, wrapperRef]),\n    style: Platform.OS === 'web' ? {\n      outline: 'none'\n    } : {}\n  }));\n};\n\n_s(InputBase, \"cswFeVn1X5xf9fh6tlRQVIMH380=\", false, function () {\n  return [useHover, usePropsResolution, useResolvedFontFamily, useToken, useToken, useToken, useHasResponsiveProps];\n});\n\n_c2 = InputBase;\nexport default _c4 = memo(_c3 = forwardRef(InputBase));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledInput\");\n$RefreshReg$(_c2, \"InputBase\");\n$RefreshReg$(_c3, \"%default%$memo\");\n$RefreshReg$(_c4, \"%default%\");\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/components/primitives/Input/InputBase.js"],"names":["_extends","Object","i","arguments","source","target","StyledInput","makeStyledComponent","InputBase","onKeyPress","onFocus","onBlur","disableFocusHandling","inputProps","wrapperRef","props","isFocused","setIsFocused","React","handleFocus","callback","inputThemeProps","isDisabled","isInvalid","isReadOnly","isRequired","_ref","isHovered","useHover","isFullWidth","ariaLabel","accessibilityLabel","placeholderTextColor","selectionColor","underlineColorAndroid","type","fontFamily","fontWeight","fontStyle","resolvedProps","usePropsResolution","resolvedFontFamily","useResolvedFontFamily","resolvedPlaceholderTextColor","useToken","resolvedSelectionColor","resolvedUnderlineColorAndroid","useHasResponsiveProps","secureTextEntry","accessible","editable","w","e","Platform","disabled","cursor","ref","mergeRefs","style","outline","memo","forwardRef"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport { TextInput, Platform } from 'react-native';\nimport { useToken } from '../../../hooks';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nconst StyledInput = makeStyledComponent(TextInput);\n\nconst InputBase = ({\n  onKeyPress,\n  onFocus,\n  onBlur,\n  disableFocusHandling,\n  inputProps,\n  wrapperRef,\n  ...props\n}, ref) => {\n  const [isFocused, setIsFocused] = React.useState(false);\n\n  const handleFocus = (focusState, callback) => {\n    !disableFocusHandling && setIsFocused(focusState);\n    callback();\n  };\n\n  const inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required\n  };\n\n  const _ref = React.useRef(null);\n\n  const {\n    isHovered\n  } = useHover({}, _ref);\n  const {\n    isFullWidth,\n    isDisabled,\n    isReadOnly,\n    ariaLabel,\n    accessibilityLabel,\n    placeholderTextColor,\n    selectionColor,\n    underlineColorAndroid,\n    type,\n    fontFamily,\n    fontWeight,\n    fontStyle,\n    ...resolvedProps\n  } = usePropsResolution('Input', { ...inputThemeProps,\n    ...props\n  }, {\n    isDisabled: inputThemeProps.isDisabled,\n    isHovered,\n    isFocused,\n    isInvalid: inputThemeProps.isInvalid,\n    isReadOnly: inputThemeProps.isReadOnly\n  });\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight: fontWeight !== null && fontWeight !== void 0 ? fontWeight : 400,\n    fontStyle: fontStyle !== null && fontStyle !== void 0 ? fontStyle : 'normal'\n  });\n  const resolvedPlaceholderTextColor = useToken('colors', placeholderTextColor);\n  const resolvedSelectionColor = useToken('colors', selectionColor);\n  const resolvedUnderlineColorAndroid = useToken('colors', underlineColorAndroid); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps({ ...props,\n    onKeyPress,\n    onFocus,\n    onBlur,\n    disableFocusHandling,\n    inputProps\n  })) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(StyledInput, _extends({}, inputProps, resolvedFontFamily, {\n    secureTextEntry: type === 'password',\n    accessible: true,\n    accessibilityLabel: ariaLabel || accessibilityLabel,\n    editable: isDisabled || isReadOnly ? false : true,\n    w: isFullWidth ? '100%' : undefined\n  }, resolvedProps, {\n    placeholderTextColor: resolvedPlaceholderTextColor,\n    selectionColor: resolvedSelectionColor,\n    underlineColorAndroid: resolvedUnderlineColorAndroid,\n    onKeyPress: e => {\n      e.persist();\n      onKeyPress && onKeyPress(e);\n    },\n    onFocus: e => {\n      handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n    },\n    onBlur: e => {\n      handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n    } // TODO: this can be moved to baseStyle using _web\n\n  }, Platform.OS === 'web' ? {\n    disabled: isDisabled,\n    cursor: isDisabled ? 'not-allowed' : 'auto'\n  } : {}, {\n    ref: mergeRefs([ref, _ref, wrapperRef]),\n    style: Platform.OS === 'web' ? {\n      outline: 'none'\n    } : {}\n  }));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(InputBase));\n//# sourceMappingURL=InputBase.js.map"]},"metadata":{},"sourceType":"module"}