{"ast":null,"code":"import _objectWithoutProperties from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\"];\nimport React from 'react';\n\nfunction createContext(rootComponentName) {\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  var Context = React.createContext(null);\n\n  function Provider(props) {\n    _s();\n\n    var children = props.children,\n        providerProps = _objectWithoutProperties(props, _excluded);\n\n    var value = React.useMemo(function () {\n      return providerProps;\n    }, Object.values(providerProps));\n    return React.createElement(Context.Provider, {\n      value: value\n    }, children);\n  }\n\n  _s(Provider, \"tPauEVZ6EeuERV9ttvKTwQ7++Gw=\");\n\n  function useContext(consumerName) {\n    _s2();\n\n    var context = React.useContext(Context);\n\n    if (context === null) {\n      throw new Error(\"`\".concat(consumerName, \"` must be used within `\").concat(rootComponentName, \"`\"));\n    }\n\n    return context;\n  }\n\n  _s2(useContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext];\n}\n\nexport { createContext };\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/utils/createContext.js"],"names":["Context","React","children","providerProps","props","value","Object","context","Provider","rootComponentName"],"mappings":";;AAAA,OAAA,KAAA,MAAA,OAAA;;AAEA,SAAA,aAAA,CAAA,iBAAA,EAA0C;AAAA,MAAA,EAAA,GAAA,YAAA,EAAA;AAAA,MAAA,GAAA,GAAA,YAAA,EAAA;;AACxC,MAAMA,OAAO,GAAgBC,KAAK,CAALA,aAAAA,CAA7B,IAA6BA,CAA7B;;AAEA,WAAA,QAAA,CAAA,KAAA,EAAyB;AAAA,IAAA,EAAA;;AACvB,QACEC,QADF,GAGIE,KAHJ,CAAA,QAAA;AAAA,QAEKD,aAFL,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;AAKA,QAAME,KAAK,GAAGJ,KAAK,CAALA,OAAAA,CAAc,YAAA;AAAA,aAAA,aAAA;AAAdA,KAAAA,EACdK,MAAM,CAANA,MAAAA,CADA,aACAA,CADcL,CAAd;AAEA,WAAoBA,KAAK,CAALA,aAAAA,CAAoBD,OAAO,CAA3BC,QAAAA,EAAsC;AACxDI,MAAAA,KAAK,EADaJ;AAAsC,KAAtCA,EAApB,QAAoBA,CAApB;AAXsC;;AAAA,EAAA,EAAA,CAAA,QAAA,EAAA,8BAAA,CAAA;;AAgBxC,WAAA,UAAA,CAAA,YAAA,EAAkC;AAAA,IAAA,GAAA;;AAChC,QAAMM,OAAO,GAAGN,KAAK,CAALA,UAAAA,CAAhB,OAAgBA,CAAhB;;AAEA,QAAIM,OAAO,KAAX,IAAA,EAAsB;AACpB,YAAM,IAAA,KAAA,CAAU,IAAA,MAAA,CAAA,YAAA,EAAA,yBAAA,EAAA,MAAA,CAAA,iBAAA,EAAhB,GAAgB,CAAV,CAAN;AAGF;;AAAA,WAAA,OAAA;AAvBsC;;AAAA,EAAA,GAAA,CAAA,UAAA,EAAA,8BAAA,CAAA;;AA0BxCC,EAAAA,QAAQ,CAARA,WAAAA,GAAuBC,iBAAiB,GAAxCD,UAAAA;AACA,SAAO,CAAA,QAAA,EAAP,UAAO,CAAP;AAGF;;AAAA,SAAA,aAAA","sourcesContent":["import React from 'react';\n\nfunction createContext(rootComponentName) {\n  const Context = /*#__PURE__*/React.createContext(null);\n\n  function Provider(props) {\n    const {\n      children,\n      ...providerProps\n    } = props; // Only re-memoize when prop values change\n\n    const value = React.useMemo(() => providerProps, // eslint-disable-next-line react-hooks/exhaustive-deps\n    Object.values(providerProps));\n    return /*#__PURE__*/React.createElement(Context.Provider, {\n      value: value\n    }, children);\n  }\n\n  function useContext(consumerName) {\n    const context = React.useContext(Context);\n\n    if (context === null) {\n      throw new Error(\"`\".concat(consumerName, \"` must be used within `\").concat(rootComponentName, \"`\"));\n    }\n\n    return context;\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext];\n}\n\nexport { createContext };\n//# sourceMappingURL=createContext.js.map"]},"metadata":{},"sourceType":"module"}