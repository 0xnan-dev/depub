{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _objectDestructuringEmpty = require(\"@babel/runtime/helpers/objectDestructuringEmpty\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extractProps = extractProps;\nexports.mergeUnderscoreProps = mergeUnderscoreProps;\nexports.calculateProps = calculateProps;\nexports.resolveValueWithBreakpoint = exports.extractPropertyFromFunction = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nvar _lodash2 = _interopRequireDefault(require(\"lodash.isnil\"));\n\nvar _lodash3 = _interopRequireDefault(require(\"lodash.mergewith\"));\n\nvar _lodash4 = _interopRequireDefault(require(\"lodash.clonedeep\"));\n\nvar _base = require(\"./../../theme/base\");\n\nvar _tools = require(\"./../../theme/tools\");\n\nvar _useContrastText = require(\"../useContrastText\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction extractProps(props, theme, _ref, componentTheme, currentBreakpoint) {\n  _objectDestructuringEmpty(_ref);\n\n  var newProps = {};\n\n  for (var property in props) {\n    if (_base.themePropertyMap[property]) {\n      var propValues = extractPropertyFromFunction(property, props, theme, componentTheme);\n\n      if (typeof propValues === 'string' || typeof propValues === 'number') {\n        newProps[property] = propValues;\n      } else if (!(0, _lodash2[\"default\"])(propValues)) {\n        for (var nestedProp in propValues) {\n          newProps[nestedProp] = (0, _lodash[\"default\"])(theme, \"\".concat(_base.themePropertyMap[nestedProp], \".\").concat(propValues[nestedProp]), propValues[nestedProp]);\n        }\n      } else if (property === 'shadow') {\n        var shadowProps = theme[_base.themePropertyMap[property]][props[property]];\n\n        if (!(0, _lodash2[\"default\"])(shadowProps)) {\n          newProps = _objectSpread(_objectSpread({}, newProps), shadowProps);\n        }\n      } else {\n        newProps[property] = resolveValueWithBreakpoint(props[property], theme.breakpoints, currentBreakpoint, property);\n      }\n    } else {\n      newProps[property] = resolveValueWithBreakpoint(props[property], theme.breakpoints, currentBreakpoint, property);\n    }\n  }\n\n  return (0, _lodash4[\"default\"])(newProps);\n}\n\nfunction filterDefaultProps(props, defaultProps) {\n  var _ref2 = (0, _tools.extractInObject)(defaultProps, Object.keys(props)),\n      _ref3 = _slicedToArray(_ref2, 2),\n      resultProps = _ref3[1];\n\n  return resultProps;\n}\n\nvar extractPropertyFromFunction = function extractPropertyFromFunction(property, props, theme, componentTheme) {\n  var propValues;\n\n  if (componentTheme && typeof componentTheme[_base.themePropertyMap[property]] === 'function') {\n    var funcProps = componentTheme[_base.themePropertyMap[property]](_objectSpread({\n      theme: theme\n    }, props));\n\n    var isNested = Object.keys(funcProps).some(function (key) {\n      return funcProps[key] && typeof funcProps[key] === 'object';\n    });\n    propValues = isNested ? _objectSpread({}, (0, _lodash[\"default\"])(funcProps, \"\".concat(props[property]))) : _objectSpread({}, funcProps);\n  } else {\n    propValues = (0, _lodash[\"default\"])(componentTheme, \"\".concat(_base.themePropertyMap[property], \".\").concat(props[property]));\n  }\n\n  return propValues;\n};\n\nexports.extractPropertyFromFunction = extractPropertyFromFunction;\n\nfunction mergeUnderscoreProps(newProps, props) {\n  var _props = Object.keys(newProps).filter(function (propName) {\n    return propName.startsWith('_');\n  });\n\n  _props.forEach(function (propName) {\n    var _newProps$bg, _newProps$propName$co, _newProps$propName, _props$propName;\n\n    var bg = (_newProps$bg = newProps.bg) !== null && _newProps$bg !== void 0 ? _newProps$bg : newProps.backgroundColor;\n    var textColor = bg ? {\n      color: (0, _useContrastText.useContrastText)(bg, (_newProps$propName$co = (_newProps$propName = newProps[propName]) === null || _newProps$propName === void 0 ? void 0 : _newProps$propName.color) !== null && _newProps$propName$co !== void 0 ? _newProps$propName$co : (_props$propName = props[propName]) === null || _props$propName === void 0 ? void 0 : _props$propName.color)\n    } : {};\n    newProps[propName] = _objectSpread(_objectSpread(_objectSpread({}, textColor), newProps[propName]), props[propName]);\n  });\n\n  return newProps;\n}\n\nvar resolveValueWithBreakpoint = function resolveValueWithBreakpoint(values, breakpointTheme, currentBreakpoint, property) {\n  if ((0, _tools.hasValidBreakpointFormat)(values, breakpointTheme, property)) {\n    return (0, _tools.findLastValidBreakpoint)(values, breakpointTheme, currentBreakpoint);\n  } else {\n    return values;\n  }\n};\n\nexports.resolveValueWithBreakpoint = resolveValueWithBreakpoint;\n\nfunction calculateProps(theme, colorModeProps, componentTheme, props, windowWidth) {\n  var currentBreakpoint = (0, _tools.getClosestBreakpoint)(theme.breakpoints, windowWidth);\n\n  if (!props) {\n    props = {};\n  }\n\n  var newProps;\n\n  if (componentTheme) {\n    newProps = extractProps(filterDefaultProps(props, componentTheme.defaultProps), theme, colorModeProps, componentTheme, currentBreakpoint);\n    var componentBaseStyle = typeof componentTheme.baseStyle !== 'function' ? componentTheme.baseStyle : componentTheme.baseStyle(_objectSpread(_objectSpread(_objectSpread({\n      theme: theme\n    }, newProps), props), colorModeProps));\n    newProps = (0, _lodash3[\"default\"])(newProps, componentBaseStyle, function (objValue, srcValue, key) {\n      if (!(0, _lodash2[\"default\"])(objValue)) {\n        delete newProps[key];\n      }\n    });\n    var variant = props.variant || (0, _lodash[\"default\"])(componentTheme, 'defaultProps.variant');\n\n    if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n      var colorScheme = props.colorScheme || (0, _lodash[\"default\"])(componentTheme, 'defaultProps.colorScheme');\n      var variantProps = componentTheme.variants[variant](_objectSpread(_objectSpread(_objectSpread({}, props), newProps), {}, {\n        colorScheme: colorScheme,\n        theme: theme\n      }, colorModeProps));\n      variantProps = extractProps(variantProps, theme, colorModeProps, componentTheme, currentBreakpoint);\n      newProps = (0, _lodash3[\"default\"])(newProps, variantProps, function (objValue, srcValue, key) {\n        if (!(0, _lodash2[\"default\"])(objValue)) {\n          delete newProps[key];\n        }\n      });\n      delete newProps.variant;\n      delete newProps.colorScheme;\n    }\n  }\n\n  var extractedProps = extractProps(props, theme, colorModeProps, componentTheme, currentBreakpoint);\n  newProps = (0, _lodash3[\"default\"])(newProps, extractedProps, function (objValue, srcValue, key) {\n    if (!(0, _lodash2[\"default\"])(objValue)) {\n      delete newProps[key];\n    }\n  });\n  newProps = mergeUnderscoreProps(newProps, props);\n  return newProps;\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/commonjs/hooks/useThemeProps/utils.js"],"names":["Object","value","exports","_lodash","_interopRequireDefault","require","_lodash2","_lodash3","_lodash4","_base","_tools","_useContrastText","obj","default","newProps","propValues","extractPropertyFromFunction","property","shadowProps","theme","props","resolveValueWithBreakpoint","resultProps","componentTheme","funcProps","isNested","_props","propName","bg","_newProps$bg","textColor","color","_newProps$propName$co","_newProps$propName","_props$propName","currentBreakpoint","extractProps","filterDefaultProps","componentBaseStyle","variant","colorScheme","variantProps","extractedProps","mergeUnderscoreProps"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extractProps = extractProps;\nexports.mergeUnderscoreProps = mergeUnderscoreProps;\nexports.calculateProps = calculateProps;\nexports.resolveValueWithBreakpoint = exports.extractPropertyFromFunction = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nvar _lodash2 = _interopRequireDefault(require(\"lodash.isnil\"));\n\nvar _lodash3 = _interopRequireDefault(require(\"lodash.mergewith\"));\n\nvar _lodash4 = _interopRequireDefault(require(\"lodash.clonedeep\"));\n\nvar _base = require(\"./../../theme/base\");\n\nvar _tools = require(\"./../../theme/tools\");\n\nvar _useContrastText = require(\"../useContrastText\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n Extract props from theme props and omit those from props\n*/\n\n/**\n *\n * @param props Props passed by the user\n * @param theme Theme object\n * @param colorModeProps `colorMode` object\n * @param componentTheme Theme for specific components\n * @param currentBreakpoint Current breakpoint values\n * @returns Extracting props from defaultProps while overriding the props that are already present\n */\nfunction extractProps(props, theme, {}, componentTheme, currentBreakpoint) {\n  let newProps = {};\n\n  for (let property in props) {\n    // If the property exists in themePropertyMap then get its value\n    if (_base.themePropertyMap[property]) {\n      let propValues = extractPropertyFromFunction(property, props, theme, componentTheme);\n\n      if (typeof propValues === 'string' || typeof propValues === 'number') {\n        newProps[property] = propValues;\n      } else if (!(0, _lodash2.default)(propValues)) {\n        for (let nestedProp in propValues) {\n          newProps[nestedProp] = (0, _lodash.default)(theme, \"\".concat(_base.themePropertyMap[nestedProp], \".\").concat(propValues[nestedProp]), propValues[nestedProp]);\n        }\n      } else if (property === 'shadow') {\n        let shadowProps = theme[_base.themePropertyMap[property]][props[property]];\n\n        if (!(0, _lodash2.default)(shadowProps)) {\n          newProps = { ...newProps,\n            ...shadowProps\n          };\n        }\n      } else {\n        newProps[property] = resolveValueWithBreakpoint(props[property], theme.breakpoints, currentBreakpoint, property);\n      }\n    } else {\n      newProps[property] = resolveValueWithBreakpoint(props[property], theme.breakpoints, currentBreakpoint, property);\n    }\n  }\n\n  return (0, _lodash4.default)(newProps);\n}\n/*\nRemove props from defaultProps that are already present in props\n*/\n\n\nfunction filterDefaultProps(props, defaultProps) {\n  let [, resultProps] = (0, _tools.extractInObject)(defaultProps, Object.keys(props));\n  return resultProps;\n}\n/**\n * If property is functional in componentTheme, get its returned object\n *\n * @param property : name of the prop\n * @param props : all props\n * @param theme : provided theme without components\n * @param componentTheme : component specific theme\n * @returns\n */\n\n\nconst extractPropertyFromFunction = (property, props, theme, componentTheme) => {\n  let propValues; // Check if the entry in the theme is a function then calling it with all theme and props as params\n\n  if (componentTheme && typeof componentTheme[_base.themePropertyMap[property]] === 'function') {\n    let funcProps = componentTheme[_base.themePropertyMap[property]]({\n      theme,\n      ...props\n    }); // Check if returned object from componentTheme is a nested object\n\n\n    let isNested = Object.keys(funcProps).some(function (key) {\n      return funcProps[key] && typeof funcProps[key] === 'object';\n    }); // If the returned value is nested object then find the property value in it, otherwise return the whole object\n\n    propValues = isNested ? { ...(0, _lodash.default)(funcProps, \"\".concat(props[property]))\n    } : { ...funcProps\n    };\n  } else {\n    // If the entry is any value other than function then return the whole object or value\n    propValues = (0, _lodash.default)(componentTheme, \"\".concat(_base.themePropertyMap[property], \".\").concat(props[property]));\n  }\n\n  return propValues;\n};\n/*\nMerge _props and apply contrastText color if not passed by theme or user\n*/\n\n\nexports.extractPropertyFromFunction = extractPropertyFromFunction;\n\nfunction mergeUnderscoreProps(newProps, props) {\n  const _props = Object.keys(newProps).filter(propName => propName.startsWith('_'));\n\n  _props.forEach(propName => {\n    var _newProps$bg, _newProps$propName$co, _newProps$propName, _props$propName;\n\n    // Adding color based on bg contrast if no color is given\n    const bg = (_newProps$bg = newProps.bg) !== null && _newProps$bg !== void 0 ? _newProps$bg : newProps.backgroundColor;\n    const textColor = bg ? {\n      color: (0, _useContrastText.useContrastText)(bg, (_newProps$propName$co = (_newProps$propName = newProps[propName]) === null || _newProps$propName === void 0 ? void 0 : _newProps$propName.color) !== null && _newProps$propName$co !== void 0 ? _newProps$propName$co : (_props$propName = props[propName]) === null || _props$propName === void 0 ? void 0 : _props$propName.color)\n    } : {}; // Overriding calculated props with user added props\n\n    newProps[propName] = { ...textColor,\n      ...newProps[propName],\n      ...props[propName]\n    };\n  });\n\n  return newProps;\n}\n/**\n *\n * Checks the property and resolves it if it has breakpoints\n * @param values : value from props\n * @param currentBreakpoint : current value for which breakpoint will be calculated\n * @param property : property name\n * @returns\n */\n\n\nconst resolveValueWithBreakpoint = (values, breakpointTheme, currentBreakpoint, property) => {\n  if ((0, _tools.hasValidBreakpointFormat)(values, breakpointTheme, property)) {\n    // Check the last valid breakpoint value from all values\n    // If current breakpoint is `md` and we have `base` then `lg`, then last value will be taken(`base` in this case)\n    return (0, _tools.findLastValidBreakpoint)(values, breakpointTheme, currentBreakpoint);\n  } else {\n    return values;\n  }\n};\n/**\n * Takes all prop related data and returns the props that needs to be applied to the component\n *\n * @param theme Theme object\n * @param colorModeProps Color mode information\n * @param componentTheme Theme object for the specific component\n * @param props Props passed by the user\n * @param windowWidth Width of the current window\n * @returns props to be applied\n */\n\n\nexports.resolveValueWithBreakpoint = resolveValueWithBreakpoint;\n\nfunction calculateProps(theme, colorModeProps, componentTheme, props, windowWidth) {\n  let currentBreakpoint = (0, _tools.getClosestBreakpoint)(theme.breakpoints, windowWidth);\n\n  if (!props) {\n    props = {};\n  }\n\n  let newProps;\n\n  if (componentTheme) {\n    // Extracting props from defaultProps\n    newProps = extractProps(filterDefaultProps(props, componentTheme.defaultProps), theme, colorModeProps, componentTheme, currentBreakpoint); // Extracting props from base style\n\n    let componentBaseStyle = typeof componentTheme.baseStyle !== 'function' ? componentTheme.baseStyle : componentTheme.baseStyle({\n      theme,\n      ...newProps,\n      ...props,\n      ...colorModeProps\n    });\n    newProps = (0, _lodash3.default)(newProps, componentBaseStyle, // @ts-ignore\n    (objValue, srcValue, key) => {\n      if (!(0, _lodash2.default)(objValue)) {\n        delete newProps[key];\n      }\n    });\n    const variant = props.variant || (0, _lodash.default)(componentTheme, 'defaultProps.variant'); // Extracting props from variant\n\n    if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n      const colorScheme = props.colorScheme || (0, _lodash.default)(componentTheme, 'defaultProps.colorScheme');\n      let variantProps = componentTheme.variants[variant]({ ...props,\n        ...newProps,\n        colorScheme,\n        theme,\n        ...colorModeProps\n      });\n      variantProps = extractProps(variantProps, theme, colorModeProps, componentTheme, currentBreakpoint); // added this to handle order of props\n\n      newProps = (0, _lodash3.default)(newProps, variantProps, // @ts-ignore\n      (objValue, srcValue, key) => {\n        if (!(0, _lodash2.default)(objValue)) {\n          delete newProps[key];\n        }\n      });\n      delete newProps.variant;\n      delete newProps.colorScheme;\n    }\n  } // Extracting props from normal props\n\n\n  let extractedProps = extractProps(props, theme, colorModeProps, componentTheme, currentBreakpoint); // added this to handle order of props\n  // @ts-ignore\n\n  newProps = (0, _lodash3.default)(newProps, extractedProps, (objValue, srcValue, key) => {\n    if (!(0, _lodash2.default)(objValue)) {\n      delete newProps[key];\n    }\n  });\n  newProps = mergeUnderscoreProps(newProps, props);\n  return newProps;\n}\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"script"}