{"ast":null,"code":"import _slicedToArray from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport var useKeyboardBottomInset = function useKeyboardBottomInset() {\n  _s();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      bottom = _React$useState2[0],\n      setBottom = _React$useState2[1];\n\n  var subscriptions = React.useRef([]);\n  React.useEffect(function () {\n    function onKeyboardChange(e) {\n      if (e.startCoordinates && e.endCoordinates.screenY < e.startCoordinates.screenY) setBottom(e.endCoordinates.height / 2);else setBottom(0);\n    }\n\n    if (Platform.OS === 'ios') {\n      subscriptions.current = [Keyboard.addListener('keyboardWillChangeFrame', onKeyboardChange)];\n    } else {\n      subscriptions.current = [Keyboard.addListener('keyboardDidHide', onKeyboardChange), Keyboard.addListener('keyboardDidShow', onKeyboardChange)];\n    }\n\n    return function () {\n      subscriptions.current.forEach(function (subscription) {\n        subscription.remove();\n      });\n    };\n  }, [setBottom, subscriptions]);\n  return bottom;\n};\n\n_s(useKeyboardBottomInset, \"s9B7TcVJeBf+EetQ4OpQAEGca5s=\");\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/utils/useKeyboardBottomInset.js"],"names":["useKeyboardBottomInset","bottom","setBottom","React","subscriptions","e","Platform","Keyboard","subscription"],"mappings":";;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;AAEA,OAAO,IAAMA,sBAAsB,GAAtBA,SAAAA,sBAAAA,GAA+B;AAAA,EAAA,EAAA;;AAC1C,MAAA,eAAA,GAA4BG,KAAK,CAALA,QAAAA,CAA5B,CAA4BA,CAA5B;AAAA,MAAA,gBAAA,GAAA,cAAA,CAAA,eAAA,EAAA,CAAA,CAAA;AAAA,MAAOF,MAAP,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,MAAeC,SAAf,GAAA,gBAAA,CAAA,CAAA,CAAA;;AACA,MAAME,aAAa,GAAGD,KAAK,CAALA,MAAAA,CAAtB,EAAsBA,CAAtB;AACAA,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpB,aAAA,gBAAA,CAAA,CAAA,EAA6B;AAC3B,UAAIE,CAAC,CAADA,gBAAAA,IAAsBA,CAAC,CAADA,cAAAA,CAAAA,OAAAA,GAA2BA,CAAC,CAADA,gBAAAA,CAArD,OAAA,EAAiFH,SAAS,CAACG,CAAC,CAADA,cAAAA,CAAAA,MAAAA,GAA3F,CAA0F,CAATH,CAAjF,KAA6HA,SAAS,CAATA,CAAS,CAATA;AAG/H;;AAAA,QAAII,QAAQ,CAARA,EAAAA,KAAJ,KAAA,EAA2B;AACzBF,MAAAA,aAAa,CAAbA,OAAAA,GAAwB,CAACG,QAAQ,CAARA,WAAAA,CAAAA,yBAAAA,EAAzBH,gBAAyBG,CAAD,CAAxBH;AADF,KAAA,MAEO;AACLA,MAAAA,aAAa,CAAbA,OAAAA,GAAwB,CAACG,QAAQ,CAARA,WAAAA,CAAAA,iBAAAA,EAAD,gBAACA,CAAD,EAA4DA,QAAQ,CAARA,WAAAA,CAAAA,iBAAAA,EAApFH,gBAAoFG,CAA5D,CAAxBH;AAGF;;AAAA,WAAO,YAAM;AACXA,MAAAA,aAAa,CAAbA,OAAAA,CAAAA,OAAAA,CAA8B,UAAA,YAAA,EAAgB;AAC5CI,QAAAA,YAAY,CAAZA,MAAAA;AADFJ,OAAAA;AADF,KAAA;AAXFD,GAAAA,EAgBG,CAAA,SAAA,EAhBHA,aAgBG,CAhBHA;AAiBA,SAAA,MAAA;AApBK,CAAA;;GAAMH,sB","sourcesContent":["import * as React from 'react';\nimport { Keyboard, Platform } from 'react-native';\nexport const useKeyboardBottomInset = () => {\n  const [bottom, setBottom] = React.useState(0);\n  const subscriptions = React.useRef([]);\n  React.useEffect(() => {\n    function onKeyboardChange(e) {\n      if (e.startCoordinates && e.endCoordinates.screenY < e.startCoordinates.screenY) setBottom(e.endCoordinates.height / 2);else setBottom(0);\n    }\n\n    if (Platform.OS === 'ios') {\n      subscriptions.current = [Keyboard.addListener('keyboardWillChangeFrame', onKeyboardChange)];\n    } else {\n      subscriptions.current = [Keyboard.addListener('keyboardDidHide', onKeyboardChange), Keyboard.addListener('keyboardDidShow', onKeyboardChange)];\n    }\n\n    return () => {\n      subscriptions.current.forEach(subscription => {\n        subscription.remove();\n      });\n    };\n  }, [setBottom, subscriptions]);\n  return bottom;\n};\n//# sourceMappingURL=useKeyboardBottomInset.js.map"]},"metadata":{},"sourceType":"module"}