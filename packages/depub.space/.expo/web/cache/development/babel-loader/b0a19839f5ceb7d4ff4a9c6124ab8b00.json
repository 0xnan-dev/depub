{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PopoverContent = void 0;\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Popper = require(\"../Popper\");\n\nvar _PopoverContext = require(\"./PopoverContext\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar PopoverContent = _react[\"default\"].forwardRef(function (props, ref) {\n  var _ref, _ref2, _props$bgColor;\n\n  var _react$default$useCon = _react[\"default\"].useContext(_PopoverContext.PopoverContext),\n      onClose = _react$default$useCon.onClose,\n      initialFocusRef = _react$default$useCon.initialFocusRef,\n      finalFocusRef = _react$default$useCon.finalFocusRef,\n      popoverContentId = _react$default$useCon.popoverContentId,\n      headerMounted = _react$default$useCon.headerMounted,\n      bodyMounted = _react$default$useCon.bodyMounted,\n      bodyId = _react$default$useCon.bodyId,\n      headerId = _react$default$useCon.headerId;\n\n  var resolvedProps = (0, _hooks.usePropsResolution)('PopoverContent', props);\n  var arrowDefaultColor = (_ref = (_ref2 = (_props$bgColor = props.bgColor) !== null && _props$bgColor !== void 0 ? _props$bgColor : props.bg) !== null && _ref2 !== void 0 ? _ref2 : props.backgroundColor) !== null && _ref !== void 0 ? _ref : resolvedProps.backgroundColor;\n  var color = (0, _hooks.useToken)('colors', arrowDefaultColor);\n\n  _react[\"default\"].useEffect(function () {\n    var finalFocusRefCurrentVal = finalFocusRef === null || finalFocusRef === void 0 ? void 0 : finalFocusRef.current;\n\n    if (initialFocusRef && initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    }\n\n    return function () {\n      if (finalFocusRefCurrentVal) {\n        finalFocusRefCurrentVal.focus();\n      }\n    };\n  }, [finalFocusRef, initialFocusRef]);\n\n  (0, _hooks.useKeyboardDismissable)({\n    enabled: true,\n    callback: onClose\n  });\n  var arrowElement = null;\n  var restChildren = [];\n\n  _react[\"default\"].Children.forEach(props.children, function (child) {\n    if (child.type.displayName === 'PopperArrow') {\n      var _child$props$color;\n\n      arrowElement = _react[\"default\"].cloneElement(child, {\n        backgroundColor: (_child$props$color = child.props.color) !== null && _child$props$color !== void 0 ? _child$props$color : color\n      });\n    } else {\n      restChildren.push(child);\n    }\n  });\n\n  var accessibilityProps = _reactNative.Platform.OS === 'web' ? {\n    'accessibilityRole': 'dialog',\n    'aria-labelledby': headerMounted ? headerId : undefined,\n    'aria-describedby': bodyMounted ? bodyId : undefined\n  } : {};\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return null;\n  }\n\n  return _react[\"default\"].createElement(_Popper.Popper.Content, _extends({\n    nativeID: popoverContentId\n  }, accessibilityProps, resolvedProps, props, {\n    ref: ref\n  }), arrowElement, restChildren);\n});\n\nexports.PopoverContent = PopoverContent;\nPopoverContent.displayName = 'PopoverContent';","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/commonjs/components/composites/Popover/PopoverContent.js"],"names":["Object","value","exports","_hooks","require","_react","_interopRequireDefault","_Popper","_PopoverContext","_useHasResponsiveProps","obj","default","_extends","i","arguments","source","target","PopoverContent","onClose","initialFocusRef","finalFocusRef","popoverContentId","headerMounted","bodyMounted","bodyId","headerId","resolvedProps","arrowDefaultColor","_ref","_ref2","_props$bgColor","props","color","finalFocusRefCurrentVal","enabled","callback","arrowElement","restChildren","child","backgroundColor","_child$props$color","accessibilityProps","_reactNative","nativeID","ref"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PopoverContent = void 0;\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Popper = require(\"../Popper\");\n\nvar _PopoverContext = require(\"./PopoverContext\");\n\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nconst PopoverContent = /*#__PURE__*/_react.default.forwardRef((props, ref) => {\n  var _ref, _ref2, _props$bgColor;\n\n  const {\n    onClose,\n    initialFocusRef,\n    finalFocusRef,\n    popoverContentId,\n    headerMounted,\n    bodyMounted,\n    bodyId,\n    headerId\n  } = _react.default.useContext(_PopoverContext.PopoverContext);\n\n  const resolvedProps = (0, _hooks.usePropsResolution)('PopoverContent', props);\n  const arrowDefaultColor = (_ref = (_ref2 = (_props$bgColor = props.bgColor) !== null && _props$bgColor !== void 0 ? _props$bgColor : props.bg) !== null && _ref2 !== void 0 ? _ref2 : props.backgroundColor) !== null && _ref !== void 0 ? _ref : resolvedProps.backgroundColor;\n  const color = (0, _hooks.useToken)('colors', arrowDefaultColor);\n\n  _react.default.useEffect(() => {\n    const finalFocusRefCurrentVal = finalFocusRef === null || finalFocusRef === void 0 ? void 0 : finalFocusRef.current;\n\n    if (initialFocusRef && initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    }\n\n    return () => {\n      if (finalFocusRefCurrentVal) {\n        finalFocusRefCurrentVal.focus();\n      }\n    };\n  }, [finalFocusRef, initialFocusRef]);\n\n  (0, _hooks.useKeyboardDismissable)({\n    enabled: true,\n    callback: onClose\n  });\n  let arrowElement = null;\n  const restChildren = [];\n\n  _react.default.Children.forEach(props.children, child => {\n    if (child.type.displayName === 'PopperArrow') {\n      var _child$props$color;\n\n      arrowElement = /*#__PURE__*/_react.default.cloneElement(child, {\n        backgroundColor: (_child$props$color = child.props.color) !== null && _child$props$color !== void 0 ? _child$props$color : color\n      });\n    } else {\n      restChildren.push(child);\n    }\n  });\n\n  const accessibilityProps = _reactNative.Platform.OS === 'web' ? {\n    'accessibilityRole': 'dialog',\n    'aria-labelledby': headerMounted ? headerId : undefined,\n    'aria-describedby': bodyMounted ? bodyId : undefined\n  } : {}; //TODO: refactor for responsive prop\n\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_react.default.createElement(_Popper.Popper.Content, _extends({\n    nativeID: popoverContentId\n  }, accessibilityProps, resolvedProps, props, {\n    ref: ref\n  }), arrowElement, restChildren);\n});\n\nexports.PopoverContent = PopoverContent;\nPopoverContent.displayName = 'PopoverContent';\n//# sourceMappingURL=PopoverContent.js.map"]},"metadata":{},"sourceType":"script"}