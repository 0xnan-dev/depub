{"ast":null,"code":"import _defineProperty from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"disabled\", \"isDisabled\", \"isInvalid\", \"isChecked\", \"defaultIsChecked\", \"accessibilityLabel\", \"accessibilityHint\", \"onToggle\", \"value\", \"onValueChange\"],\n    _excluded2 = [\"onTrackColor\", \"offTrackColor\", \"onThumbColor\", \"offThumbColor\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { useToggleState } from '@react-stately/toggle';\nimport RNSwitch from \"react-native-web/dist/exports/Switch\";\nimport isNil from 'lodash.isnil';\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useToken } from \"../../../hooks\";\nimport { makeStyledComponent } from \"../../../utils/styled\";\nimport { mergeRefs } from \"../../../utils\";\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { useFormControlContext } from \"../../composites/FormControl\";\nimport { combineContextAndProps } from \"../../../utils\";\nvar StyledNBSwitch = makeStyledComponent(RNSwitch);\n_c = StyledNBSwitch;\n\nvar Switch = function Switch(_ref2, ref) {\n  _s();\n\n  var disabled = _ref2.disabled,\n      isDisabled = _ref2.isDisabled,\n      isInvalid = _ref2.isInvalid,\n      isChecked = _ref2.isChecked,\n      defaultIsChecked = _ref2.defaultIsChecked,\n      accessibilityLabel = _ref2.accessibilityLabel,\n      accessibilityHint = _ref2.accessibilityHint,\n      onToggle = _ref2.onToggle,\n      value = _ref2.value,\n      _onValueChange = _ref2.onValueChange,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  var formControlContext = useFormControlContext();\n  var combinedProps = combineContextAndProps(formControlContext, props);\n  var state = useToggleState({\n    defaultSelected: !isNil(defaultIsChecked) ? defaultIsChecked : false\n  });\n  var checked = !isNil(isChecked) ? isChecked : state.isSelected;\n\n  var _ref = React.useRef(null);\n\n  var _useHover = useHover({}, _ref),\n      isHovered = _useHover.isHovered;\n\n  var _usePropsResolution = usePropsResolution('Switch', props, {\n    isHovered: isHovered,\n    isDisabled: disabled || isDisabled || combinedProps.isDisabled,\n    isInvalid: isInvalid || combinedProps.isInvalid,\n    isChecked: checked\n  }),\n      _onTrackColor = _usePropsResolution.onTrackColor,\n      _offTrackColor = _usePropsResolution.offTrackColor,\n      _onThumbColor = _usePropsResolution.onThumbColor,\n      _offThumbColor = _usePropsResolution.offThumbColor,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  var onTrackColor = useToken('colors', _onTrackColor);\n  var offTrackColor = useToken('colors', _offTrackColor);\n  var onThumbColor = useToken('colors', _onThumbColor);\n  var offThumbColor = useToken('colors', _offThumbColor);\n\n  if (useHasResponsiveProps(_objectSpread(_objectSpread({}, props), {}, {\n    isDisabled: isDisabled,\n    isInvalid: isInvalid,\n    isChecked: isChecked,\n    defaultIsChecked: defaultIsChecked,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityHint: accessibilityHint\n  }))) {\n    return null;\n  }\n\n  return React.createElement(StyledNBSwitch, _extends({\n    accessibilityLabel: accessibilityLabel,\n    accessibilityHint: accessibilityHint,\n    trackColor: {\n      \"false\": offTrackColor,\n      \"true\": onTrackColor\n    },\n    thumbColor: checked ? onThumbColor : offThumbColor,\n    activeThumbColor: onThumbColor,\n    ios_backgroundColor: offTrackColor\n  }, resolvedProps, {\n    disabled: disabled || isDisabled || combinedProps.isDisabled,\n    onValueChange: function onValueChange(val) {\n      _onValueChange && _onValueChange(val);\n      onToggle ? onToggle() : state.toggle();\n    },\n    value: value || checked,\n    ref: mergeRefs([ref, _ref])\n  }));\n};\n\n_s(Switch, \"KpJNf/iQpjXpiAzyviXcVGDLxJg=\", false, function () {\n  return [useFormControlContext, useToggleState, useHover, usePropsResolution, useToken, useToken, useToken, useToken, useHasResponsiveProps];\n});\n\n_c2 = Switch;\nexport default _c4 = memo(_c3 = forwardRef(Switch));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledNBSwitch\");\n$RefreshReg$(_c2, \"Switch\");\n$RefreshReg$(_c3, \"%default%$memo\");\n$RefreshReg$(_c4, \"%default%\");\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/components/primitives/Switch/index.js"],"names":["_extends","Object","i","arguments","source","target","StyledNBSwitch","makeStyledComponent","Switch","disabled","isDisabled","isInvalid","isChecked","defaultIsChecked","accessibilityLabel","accessibilityHint","onToggle","value","onValueChange","props","formControlContext","useFormControlContext","combinedProps","combineContextAndProps","state","useToggleState","defaultSelected","isNil","checked","_ref","React","isHovered","useHover","_onTrackColor","_offTrackColor","_onThumbColor","_offThumbColor","resolvedProps","usePropsResolution","onTrackColor","useToken","offTrackColor","onThumbColor","offThumbColor","useHasResponsiveProps","trackColor","thumbColor","activeThumbColor","ios_backgroundColor","ref","mergeRefs","memo","forwardRef"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, forwardRef } from 'react';\nimport { useToggleState } from '@react-stately/toggle';\nimport { Switch as RNSwitch } from 'react-native';\nimport isNil from 'lodash.isnil';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useToken } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { mergeRefs } from '../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport { combineContextAndProps } from '../../../utils';\nconst StyledNBSwitch = makeStyledComponent(RNSwitch); // TODO: Needs proper refactor\n\nconst Switch = ({\n  disabled,\n  isDisabled,\n  isInvalid,\n  isChecked,\n  defaultIsChecked,\n  accessibilityLabel,\n  accessibilityHint,\n  onToggle,\n  value,\n  onValueChange,\n  ...props\n}, ref) => {\n  const formControlContext = useFormControlContext();\n  const combinedProps = combineContextAndProps(formControlContext, props);\n  const state = useToggleState({\n    defaultSelected: !isNil(defaultIsChecked) ? defaultIsChecked : false\n  });\n  const checked = !isNil(isChecked) ? isChecked : state.isSelected;\n\n  const _ref = React.useRef(null);\n\n  const {\n    isHovered\n  } = useHover({}, _ref);\n  const {\n    onTrackColor: _onTrackColor,\n    offTrackColor: _offTrackColor,\n    onThumbColor: _onThumbColor,\n    offThumbColor: _offThumbColor,\n    ...resolvedProps\n  } = usePropsResolution('Switch', props, {\n    isHovered,\n    isDisabled: disabled || isDisabled || combinedProps.isDisabled,\n    isInvalid: isInvalid || combinedProps.isInvalid,\n    isChecked: checked\n  });\n  const onTrackColor = useToken('colors', _onTrackColor);\n  const offTrackColor = useToken('colors', _offTrackColor);\n  const onThumbColor = useToken('colors', _onThumbColor);\n  const offThumbColor = useToken('colors', _offThumbColor); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps({ ...props,\n    isDisabled,\n    isInvalid,\n    isChecked,\n    defaultIsChecked,\n    accessibilityLabel,\n    accessibilityHint\n  })) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(StyledNBSwitch, _extends({\n    accessibilityLabel: accessibilityLabel,\n    accessibilityHint: accessibilityHint,\n    trackColor: {\n      false: offTrackColor,\n      true: onTrackColor\n    },\n    thumbColor: checked ? onThumbColor : offThumbColor,\n    activeThumbColor: onThumbColor // react-native-web prop for active thumbColor\n    ,\n    ios_backgroundColor: offTrackColor\n  }, resolvedProps, {\n    disabled: disabled || isDisabled || combinedProps.isDisabled,\n    onValueChange: val => {\n      onValueChange && onValueChange(val);\n      onToggle ? onToggle() : state.toggle();\n    },\n    value: value || checked,\n    ref: mergeRefs([ref, _ref])\n  }));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Switch));\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}