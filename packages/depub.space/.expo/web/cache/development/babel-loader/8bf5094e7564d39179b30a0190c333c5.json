{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { mode } from \"../tools\";\nvar sizes = {\n  xs: {\n    contentSize: {\n      width: '60%',\n      maxWidth: '280'\n    }\n  },\n  sm: {\n    contentSize: {\n      width: '65%',\n      maxWidth: '320'\n    }\n  },\n  md: {\n    contentSize: {\n      width: '75%',\n      maxWidth: '380'\n    }\n  },\n  lg: {\n    contentSize: {\n      width: '80%',\n      maxWidth: '520'\n    }\n  },\n  xl: {\n    contentSize: {\n      width: '90%',\n      maxWidth: '580'\n    }\n  },\n  full: {\n    contentSize: {\n      width: '100%'\n    }\n  }\n};\nexport var AlertDialog = {\n  baseStyle: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  sizes: sizes,\n  defaultProps: {\n    size: 'md',\n    closeOnOverlayClick: true\n  }\n};\nexport var AlertDialogContent = {\n  baseStyle: function baseStyle(props) {\n    return {\n      bg: mode('coolGray.50', 'gray.700')(props),\n      _text: {\n        color: mode('coolGray.800', 'warmGray.50')(props)\n      },\n      shadow: 1,\n      rounded: 'lg',\n      maxHeight: \"\".concat(Dimensions.get('window').height - 150, \"px\"),\n      overflow: 'hidden'\n    };\n  }\n};\nexport var AlertDialogCloseButton = {\n  baseStyle: function baseStyle(props) {\n    return {\n      position: 'absolute',\n      right: '3',\n      top: '3',\n      zIndex: '1',\n      colorScheme: 'coolGray',\n      p: '2',\n      _icon: {\n        size: '3',\n        color: mode('coolGray.600', 'coolGray.100')(props)\n      }\n    };\n  }\n};\nexport var AlertDialogHeader = {\n  baseStyle: function baseStyle(props) {\n    return {\n      py: '4',\n      px: '3',\n      borderBottomWidth: '1',\n      borderColor: mode('coolGray.200', 'gray.600')(props),\n      _text: {\n        fontSize: 'md',\n        fontWeight: 'semibold',\n        color: mode('coolGray.800', 'warmGray.50')(props),\n        lineHeight: 'sm'\n      }\n    };\n  }\n};\nexport var AlertDialogBody = {\n  baseStyle: function baseStyle(props) {\n    return {\n      pt: '2',\n      p: '3',\n      _text: {\n        color: mode('coolGray.600', 'coolGray.300')(props)\n      }\n    };\n  }\n};\nexport var AlertDialogFooter = {\n  baseStyle: function baseStyle(props) {\n    return {\n      p: '3',\n      bg: mode('coolGray.100', 'gray.600')(props),\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      flexWrap: 'wrap'\n    };\n  }\n};\nexport var AlertDialogOverlay = {\n  baseStyle: {\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    opacity: '50',\n    right: '0',\n    bottom: '0'\n  }\n};\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/theme/components/alert-dialog.js"],"names":["sizes","xs","contentSize","width","maxWidth","sm","md","lg","xl","full","AlertDialog","baseStyle","height","justifyContent","alignItems","defaultProps","size","closeOnOverlayClick","AlertDialogContent","bg","mode","_text","color","shadow","rounded","maxHeight","Dimensions","overflow","AlertDialogCloseButton","position","right","top","zIndex","colorScheme","p","_icon","AlertDialogHeader","py","px","borderBottomWidth","borderColor","fontSize","fontWeight","lineHeight","AlertDialogBody","pt","AlertDialogFooter","flexDirection","flexWrap","AlertDialogOverlay","left","opacity","bottom"],"mappings":"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","sourcesContent":["import { Dimensions } from 'react-native';\nimport { mode } from '../tools';\nconst sizes = {\n  xs: {\n    contentSize: {\n      width: '60%',\n      maxWidth: '280'\n    }\n  },\n  sm: {\n    contentSize: {\n      width: '65%',\n      maxWidth: '320'\n    }\n  },\n  md: {\n    contentSize: {\n      width: '75%',\n      maxWidth: '380'\n    }\n  },\n  lg: {\n    contentSize: {\n      width: '80%',\n      maxWidth: '520'\n    }\n  },\n  xl: {\n    contentSize: {\n      width: '90%',\n      maxWidth: '580'\n    }\n  },\n  full: {\n    contentSize: {\n      width: '100%'\n    }\n  }\n};\nexport const AlertDialog = {\n  baseStyle: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  sizes,\n  defaultProps: {\n    size: 'md',\n    closeOnOverlayClick: true\n  }\n};\nexport const AlertDialogContent = {\n  baseStyle: props => {\n    return {\n      bg: mode('coolGray.50', 'gray.700')(props),\n      _text: {\n        color: mode('coolGray.800', 'warmGray.50')(props)\n      },\n      shadow: 1,\n      rounded: 'lg',\n      maxHeight: \"\".concat(Dimensions.get('window').height - 150, \"px\"),\n      overflow: 'hidden'\n    };\n  }\n};\nexport const AlertDialogCloseButton = {\n  baseStyle: props => {\n    return {\n      position: 'absolute',\n      right: '3',\n      top: '3',\n      zIndex: '1',\n      colorScheme: 'coolGray',\n      p: '2',\n      _icon: {\n        size: '3',\n        color: mode('coolGray.600', 'coolGray.100')(props)\n      }\n    };\n  }\n};\nexport const AlertDialogHeader = {\n  baseStyle: props => {\n    return {\n      py: '4',\n      px: '3',\n      borderBottomWidth: '1',\n      borderColor: mode('coolGray.200', 'gray.600')(props),\n      _text: {\n        fontSize: 'md',\n        fontWeight: 'semibold',\n        color: mode('coolGray.800', 'warmGray.50')(props),\n        lineHeight: 'sm'\n      }\n    };\n  }\n};\nexport const AlertDialogBody = {\n  baseStyle: props => {\n    return {\n      pt: '2',\n      p: '3',\n      _text: {\n        color: mode('coolGray.600', 'coolGray.300')(props)\n      }\n    };\n  }\n};\nexport const AlertDialogFooter = {\n  baseStyle: props => {\n    return {\n      p: '3',\n      bg: mode('coolGray.100', 'gray.600')(props),\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      flexWrap: 'wrap'\n    };\n  }\n};\nexport const AlertDialogOverlay = {\n  baseStyle: {\n    position: 'absolute',\n    left: '0',\n    top: '0',\n    opacity: '50',\n    right: '0',\n    bottom: '0'\n  }\n};\n//# sourceMappingURL=alert-dialog.js.map"]},"metadata":{},"sourceType":"module"}