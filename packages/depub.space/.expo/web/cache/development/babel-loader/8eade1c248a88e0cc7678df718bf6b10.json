{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport isNil from 'lodash.isnil';\nexport function useMediaQuery(query) {\n  _s();\n\n  var dims = useWindowDimensions();\n  var height = dims === null || dims === void 0 ? void 0 : dims.height;\n  var width = dims === null || dims === void 0 ? void 0 : dims.width;\n  return iterateQuery(query, height, width);\n}\n\n_s(useMediaQuery, \"ax6eq7Nsnu+l8S4NxKFaIwAfD7s=\", false, function () {\n  return [useWindowDimensions];\n});\n\nfunction queryResolver(query, width, height) {\n  for (var queryKey in query) {\n    if (!calculateQuery(queryKey, query[queryKey], height, width)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction iterateQuery(query, height, width) {\n  var queryResults = [];\n\n  if (Array.isArray(query)) {\n    query.forEach(function (subQuery) {\n      queryResults.push(queryResolver(subQuery, width, height));\n    });\n  } else {\n    queryResults.push(queryResolver(query, width, height));\n  }\n\n  return queryResults;\n}\n\nfunction calculateQuery(key, val, height, width) {\n  var retval;\n\n  if (isNil(width) || isNil(height) || isNil(val)) {\n    return;\n  }\n\n  switch (key) {\n    case 'maxWidth':\n      retval = !isNil(val) ? width <= val : undefined;\n      break;\n\n    case 'minWidth':\n      retval = !isNil(val) ? width >= val : undefined;\n      break;\n\n    case 'maxHeight':\n      retval = !isNil(val) ? height <= val : undefined;\n      break;\n\n    case 'minHeight':\n      retval = !isNil(val) ? height >= val : undefined;\n      break;\n\n    case 'orientation':\n      if (!isNil(val)) {\n        if (width > height) {\n          retval = val === 'landscape';\n        } else {\n          retval = val === 'portrait';\n        }\n      }\n\n      break;\n\n    default:\n      break;\n  }\n\n  return retval;\n}\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/hooks/useMediaQuery.js"],"names":["useMediaQuery","dims","useWindowDimensions","height","width","iterateQuery","calculateQuery","query","queryResults","Array","queryResolver","isNil","retval","val"],"mappings":";;;AACA,OAAA,KAAA,MAAA,cAAA;AACA,OAAO,SAAA,aAAA,CAAA,KAAA,EAA8B;AAAA,EAAA,EAAA;;AACnC,MAAMC,IAAI,GAAGC,mBAAb,EAAA;AACA,MAAMC,MAAM,GAAGF,IAAI,KAAJA,IAAAA,IAAiBA,IAAI,KAAK,KAA1BA,CAAAA,GAAmC,KAAnCA,CAAAA,GAA4CA,IAAI,CAA/D,MAAA;AACA,MAAMG,KAAK,GAAGH,IAAI,KAAJA,IAAAA,IAAiBA,IAAI,KAAK,KAA1BA,CAAAA,GAAmC,KAAnCA,CAAAA,GAA4CA,IAAI,CAA9D,KAAA;AACA,SAAOI,YAAY,CAAA,KAAA,EAAA,MAAA,EAAnB,KAAmB,CAAnB;;;GAJcL,a;UACDE,mB;;;AAMf,SAAA,aAAA,CAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAA6C;AAC3C,OAAK,IAAL,QAAA,IAAA,KAAA,EAA8B;AAC5B,QAAI,CAACI,cAAc,CAAA,QAAA,EAAWC,KAAK,CAAhB,QAAgB,CAAhB,EAAA,MAAA,EAAnB,KAAmB,CAAnB,EAA+D;AAC7D,aAAA,KAAA;AAEH;AAED;;AAAA,SAAA,IAAA;AAGF;;AAAA,SAAA,YAAA,CAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAA4C;AAC1C,MAAMC,YAAY,GAAlB,EAAA;;AAEA,MAAIC,KAAK,CAALA,OAAAA,CAAJ,KAAIA,CAAJ,EAA0B;AACxBF,IAAAA,KAAK,CAALA,OAAAA,CAAc,UAAA,QAAA,EAAY;AACxBC,MAAAA,YAAY,CAAZA,IAAAA,CAAkBE,aAAa,CAAA,QAAA,EAAA,KAAA,EAA/BF,MAA+B,CAA/BA;AADFD,KAAAA;AADF,GAAA,MAIO;AACLC,IAAAA,YAAY,CAAZA,IAAAA,CAAkBE,aAAa,CAAA,KAAA,EAAA,KAAA,EAA/BF,MAA+B,CAA/BA;AAGF;;AAAA,SAAA,YAAA;AAGF;;AAAA,SAAA,cAAA,CAAA,GAAA,EAAA,GAAA,EAAA,MAAA,EAAA,KAAA,EAAiD;AAC/C,MAAA,MAAA;;AAEA,MAAIG,KAAK,CAALA,KAAK,CAALA,IAAgBA,KAAK,CAArBA,MAAqB,CAArBA,IAAiCA,KAAK,CAA1C,GAA0C,CAA1C,EAAiD;AAC/C;AAGF;;AAAA,UAAA,GAAA;AACE,SAAA,UAAA;AACEC,MAAAA,MAAM,GAAG,CAACD,KAAK,CAAN,GAAM,CAAN,GAAcP,KAAK,IAAnB,GAAA,GAATQ,SAAAA;AACA;;AAEF,SAAA,UAAA;AACEA,MAAAA,MAAM,GAAG,CAACD,KAAK,CAAN,GAAM,CAAN,GAAcP,KAAK,IAAnB,GAAA,GAATQ,SAAAA;AACA;;AAEF,SAAA,WAAA;AACEA,MAAAA,MAAM,GAAG,CAACD,KAAK,CAAN,GAAM,CAAN,GAAcR,MAAM,IAApB,GAAA,GAATS,SAAAA;AACA;;AAEF,SAAA,WAAA;AACEA,MAAAA,MAAM,GAAG,CAACD,KAAK,CAAN,GAAM,CAAN,GAAcR,MAAM,IAApB,GAAA,GAATS,SAAAA;AACA;;AAEF,SAAA,aAAA;AACE,UAAI,CAACD,KAAK,CAAV,GAAU,CAAV,EAAiB;AACf,YAAIP,KAAK,GAAT,MAAA,EAAoB;AAClBQ,UAAAA,MAAM,GAAGC,GAAG,KAAZD,WAAAA;AADF,SAAA,MAEO;AACLA,UAAAA,MAAM,GAAGC,GAAG,KAAZD,UAAAA;AAEH;AAED;;AAAA;;AAEF;AA5BF;AAAA;;AAgCA,SAAA,MAAA;AACD","sourcesContent":["import { useWindowDimensions } from 'react-native';\nimport isNil from 'lodash.isnil';\nexport function useMediaQuery(query) {\n  const dims = useWindowDimensions();\n  const height = dims === null || dims === void 0 ? void 0 : dims.height;\n  const width = dims === null || dims === void 0 ? void 0 : dims.width;\n  return iterateQuery(query, height, width);\n}\n\nfunction queryResolver(query, width, height) {\n  for (const queryKey in query) {\n    if (!calculateQuery(queryKey, query[queryKey], height, width)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction iterateQuery(query, height, width) {\n  const queryResults = [];\n\n  if (Array.isArray(query)) {\n    query.forEach(subQuery => {\n      queryResults.push(queryResolver(subQuery, width, height));\n    });\n  } else {\n    queryResults.push(queryResolver(query, width, height));\n  }\n\n  return queryResults;\n}\n\nfunction calculateQuery(key, val, height, width) {\n  let retval;\n\n  if (isNil(width) || isNil(height) || isNil(val)) {\n    return;\n  }\n\n  switch (key) {\n    case 'maxWidth':\n      retval = !isNil(val) ? width <= val : undefined;\n      break;\n\n    case 'minWidth':\n      retval = !isNil(val) ? width >= val : undefined;\n      break;\n\n    case 'maxHeight':\n      retval = !isNil(val) ? height <= val : undefined;\n      break;\n\n    case 'minHeight':\n      retval = !isNil(val) ? height >= val : undefined;\n      break;\n\n    case 'orientation':\n      if (!isNil(val)) {\n        if (width > height) {\n          retval = val === 'landscape';\n        } else {\n          retval = val === 'portrait';\n        }\n      }\n\n      break;\n\n    default:\n      break;\n  }\n\n  return retval;\n}\n//# sourceMappingURL=useMediaQuery.js.map"]},"metadata":{},"sourceType":"module"}