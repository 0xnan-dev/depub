{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useScreenReaderEnabled = useScreenReaderEnabled;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction useScreenReaderEnabled() {\n  var _react$default$useSta = _react[\"default\"].useState(false),\n      _react$default$useSta2 = _slicedToArray(_react$default$useSta, 2),\n      enabled = _react$default$useSta2[0],\n      setEnabled = _react$default$useSta2[1];\n\n  var mountedRef = _react[\"default\"].useRef(false);\n\n  var handleSetEnabled = function handleSetEnabled(value) {\n    if (mountedRef.current) {\n      setEnabled(value);\n    }\n  };\n\n  _react[\"default\"].useEffect(function () {\n    mountedRef.current = true;\n\n    function setInitialValue() {\n      var res;\n      return _regeneratorRuntime.async(function setInitialValue$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(_reactNative.AccessibilityInfo.isScreenReaderEnabled());\n\n            case 2:\n              res = _context.sent;\n              handleSetEnabled(res);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    var handler = _reactNative.AccessibilityInfo.addEventListener('screenReaderChanged', function (event) {\n      handleSetEnabled(event);\n    });\n\n    setInitialValue();\n    return function () {\n      mountedRef.current = false;\n\n      _reactNative.AccessibilityInfo.removeEventListener('screenReaderChanged', handler);\n    };\n  });\n\n  return enabled;\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/commonjs/hooks/useScreenReaderEnabled.js"],"names":["Object","value","exports","_react","_interopRequireDefault","require","obj","default","enabled","setEnabled","mountedRef","handleSetEnabled","res","_reactNative","handler","setInitialValue"],"mappings":"AAAA;;;;;;AAEAA,MAAM,CAANA,cAAAA,CAAAA,OAAAA,EAAAA,YAAAA,EAA6C;AAC3CC,EAAAA,KAAK,EADPD;AAA6C,CAA7CA;AAGAE,OAAO,CAAPA,sBAAAA,GAAAA,sBAAAA;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAA3C,OAA2C,CAAR,CAAnC;;;;AAIA,SAAA,sBAAA,CAAA,GAAA,EAAqC;AAAE,SAAOC,GAAG,IAAIA,GAAG,CAAVA,UAAAA,GAAAA,GAAAA,GAA8B;AAAEC,eAAvC;AAAqC,GAArC;AAEvC;;AAAA,SAAA,sBAAA,GAAkC;AAChC,MAAA,qBAAA,GAA8BJ,MAAAA,WAAAA,CAAAA,QAAAA,CAA9B,KAA8BA,CAA9B;AAAA,MAAA,sBAAA,GAAA,cAAA,CAAA,qBAAA,EAAA,CAAA,CAAA;AAAA,MAAOK,OAAP,GAAA,sBAAA,CAAA,CAAA,CAAA;AAAA,MAAgBC,UAAhB,GAAA,sBAAA,CAAA,CAAA,CAAA;;AAEA,MAAMC,UAAU,GAAGP,MAAAA,WAAAA,CAAAA,MAAAA,CAAnB,KAAmBA,CAAnB;;AAEA,MAAMQ,gBAAgB,GAAhBA,SAAAA,gBAAAA,CAAmB,KAAnBA,EAA4B;AAChC,QAAID,UAAU,CAAd,OAAA,EAAwB;AACtBD,MAAAA,UAAU,CAAVA,KAAU,CAAVA;AAEH;AAJD,GAAA;;AAMAN,EAAAA,MAAAA,WAAAA,CAAAA,SAAAA,CAAyB,YAAM;AAC7BO,IAAAA,UAAU,CAAVA,OAAAA,GAAAA,IAAAA;;AAEA,aAAA,eAAA,GAAA;AAAA,UAAA,GAAA;AAAA,aAAA,mBAAA,CAAA,KAAA,CAAA,SAAA,gBAAA,CAAA,QAAA,EAAA;AAAA,eAAA,CAAA,EAAA;AAAA,kBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,iBAAA,CAAA;AAAA,cAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,qBAAA,mBAAA,CAAA,KAAA,CACoBG,YAAY,CAAZA,iBAAAA,CADpB,qBACoBA,EADpB,CAAA;;AAAA,iBAAA,CAAA;AACQD,cAAAA,GADR,GAAA,QAAA,CAAA,IACQA;AACND,cAAAA,gBAAgB,CAAhBA,GAAgB,CAAhBA;;AAFF,iBAAA,CAAA;AAAA,iBAAA,KAAA;AAAA,qBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,CAAA;AAKA;;AAAA,QAAIG,OAAO,GAAGD,YAAY,CAAZA,iBAAAA,CAAAA,gBAAAA,CAAAA,qBAAAA,EAAuE,UAAA,KAAA,EAAS;AAC5FF,MAAAA,gBAAgB,CAAhBA,KAAgB,CAAhBA;AADF,KAAcE,CAAd;;AAIAE,IAAAA,eAAe;AACf,WAAO,YAAM;AACXL,MAAAA,UAAU,CAAVA,OAAAA,GAAAA,KAAAA;;AAEAG,MAAAA,YAAY,CAAZA,iBAAAA,CAAAA,mBAAAA,CAAAA,qBAAAA,EAAAA,OAAAA;AAHF,KAAA;AAbFV,GAAAA;;AAoBA,SAAA,OAAA;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useScreenReaderEnabled = useScreenReaderEnabled;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction useScreenReaderEnabled() {\n  const [enabled, setEnabled] = _react.default.useState(false);\n\n  const mountedRef = _react.default.useRef(false);\n\n  const handleSetEnabled = value => {\n    if (mountedRef.current) {\n      setEnabled(value);\n    }\n  };\n\n  _react.default.useEffect(() => {\n    mountedRef.current = true;\n\n    async function setInitialValue() {\n      const res = await _reactNative.AccessibilityInfo.isScreenReaderEnabled();\n      handleSetEnabled(res);\n    }\n\n    let handler = _reactNative.AccessibilityInfo.addEventListener('screenReaderChanged', event => {\n      handleSetEnabled(event);\n    });\n\n    setInitialValue();\n    return () => {\n      mountedRef.current = false;\n\n      _reactNative.AccessibilityInfo.removeEventListener('screenReaderChanged', handler);\n    };\n  });\n\n  return enabled;\n}\n//# sourceMappingURL=useScreenReaderEnabled.js.map"]},"metadata":{},"sourceType":"script"}