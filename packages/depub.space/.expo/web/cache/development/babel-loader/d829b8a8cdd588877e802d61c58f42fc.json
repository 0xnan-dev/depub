{"ast":null,"code":"import { mode } from \"./../tools\";\n\nvar baseStyle = function baseStyle(props) {\n  return {\n    bg: mode(\"coolGray.600\", \"warmGray.200\")(props),\n    p: '2',\n    rounded: 'sm',\n    shadow: 1,\n    _title: {\n      color: mode(\"warmGray.200\", \"coolGray.600\")(props),\n      fontWeight: 700\n    },\n    _description: {\n      color: mode(\"warmGray.200\", \"coolGray.600\")(props),\n      fontWeight: 400\n    },\n    _closeIcon: {\n      size: 4\n    }\n  };\n};\n\nexport var Toast = {\n  baseStyle: baseStyle,\n  defaultProps: {}\n};\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/theme/components/toast.js"],"names":["baseStyle","bg","mode","p","rounded","shadow","_title","color","fontWeight","_description","_closeIcon","size","Toast","defaultProps"],"mappings":"AAAA,SAAA,IAAA;;AAEA,IAAMA,SAAS,GAATA,SAAAA,SAAAA,CAAY,KAAZA,EAAqB;AACzB,SAAO;AACLC,IAAAA,EAAE,EAAEC,IAAI,CAAA,cAAA,EAAJA,cAAI,CAAJA,CADC,KACDA,CADC;AAELC,IAAAA,CAAC,EAFI,GAAA;AAGLC,IAAAA,OAAO,EAHF,IAAA;AAILC,IAAAA,MAAM,EAJD,CAAA;AAKLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEL,IAAI,CAAA,cAAA,EAAJA,cAAI,CAAJA,CADD,KACCA,CADD;AAENM,MAAAA,UAAU,EAPP;AAKG,KALH;AASLC,IAAAA,YAAY,EAAE;AACZF,MAAAA,KAAK,EAAEL,IAAI,CAAA,cAAA,EAAJA,cAAI,CAAJA,CADK,KACLA,CADK;AAEZM,MAAAA,UAAU,EAXP;AASS,KATT;AAaLE,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAdR;AAac;AAbP,GAAP;AADF,CAAA;;AAoBA,OAAO,IAAMC,KAAK,GAAG;AACnBZ,EAAAA,SAAS,EADU,SAAA;AAEnBa,EAAAA,YAAY,EAFP;AAAc,CAAd","sourcesContent":["import { mode } from './../tools';\n\nconst baseStyle = props => {\n  return {\n    bg: mode(\"coolGray.600\", \"warmGray.200\")(props),\n    p: '2',\n    rounded: 'sm',\n    shadow: 1,\n    _title: {\n      color: mode(\"warmGray.200\", \"coolGray.600\")(props),\n      fontWeight: 700\n    },\n    _description: {\n      color: mode(\"warmGray.200\", \"coolGray.600\")(props),\n      fontWeight: 400\n    },\n    _closeIcon: {\n      size: 4\n    }\n  };\n};\n\nexport const Toast = {\n  baseStyle,\n  defaultProps: {}\n};\n//# sourceMappingURL=toast.js.map"]},"metadata":{},"sourceType":"module"}