{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useColorModeValue = useColorModeValue;\nexports.useModeManager = useModeManager;\nexports.useAccessibleColors = useAccessibleColors;\nexports.useColorMode = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Context = require(\"./../hybrid-overlay/Context\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar useColorMode = function useColorMode() {\n  var _react$default$useCon = _react[\"default\"].useContext(_Context.HybridContext),\n      colorModeContext = _react$default$useCon.colorMode;\n\n  if (colorModeContext === undefined) {\n    throw new Error('useColorMode must be used within a NativeBaseProvider');\n  }\n\n  return colorModeContext;\n};\n\nexports.useColorMode = useColorMode;\n\nfunction useColorModeValue(light, dark) {\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  return colorMode === 'dark' ? dark : light;\n}\n\nfunction useModeManager(initialColorMode, useSystemColorMode, colorModeManager) {\n  var systemColorMode = (0, _reactNative.useColorScheme)();\n\n  if (useSystemColorMode) {\n    initialColorMode = systemColorMode;\n  }\n\n  var _ref = (0, _react.useState)(initialColorMode),\n      _ref2 = _slicedToArray(_ref, 2),\n      colorMode = _ref2[0],\n      setRawMode = _ref2[1];\n\n  var setColorMode = _react[\"default\"].useCallback(function _callee(val) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!colorModeManager) {\n              _context.next = 3;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(colorModeManager.set(val));\n\n          case 3:\n            setRawMode(val);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [colorModeManager]);\n\n  (0, _react.useEffect)(function () {\n    if (colorModeManager) {\n      (function getMode() {\n        var value;\n        return _regeneratorRuntime.async(function getMode$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(colorModeManager.get(initialColorMode));\n\n              case 2:\n                value = _context2.sent;\n\n                if (value && value !== colorMode) {\n                  setRawMode(value);\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      })();\n    }\n  }, [colorMode, initialColorMode, colorModeManager]);\n  (0, _react.useEffect)(function () {\n    if (!colorModeManager && useSystemColorMode) {\n      setRawMode(systemColorMode);\n    }\n  }, [systemColorMode, colorModeManager, useSystemColorMode, setRawMode]);\n  return {\n    colorMode: colorMode,\n    setColorMode: setColorMode\n  };\n}\n\nfunction useAccessibleColors() {\n  var _react$default$useCon2 = _react[\"default\"].useContext(_Context.HybridContext),\n      colorModeContext = _react$default$useCon2.colorMode;\n\n  var toggleAccessibleColors = function toggleAccessibleColors() {\n    return colorModeContext.setAccessibleColors(!colorModeContext.accessibleColors);\n  };\n\n  return [colorModeContext.accessibleColors, colorModeContext.setAccessibleColors, toggleAccessibleColors];\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/commonjs/core/color-mode/hooks.js"],"names":["Object","value","exports","_react","_interopRequireWildcard","require","_Context","cache","_getRequireWildcardCache","obj","default","newObj","hasPropertyDescriptor","desc","useColorMode","colorModeContext","colorMode","systemColorMode","_reactNative","initialColorMode","setRawMode","setColorMode","colorModeManager","toggleAccessibleColors"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useColorModeValue = useColorModeValue;\nexports.useModeManager = useModeManager;\nexports.useAccessibleColors = useAccessibleColors;\nexports.useColorMode = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Context = require(\"./../hybrid-overlay/Context\");\n\nvar _reactNative = require(\"react-native\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst useColorMode = () => {\n  const {\n    colorMode: colorModeContext\n  } = _react.default.useContext(_Context.HybridContext);\n\n  if (colorModeContext === undefined) {\n    throw new Error('useColorMode must be used within a NativeBaseProvider');\n  }\n\n  return colorModeContext;\n};\n\nexports.useColorMode = useColorMode;\n\nfunction useColorModeValue(light, dark) {\n  const {\n    colorMode\n  } = useColorMode();\n  return colorMode === 'dark' ? dark : light;\n}\n\nfunction useModeManager(initialColorMode, useSystemColorMode, colorModeManager) {\n  const systemColorMode = (0, _reactNative.useColorScheme)();\n\n  if (useSystemColorMode) {\n    initialColorMode = systemColorMode;\n  }\n\n  const [colorMode, setRawMode] = (0, _react.useState)(initialColorMode);\n\n  const setColorMode = _react.default.useCallback(async val => {\n    if (colorModeManager) {\n      await colorModeManager.set(val);\n    }\n\n    setRawMode(val);\n  }, [colorModeManager]); // For initial setting initial color mode from storage\n\n\n  (0, _react.useEffect)(() => {\n    if (colorModeManager) {\n      (async function getMode() {\n        let value = await colorModeManager.get(initialColorMode);\n\n        if (value && value !== colorMode) {\n          setRawMode(value);\n        }\n      })();\n    }\n  }, [colorMode, initialColorMode, colorModeManager]); // Set system color mode only when user has not passed a colorModeManager\n\n  (0, _react.useEffect)(() => {\n    if (!colorModeManager && useSystemColorMode) {\n      setRawMode(systemColorMode);\n    }\n  }, [systemColorMode, colorModeManager, useSystemColorMode, setRawMode]);\n  return {\n    colorMode,\n    setColorMode\n  };\n}\n\nfunction useAccessibleColors() {\n  const {\n    colorMode: colorModeContext\n  } = _react.default.useContext(_Context.HybridContext);\n\n  const toggleAccessibleColors = () => colorModeContext.setAccessibleColors(!colorModeContext.accessibleColors);\n\n  return [colorModeContext.accessibleColors, colorModeContext.setAccessibleColors, toggleAccessibleColors];\n}\n//# sourceMappingURL=hooks.js.map"]},"metadata":{},"sourceType":"script"}