{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.Input = void 0;\n\nvar _tools = require(\"../tools\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nfunction getSelectionColor(props) {\n  if (_reactNative.Platform.OS === 'ios') {\n    return (0, _tools.mode)('coolGray.800', 'warmGray.50')(props);\n  } else if (_reactNative.Platform.OS === 'android') {\n    return (0, _tools.mode)('coolGray.800', 'warmGray.50')(props);\n  }\n}\n\nvar baseStyle = function baseStyle(props) {\n  return {\n    selectionColor: getSelectionColor(props),\n    fontFamily: 'body',\n    p: '2',\n    borderRadius: 'sm',\n    overflow: 'hidden',\n    color: (0, _tools.mode)('coolGray.800', 'warmGray.50')(props),\n    placeholderTextColor: 'muted.400',\n    borderColor: (0, _tools.mode)('muted.200', 'gray.500')(props),\n    _disabled: {\n      opacity: '80',\n      bg: (0, _tools.mode)('muted.100', 'muted.700')(props)\n    },\n    _invalid: {\n      borderColor: (0, _tools.mode)('danger.600', 'danger.300')(props)\n    },\n    _focus: {\n      borderColor: (0, _tools.mode)('primary.400', 'primary.500')(props)\n    },\n    _web: {\n      outlineWidth: '0',\n      overflow: 'auto',\n      lineHeight: 'lg'\n    }\n  };\n};\n\nfunction roundedStyle(props) {\n  return {\n    borderRadius: '25',\n    borderWidth: '1',\n    _hover: {\n      bg: (0, _tools.mode)('gray.100', 'gray.700')(props)\n    }\n  };\n}\n\nfunction outlineStyle(props) {\n  return {\n    borderWidth: '1',\n    _hover: {\n      bg: (0, _tools.mode)('gray.100', 'gray.700')(props)\n    }\n  };\n}\n\nfunction filledStyle(props) {\n  return {\n    bg: props.bg || (0, _tools.mode)('muted.200', 'muted.600')(props),\n    borderWidth: '1',\n    borderColor: 'transparent',\n    _hover: {\n      bg: (0, _tools.mode)('muted.300', 'muted.700')(props)\n    }\n  };\n}\n\nfunction unstyledStyle() {\n  return {\n    borderWidth: '0'\n  };\n}\n\nfunction underlinedStyle() {\n  return {\n    borderRadius: '0',\n    borderTopWidth: '0',\n    borderLeftWidth: '0',\n    borderRightWidth: '0',\n    borderBottomWidth: '1'\n  };\n}\n\nvar variants = {\n  outline: outlineStyle,\n  underlined: underlinedStyle,\n  rounded: roundedStyle,\n  filled: filledStyle,\n  unstyled: unstyledStyle\n};\nvar sizes = {\n  '2xl': {\n    fontSize: 'xl'\n  },\n  'xl': {\n    fontSize: 'lg'\n  },\n  'lg': {\n    fontSize: 'md'\n  },\n  'md': {\n    fontSize: 'sm'\n  },\n  'sm': {\n    fontSize: 'xs'\n  },\n  'xs': {\n    fontSize: '2xs'\n  }\n};\nvar defaultProps = {\n  size: 'sm',\n  variant: 'outline'\n};\nvar Input = {\n  baseStyle: baseStyle,\n  defaultProps: defaultProps,\n  variants: variants,\n  sizes: sizes\n};\nexports.Input = Input;\nvar _default = {};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/commonjs/theme/components/input.js"],"names":["Object","value","exports","_tools","require","_reactNative","baseStyle","selectionColor","getSelectionColor","fontFamily","p","borderRadius","overflow","color","placeholderTextColor","borderColor","_disabled","opacity","bg","_invalid","_focus","_web","outlineWidth","lineHeight","borderWidth","_hover","props","borderTopWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","variants","outline","underlined","rounded","filled","unstyled","sizes","fontSize","defaultProps","size","variant","Input","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Input = void 0;\n\nvar _tools = require(\"../tools\");\n\nvar _reactNative = require(\"react-native\");\n\nfunction getSelectionColor(props) {\n  if (_reactNative.Platform.OS === 'ios') {\n    return (0, _tools.mode)('coolGray.800', 'warmGray.50')(props);\n  } else if (_reactNative.Platform.OS === 'android') {\n    return (0, _tools.mode)('coolGray.800', 'warmGray.50')(props);\n  }\n}\n\nconst baseStyle = props => {\n  // const { primary } = props.theme.colors;\n  // Todo: Resolve boxShadow Color or Provide some alternatiove prop for user to change focusRing color\n  // // Todo: Update to support similar focusRing on iOS , Android and Web\n  // const focusRing =\n  //   Platform.OS === 'web'\n  //     ? {\n  //         boxShadow:\n  //           props.variant !== 'underlined'\n  //             ? `${primary[400]} 0px 0px 0px 1px`\n  //             : `${primary[400]} 0px 1px 0px 0px`,\n  //         zIndex: 1,\n  //       }\n  //     : {\n  //         // boxShadow: `${useToken('colors', ['primary.400'])} 0px 0px 0px 1px`,\n  //       };\n  return {\n    selectionColor: getSelectionColor(props),\n    fontFamily: 'body',\n    p: '2',\n    borderRadius: 'sm',\n    overflow: 'hidden',\n    color: (0, _tools.mode)('coolGray.800', 'warmGray.50')(props),\n    placeholderTextColor: 'muted.400',\n    borderColor: (0, _tools.mode)('muted.200', 'gray.500')(props),\n    _disabled: {\n      opacity: '80',\n      bg: (0, _tools.mode)('muted.100', 'muted.700')(props)\n    },\n    _invalid: {\n      borderColor: (0, _tools.mode)('danger.600', 'danger.300')(props)\n    },\n    _focus: {\n      borderColor: (0, _tools.mode)('primary.400', 'primary.500')(props)\n    },\n    _web: {\n      outlineWidth: '0',\n      overflow: 'auto',\n      lineHeight: 'lg' // Todo: Move to _web inside size so that sm and xs don't have this much height\n\n    }\n  };\n};\n\nfunction roundedStyle(props) {\n  return {\n    borderRadius: '25',\n    borderWidth: '1',\n    _hover: {\n      bg: (0, _tools.mode)('gray.100', 'gray.700')(props)\n    }\n  };\n}\n\nfunction outlineStyle(props) {\n  return {\n    borderWidth: '1',\n    _hover: {\n      bg: (0, _tools.mode)('gray.100', 'gray.700')(props)\n    }\n  };\n}\n\nfunction filledStyle(props) {\n  return {\n    bg: props.bg || (0, _tools.mode)('muted.200', 'muted.600')(props),\n    borderWidth: '1',\n    borderColor: 'transparent',\n    _hover: {\n      bg: (0, _tools.mode)('muted.300', 'muted.700')(props)\n    }\n  };\n}\n\nfunction unstyledStyle() {\n  return {\n    borderWidth: '0'\n  };\n}\n\nfunction underlinedStyle() {\n  return {\n    borderRadius: '0',\n    borderTopWidth: '0',\n    borderLeftWidth: '0',\n    borderRightWidth: '0',\n    borderBottomWidth: '1'\n  };\n}\n\nconst variants = {\n  outline: outlineStyle,\n  underlined: underlinedStyle,\n  rounded: roundedStyle,\n  filled: filledStyle,\n  unstyled: unstyledStyle\n};\nconst sizes = {\n  '2xl': {\n    fontSize: 'xl'\n  },\n  'xl': {\n    fontSize: 'lg'\n  },\n  'lg': {\n    fontSize: 'md'\n  },\n  'md': {\n    fontSize: 'sm'\n  },\n  'sm': {\n    fontSize: 'xs'\n  },\n  'xs': {\n    fontSize: '2xs'\n  }\n};\nconst defaultProps = {\n  size: 'sm',\n  variant: 'outline'\n}; // Input\n\nconst Input = {\n  baseStyle,\n  defaultProps,\n  variants,\n  sizes\n};\nexports.Input = Input;\nvar _default = {};\nexports.default = _default;\n//# sourceMappingURL=input.js.map"]},"metadata":{},"sourceType":"script"}