{"ast":null,"code":"import get from 'lodash.get';\nimport isEmpty from 'lodash.isempty';\nimport Color from 'tinycolor2';\nexport function mode(light, dark) {\n  return function (props) {\n    return props.colorMode === 'dark' ? dark : light;\n  };\n}\nexport var transparentize = function transparentize(color, opacity) {\n  return function (theme) {\n    var raw = getColor(theme, color);\n    return Color(raw).setAlpha(opacity).toRgbString();\n  };\n};\nexport var getColor = function getColor(theme, color, fallback) {\n  var hex = get(theme, \"colors.\".concat(color), color);\n  var isValid = Color(hex).isValid();\n  return isValid ? hex : fallback;\n};\nexport var tone = function tone(color) {\n  return function (theme) {\n    var hex = getColor(theme, color);\n    var isDark = Color(hex).isDark();\n    return isDark ? 'dark' : 'light';\n  };\n};\nexport var isDark = function isDark(color) {\n  return function (theme) {\n    return tone(color)(theme) === 'dark';\n  };\n};\nexport var isLight = function isLight(color) {\n  return function (theme) {\n    return tone(color)(theme) === 'light';\n  };\n};\nexport function randomColor(opts) {\n  var fallback = Color.random().toHexString();\n\n  if (!opts || isEmpty(opts)) {\n    return fallback;\n  }\n\n  if (opts.string && opts.colors) {\n    return randomColorFromList(opts.string, opts.colors);\n  }\n\n  if (opts.string && !opts.colors) {\n    return randomColorFromString(opts.string);\n  }\n\n  if (opts.colors && !opts.string) {\n    return randomFromList(opts.colors);\n  }\n\n  return fallback;\n}\n\nfunction randomFromList(list) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nfunction randomColorFromList(str, list) {\n  var index = 0;\n  if (str.length === 0) return list[0];\n\n  for (var i = 0; i < str.length; i++) {\n    index = str.charCodeAt(i) + ((index << 5) - index);\n    index = index & index;\n  }\n\n  index = (index % list.length + list.length) % list.length;\n  return list[index];\n}\n\nfunction randomColorFromString(str) {\n  var hash = 0;\n  if (str.length === 0) return hash.toString();\n\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n\n  var color = '#';\n\n  for (var j = 0; j < 3; j++) {\n    var value = hash >> j * 8 & 255;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/theme/tools/colors.js"],"names":["props","transparentize","raw","getColor","Color","hex","get","isValid","tone","isDark","isLight","fallback","isEmpty","opts","randomColorFromList","randomColorFromString","randomFromList","list","Math","index","str","i","hash","color","j","value"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport isEmpty from 'lodash.isempty';\nimport Color from 'tinycolor2';\nexport function mode(light, dark) {\n  return props => props.colorMode === 'dark' ? dark : light;\n}\nexport const transparentize = (color, opacity) => theme => {\n  const raw = getColor(theme, color);\n  return Color(raw).setAlpha(opacity).toRgbString();\n};\nexport const getColor = (theme, color, fallback) => {\n  const hex = get(theme, \"colors.\".concat(color), color);\n  const isValid = Color(hex).isValid();\n  return isValid ? hex : fallback;\n};\nexport const tone = color => theme => {\n  const hex = getColor(theme, color);\n  const isDark = Color(hex).isDark();\n  return isDark ? 'dark' : 'light';\n};\nexport const isDark = color => theme => tone(color)(theme) === 'dark';\nexport const isLight = color => theme => tone(color)(theme) === 'light';\nexport function randomColor(opts) {\n  const fallback = Color.random().toHexString();\n\n  if (!opts || isEmpty(opts)) {\n    return fallback;\n  }\n\n  if (opts.string && opts.colors) {\n    return randomColorFromList(opts.string, opts.colors);\n  }\n\n  if (opts.string && !opts.colors) {\n    return randomColorFromString(opts.string);\n  }\n\n  if (opts.colors && !opts.string) {\n    return randomFromList(opts.colors);\n  }\n\n  return fallback;\n}\n\nfunction randomFromList(list) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nfunction randomColorFromList(str, list) {\n  let index = 0;\n  if (str.length === 0) return list[0];\n\n  for (let i = 0; i < str.length; i++) {\n    index = str.charCodeAt(i) + ((index << 5) - index);\n    index = index & index;\n  }\n\n  index = (index % list.length + list.length) % list.length;\n  return list[index];\n}\n\nfunction randomColorFromString(str) {\n  let hash = 0;\n  if (str.length === 0) return hash.toString();\n\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n\n  let color = '#';\n\n  for (let j = 0; j < 3; j++) {\n    const value = hash >> j * 8 & 255;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}\n//# sourceMappingURL=colors.js.map"]},"metadata":{},"sourceType":"module"}