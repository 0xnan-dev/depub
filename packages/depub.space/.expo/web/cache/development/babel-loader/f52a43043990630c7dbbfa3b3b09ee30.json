{"ast":null,"code":"import _defineProperty from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"size\", \"colorScheme\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { createContext, memo, forwardRef } from 'react';\nimport { useCheckboxGroupState } from '@react-stately/checkbox';\nimport { useCheckboxGroup } from '@react-native-aria/checkbox';\nimport { useFormControlContext } from \"../../composites/FormControl\";\nimport Box from \"../Box\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nexport var CheckboxGroupContext = createContext(null);\n\nfunction CheckboxGroup(_ref, ref) {\n  _s();\n\n  var size = _ref.size,\n      colorScheme = _ref.colorScheme,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var children = props.children;\n  var state = useCheckboxGroupState(props);\n\n  var _useCheckboxGroup = useCheckboxGroup(_objectSpread({\n    'aria-label': props.accessibilityLabel\n  }, props), state),\n      groupProps = _useCheckboxGroup.groupProps;\n\n  var formControlContext = useFormControlContext();\n\n  if (useHasResponsiveProps(_objectSpread(_objectSpread({}, props), {}, {\n    size: size,\n    colorScheme: colorScheme\n  }))) {\n    return null;\n  }\n\n  return React.createElement(CheckboxGroupContext.Provider, {\n    value: _objectSpread(_objectSpread({\n      size: size,\n      colorScheme: colorScheme\n    }, formControlContext), {}, {\n      state: state\n    })\n  }, React.createElement(Box, _extends({\n    alignItems: \"flex-start\"\n  }, groupProps, props, {\n    ref: ref\n  }), children));\n}\n\n_s(CheckboxGroup, \"LlI3ukfVvjQ7ZX5xDvshKgrW79Q=\", false, function () {\n  return [useCheckboxGroupState, useCheckboxGroup, useFormControlContext, useHasResponsiveProps];\n});\n\n_c = CheckboxGroup;\nexport default _c3 = memo(_c2 = forwardRef(CheckboxGroup));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckboxGroup\");\n$RefreshReg$(_c2, \"%default%$memo\");\n$RefreshReg$(_c3, \"%default%\");\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/components/primitives/Checkbox/CheckboxGroup.js"],"names":["_extends","Object","i","arguments","source","target","CheckboxGroupContext","createContext","CheckboxGroup","size","colorScheme","props","children","state","useCheckboxGroupState","groupProps","useCheckboxGroup","formControlContext","useFormControlContext","useHasResponsiveProps","React","value","alignItems","ref","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,SAAA,QAAA,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAANA,MAAAA,IAAiB,UAAA,MAAA,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,SAAS,CAA7B,MAAA,EAAsCD,CAAtC,EAAA,EAA2C;AAAE,UAAIE,MAAM,GAAGD,SAAS,CAAtB,CAAsB,CAAtB;;AAA2B,WAAK,IAAL,GAAA,IAAA,MAAA,EAAwB;AAAE,YAAIF,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAJ,GAAIA,CAAJ,EAAuD;AAAEI,UAAAA,MAAM,CAANA,GAAM,CAANA,GAAcD,MAAM,CAApBC,GAAoB,CAApBA;AAA8B;AAAE;AAAC;;AAAA,WAAA,MAAA;AAA5OL,GAAAA;;AAA8P,SAAOA,QAAQ,CAARA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AAEpR;;AAAA,OAAA,KAAA,IAAA,aAAA,EAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,SAAA,qBAAA,QAAA,yBAAA;AACA,SAAA,gBAAA,QAAA,6BAAA;AACA,SAAA,qBAAA;AACA,OAAA,GAAA;AACA,SAAA,qBAAA;AACA,OAAO,IAAMM,oBAAoB,GAAgBC,aAAa,CAAvD,IAAuD,CAAvD;;AAEP,SAAA,aAAA,CAAA,IAAA,EAAA,GAAA,EAIQ;AAAA,EAAA,EAAA;;AAHNE,MAAAA,IAGM,GAAA,IAAA,CAHNA,IAAAA;AAAAA,MACAC,WAEM,GAAA,IAAA,CAFNA,WADAD;AAAAA,MAEGE,KACG,GAAA,wBAAA,CAAA,IAAA,EAAA,SAAA,CAHNF;;AAIA,MACEG,QADF,GAEID,KAFJ,CAAA,QAAA;AAGA,MAAME,KAAK,GAAGC,qBAAqB,CAAnC,KAAmC,CAAnC;;AACA,MAAA,iBAAA,GAEIE,gBAAgB,CAAA,aAAA,CAAA;AAClB,kBAAcL,KAAK,CADD;AAAA,GAAA,EAAA,KAAA,CAAA,EAFpB,KAEoB,CAFpB;AAAA,MACEI,UADF,GAAA,iBAAA,CAAA,UAAA;;AAMA,MAAME,kBAAkB,GAAGC,qBAA3B,EAAA;;AAEA,MAAIC,qBAAqB,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA;AACvBV,IAAAA,IAAI,EADmB,IAAA;AAEvBC,IAAAA,WAAW,EAFb;AAAyB,GAAA,CAAA,CAAzB,EAGI;AACF,WAAA,IAAA;AAGF;;AAAA,SAAoBU,KAAK,CAALA,aAAAA,CAAoBd,oBAAoB,CAAxCc,QAAAA,EAAmD;AACrEC,IAAAA,KAAK,EAAA,aAAA,CAAA,aAAA,CAAA;AACHZ,MAAAA,IAAI,EADD,IAAA;AAEHC,MAAAA,WAAW,EAFR;AAAA,KAAA,EAAA,kBAAA,CAAA,EAAA,EAAA,EAAA;AAIHG,MAAAA,KAAK,EALWO;AACb,KAAA;AADgE,GAAnDA,EAOJA,KAAK,CAALA,aAAAA,CAAAA,GAAAA,EAAyBpB,QAAQ,CAAC;AAChDsB,IAAAA,UAAU,EADqC;AAAC,GAAD,EAAA,UAAA,EAAA,KAAA,EAE3B;AACpBC,IAAAA,GAAG,EAHWH;AAEM,GAF2B,CAAjCA,EAPhB,QAOgBA,CAPIA,CAApB;;;GAxBOZ,a;UAQOM,qB,EAGVE,gB,EAIuBE,qB,EAEvBC,qB;;;KAjBGX,a;AAsCT,eAAA,GAAA,GAA4BgB,IAAI,CAAA,GAAA,GAAeC,UAAU,CAAzD,aAAyD,CAAzB,CAAhC","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { createContext, memo, forwardRef } from 'react';\nimport { useCheckboxGroupState } from '@react-stately/checkbox';\nimport { useCheckboxGroup } from '@react-native-aria/checkbox';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport Box from '../Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nexport const CheckboxGroupContext = /*#__PURE__*/createContext(null);\n\nfunction CheckboxGroup({\n  size,\n  colorScheme,\n  ...props\n}, ref) {\n  const {\n    children\n  } = props;\n  const state = useCheckboxGroupState(props);\n  const {\n    groupProps\n  } = useCheckboxGroup({\n    'aria-label': props.accessibilityLabel,\n    ...props\n  }, state);\n  const formControlContext = useFormControlContext(); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps({ ...props,\n    size,\n    colorScheme\n  })) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(CheckboxGroupContext.Provider, {\n    value: {\n      size,\n      colorScheme,\n      ...formControlContext,\n      state\n    }\n  }, /*#__PURE__*/React.createElement(Box, _extends({\n    alignItems: \"flex-start\"\n  }, groupProps, props, {\n    ref: ref\n  }), children));\n}\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(CheckboxGroup));\n//# sourceMappingURL=CheckboxGroup.js.map"]},"metadata":{},"sourceType":"module"}