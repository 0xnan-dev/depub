{"ast":null,"code":"import { mode } from \"../tools\";\nexport var Skeleton = {\n  baseStyle: function baseStyle(props) {\n    return {\n      startColor: mode('muted.200', 'muted.600')(props),\n      endColor: 'transparent',\n      fadeDuration: 0.1,\n      speed: 1.0,\n      h: '10',\n      w: '100%'\n    };\n  }\n};\nexport var SkeletonText = {\n  baseStyle: function baseStyle(props) {\n    return {\n      startColor: mode('muted.200', 'muted.600')(props),\n      endColor: 'transparent',\n      fadeDuration: 0.1,\n      w: '100%',\n      speed: 1.0,\n      _line: {\n        h: 3,\n        rounded: 'full'\n      }\n    };\n  },\n  defaultProps: {\n    lines: 3,\n    space: 3\n  }\n};\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/theme/components/skeleton.js"],"names":["Skeleton","baseStyle","startColor","mode","endColor","fadeDuration","speed","h","w","SkeletonText","_line","rounded","defaultProps","lines","space"],"mappings":"AAAA,SAAA,IAAA;AAEA,OAAO,IAAMA,QAAQ,GAAG;AACtBC,EAAAA,SAAS,EAAE,SAAA,SAAA,CAAA,KAAA,EAAS;AAClB,WAAO;AACLC,MAAAA,UAAU,EAAEC,IAAI,CAAA,WAAA,EAAJA,WAAI,CAAJA,CADP,KACOA,CADP;AAELC,MAAAA,QAAQ,EAFH,aAAA;AAGLC,MAAAA,YAAY,EAHP,GAAA;AAILC,MAAAA,KAAK,EAJA,GAAA;AAKLC,MAAAA,CAAC,EALI,IAAA;AAMLC,MAAAA,CAAC,EANH;AAAO,KAAP;AAFG;AAAiB,CAAjB;AAaP,OAAO,IAAMC,YAAY,GAAG;AAC1BR,EAAAA,SAAS,EAAE,SAAA,SAAA,CAAA,KAAA,EAAS;AAClB,WAAO;AACLC,MAAAA,UAAU,EAAEC,IAAI,CAAA,WAAA,EAAJA,WAAI,CAAJA,CADP,KACOA,CADP;AAELC,MAAAA,QAAQ,EAFH,aAAA;AAGLC,MAAAA,YAAY,EAHP,GAAA;AAILG,MAAAA,CAAC,EAJI,MAAA;AAKLF,MAAAA,KAAK,EALA,GAAA;AAMLI,MAAAA,KAAK,EAAE;AACLH,QAAAA,CAAC,EADI,CAAA;AAELI,QAAAA,OAAO,EARX;AAMS;AANF,KAAP;AAFwB,GAAA;AAc1BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EADO,CAAA;AAEZC,IAAAA,KAAK,EAhBF;AAcS;AAdY,CAArB","sourcesContent":["import { mode } from '../tools'; // Skeleton\n\nexport const Skeleton = {\n  baseStyle: props => {\n    return {\n      startColor: mode('muted.200', 'muted.600')(props),\n      endColor: 'transparent',\n      fadeDuration: 0.1,\n      speed: 1.0,\n      h: '10',\n      w: '100%'\n    };\n  }\n}; // SkeletonText\n\nexport const SkeletonText = {\n  baseStyle: props => {\n    return {\n      startColor: mode('muted.200', 'muted.600')(props),\n      endColor: 'transparent',\n      fadeDuration: 0.1,\n      w: '100%',\n      speed: 1.0,\n      _line: {\n        h: 3,\n        rounded: 'full'\n      }\n    };\n  },\n  defaultProps: {\n    lines: 3,\n    space: 3\n  }\n};\n//# sourceMappingURL=skeleton.js.map"]},"metadata":{},"sourceType":"module"}