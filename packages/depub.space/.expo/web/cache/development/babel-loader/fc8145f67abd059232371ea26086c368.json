{"ast":null,"code":"import _slicedToArray from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React from 'react';\nexport function useDisclose(initState) {\n  _s();\n\n  var _React$useState = React.useState(initState || false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isOpen = _React$useState2[0],\n      setIsOpen = _React$useState2[1];\n\n  var onOpen = function onOpen() {\n    setIsOpen(true);\n  };\n\n  var onClose = function onClose() {\n    setIsOpen(false);\n  };\n\n  var onToggle = function onToggle() {\n    setIsOpen(!isOpen);\n  };\n\n  return {\n    isOpen: isOpen,\n    onOpen: onOpen,\n    onClose: onClose,\n    onToggle: onToggle\n  };\n}\n\n_s(useDisclose, \"/AtVE7v2sugqHhZEtDHo7whN2B4=\");\n\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/hooks/useDisclose.js"],"names":["useDisclose","isOpen","setIsOpen","React","initState","onOpen","onClose","onToggle"],"mappings":";;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAO,SAAA,WAAA,CAAA,SAAA,EAAgC;AAAA,EAAA,EAAA;;AACrC,MAAA,eAAA,GAA4BG,KAAK,CAALA,QAAAA,CAAeC,SAAS,IAApD,KAA4BD,CAA5B;AAAA,MAAA,gBAAA,GAAA,cAAA,CAAA,eAAA,EAAA,CAAA,CAAA;AAAA,MAAOF,MAAP,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,MAAeC,SAAf,GAAA,gBAAA,CAAA,CAAA,CAAA;;AAEA,MAAMG,MAAM,GAANA,SAAAA,MAAAA,GAAe;AACnBH,IAAAA,SAAS,CAATA,IAAS,CAATA;AADF,GAAA;;AAIA,MAAMI,OAAO,GAAPA,SAAAA,OAAAA,GAAgB;AACpBJ,IAAAA,SAAS,CAATA,KAAS,CAATA;AADF,GAAA;;AAIA,MAAMK,QAAQ,GAARA,SAAAA,QAAAA,GAAiB;AACrBL,IAAAA,SAAS,CAAC,CAAVA,MAAS,CAATA;AADF,GAAA;;AAIA,SAAO;AACLD,IAAAA,MAAM,EADD,MAAA;AAELI,IAAAA,MAAM,EAFD,MAAA;AAGLC,IAAAA,OAAO,EAHF,OAAA;AAILC,IAAAA,QAAQ,EAJV;AAAO,GAAP;;;GAfcP,W","sourcesContent":["import React from 'react';\nexport function useDisclose(initState) {\n  const [isOpen, setIsOpen] = React.useState(initState || false);\n\n  const onOpen = () => {\n    setIsOpen(true);\n  };\n\n  const onClose = () => {\n    setIsOpen(false);\n  };\n\n  const onToggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle\n  };\n}\n//# sourceMappingURL=useDisclose.js.map"]},"metadata":{},"sourceType":"module"}