{"ast":null,"code":"export function useHasResponsiveProps(props) {\n  if (props) {}\n\n  return false;\n}\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/hooks/useHasResponsiveProps.js"],"names":[],"mappings":"AAGA,OAAO,SAAA,qBAAA,CAAA,KAAA,EAAsC;AAC3C,MAAA,KAAA,EAAW,CAGX;;AAAA,SAAA,KAAA;AAQD","sourcesContent":["// import { useWindowDimensions } from 'react-native';\n// import { isResponsiveAnyProp } from '../theme/tools';\n//  @ts-ignore eslint-disable-next-line\nexport function useHasResponsiveProps(props) {\n  if (props) {//\n  }\n\n  return false; //   const windowDimensions = useWindowDimensions();\n  //   if (!windowDimensions.width || !windowDimensions.height) {\n  //     const responsivePropsExists = isResponsiveAnyProp(props);\n  //     if (responsivePropsExists) {\n  //       return true;\n  //     }\n  //   }\n  //   return false;\n}\n//# sourceMappingURL=useHasResponsiveProps.js.map"]},"metadata":{},"sourceType":"module"}