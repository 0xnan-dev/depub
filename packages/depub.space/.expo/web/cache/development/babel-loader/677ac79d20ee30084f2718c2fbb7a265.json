{"ast":null,"code":"import _defineProperty from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/media/disk1/projects/depub.space/node_modules/next/dist/compiled/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _s = $RefreshSig$();\n\nvar _excluded = [\"children\"],\n    _excluded2 = [\"isTruncated\", \"noOfLines\", \"bold\", \"italic\", \"sub\", \"highlight\", \"underline\", \"strikeThrough\", \"fontFamily\", \"fontWeight\", \"fontStyle\", \"_hover\", \"fontSize\", \"numberOfLines\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef, useRef } from 'react';\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from \"../../../utils/mergeRefs\";\nimport { makeStyledComponent } from \"../../../utils/styled\";\nimport { useResolvedFontFamily } from \"../../../hooks/useResolvedFontFamily\";\nimport NativeText from \"react-native-web/dist/exports/Text\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar StyledText = makeStyledComponent(NativeText);\n_c = StyledText;\nvar TextAncestorContext = React.createContext(false);\n\nvar Text = function Text(_ref2, ref) {\n  _s();\n\n  var children = _ref2.children,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  var hasTextAncestor = React.useContext(TextAncestorContext);\n\n  var _usePropsResolution = usePropsResolution('Text', props, {}, {\n    resolveResponsively: ['noOfLines', 'numberOfLines'],\n    componentTheme: hasTextAncestor ? {} : undefined\n  }),\n      isTruncated = _usePropsResolution.isTruncated,\n      noOfLines = _usePropsResolution.noOfLines,\n      bold = _usePropsResolution.bold,\n      italic = _usePropsResolution.italic,\n      sub = _usePropsResolution.sub,\n      highlight = _usePropsResolution.highlight,\n      underline = _usePropsResolution.underline,\n      strikeThrough = _usePropsResolution.strikeThrough,\n      propFontFamily = _usePropsResolution.fontFamily,\n      propFontWeight = _usePropsResolution.fontWeight,\n      propFontStyle = _usePropsResolution.fontStyle,\n      _hover = _usePropsResolution._hover,\n      fontSize = _usePropsResolution.fontSize,\n      numberOfLines = _usePropsResolution.numberOfLines,\n      reslovedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  var _ref = useRef(null);\n\n  var _useHover = useHover({}, _hover ? _ref : null),\n      isHovered = _useHover.isHovered;\n\n  var fontFamily = propFontFamily;\n  var fontStyle = italic ? 'italic' : propFontStyle;\n  var fontWeight = bold ? 'bold' : propFontWeight;\n  var resolvedFontFamily = useResolvedFontFamily({\n    fontFamily: fontFamily,\n    fontWeight: fontWeight !== null && fontWeight !== void 0 ? fontWeight : hasTextAncestor ? undefined : 400,\n    fontStyle: fontStyle !== null && fontStyle !== void 0 ? fontStyle : hasTextAncestor ? undefined : 'normal'\n  });\n\n  if (resolvedFontFamily) {\n    fontFamily = resolvedFontFamily;\n  }\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  var propsToSpread = _objectSpread(_objectSpread(_objectSpread({}, reslovedProps), {}, {\n    numberOfLines: numberOfLines || noOfLines ? numberOfLines || noOfLines : isTruncated ? 1 : undefined\n  }, resolvedFontFamily), {}, {\n    bg: highlight ? 'warning.300' : reslovedProps.bg,\n    textDecorationLine: underline && strikeThrough ? 'underline line-through' : underline ? 'underline' : strikeThrough ? 'line-through' : reslovedProps.textDecorationLine,\n    fontSize: sub ? 10 : fontSize,\n    ref: mergeRefs([ref, _ref])\n  }, isHovered && _hover);\n\n  return hasTextAncestor ? React.createElement(StyledText, propsToSpread, children) : React.createElement(TextAncestorContext.Provider, {\n    value: true\n  }, React.createElement(StyledText, propsToSpread, children));\n};\n\n_s(Text, \"wV+7n4cjxoZtM7A3wa7pvEVY87I=\", false, function () {\n  return [usePropsResolution, useHover, useResolvedFontFamily, useHasResponsiveProps];\n});\n\n_c2 = Text;\nexport default _c4 = memo(_c3 = forwardRef(Text));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledText\");\n$RefreshReg$(_c2, \"Text\");\n$RefreshReg$(_c3, \"%default%$memo\");\n$RefreshReg$(_c4, \"%default%\");\n;\n\nvar _a, _b;\n\nif (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    });\n    module.hot.accept();\n\n    if (prevExports !== null) {\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/module/components/primitives/Text/index.js"],"names":["StyledText","makeStyledComponent","TextAncestorContext","React","Text","children","props","hasTextAncestor","isTruncated","noOfLines","bold","italic","sub","highlight","underline","strikeThrough","propFontFamily","propFontWeight","propFontStyle","_hover","fontSize","numberOfLines","reslovedProps","usePropsResolution","resolveResponsively","componentTheme","_ref","useRef","isHovered","useHover","fontFamily","fontStyle","fontWeight","resolvedFontFamily","useResolvedFontFamily","useHasResponsiveProps","propsToSpread","bg","textDecorationLine","ref","mergeRefs","value","memo","forwardRef"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef, useRef } from 'react';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils/mergeRefs';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\nimport { Text as NativeText } from 'react-native';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nconst StyledText = makeStyledComponent(NativeText); // To have a RN compatible behaviour, we'll inherit parent text styles as base style\n\nconst TextAncestorContext = /*#__PURE__*/React.createContext(false);\n\nconst Text = ({\n  children,\n  ...props\n}, ref) => {\n  const hasTextAncestor = React.useContext(TextAncestorContext);\n  const {\n    isTruncated,\n    noOfLines,\n    bold,\n    italic,\n    sub,\n    highlight,\n    underline,\n    strikeThrough,\n    fontFamily: propFontFamily,\n    fontWeight: propFontWeight,\n    fontStyle: propFontStyle,\n    _hover,\n    fontSize,\n    numberOfLines,\n    ...reslovedProps\n  } = usePropsResolution('Text', props, {}, {\n    resolveResponsively: ['noOfLines', 'numberOfLines'],\n    // We override the component base theme if text has an ancestor.\n    componentTheme: hasTextAncestor ? {} : undefined\n  });\n\n  const _ref = useRef(null); // TODO: might have to add this condition\n\n\n  const {\n    isHovered\n  } = useHover({}, _hover ? _ref : null); // const { isHovered } = useHover({}, _ref);\n\n  let fontFamily = propFontFamily;\n  const fontStyle = italic ? 'italic' : propFontStyle;\n  const fontWeight = bold ? 'bold' : propFontWeight;\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight: fontWeight !== null && fontWeight !== void 0 ? fontWeight : hasTextAncestor ? undefined : 400,\n    fontStyle: fontStyle !== null && fontStyle !== void 0 ? fontStyle : hasTextAncestor ? undefined : 'normal'\n  });\n\n  if (resolvedFontFamily) {\n    fontFamily = resolvedFontFamily;\n  } //TODO: refactor for responsive prop\n\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  const propsToSpread = { ...reslovedProps,\n    numberOfLines: numberOfLines || noOfLines ? numberOfLines || noOfLines : isTruncated ? 1 : undefined,\n    ...resolvedFontFamily,\n    bg: highlight ? 'warning.300' : reslovedProps.bg,\n    textDecorationLine: underline && strikeThrough ? 'underline line-through' : underline ? 'underline' : strikeThrough ? 'line-through' : reslovedProps.textDecorationLine,\n    fontSize: sub ? 10 : fontSize,\n    ref: mergeRefs([ref, _ref]),\n    ...(isHovered && _hover)\n  };\n  return hasTextAncestor ? /*#__PURE__*/React.createElement(StyledText, propsToSpread, children) : /*#__PURE__*/React.createElement(TextAncestorContext.Provider, {\n    value: true\n  }, /*#__PURE__*/React.createElement(StyledText, propsToSpread, children));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Text));\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}