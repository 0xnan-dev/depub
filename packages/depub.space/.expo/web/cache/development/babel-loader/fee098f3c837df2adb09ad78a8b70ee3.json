{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mode = mode;\nexports.randomColor = randomColor;\nexports.isLight = exports.isDark = exports.tone = exports.getColor = exports.transparentize = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nvar _lodash2 = _interopRequireDefault(require(\"lodash.isempty\"));\n\nvar _tinycolor = _interopRequireDefault(require(\"tinycolor2\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction mode(light, dark) {\n  return function (props) {\n    return props.colorMode === 'dark' ? dark : light;\n  };\n}\n\nvar transparentize = function transparentize(color, opacity) {\n  return function (theme) {\n    var raw = getColor(theme, color);\n    return (0, _tinycolor[\"default\"])(raw).setAlpha(opacity).toRgbString();\n  };\n};\n\nexports.transparentize = transparentize;\n\nvar getColor = function getColor(theme, color, fallback) {\n  var hex = (0, _lodash[\"default\"])(theme, \"colors.\".concat(color), color);\n  var isValid = (0, _tinycolor[\"default\"])(hex).isValid();\n  return isValid ? hex : fallback;\n};\n\nexports.getColor = getColor;\n\nvar tone = function tone(color) {\n  return function (theme) {\n    var hex = getColor(theme, color);\n    var isDark = (0, _tinycolor[\"default\"])(hex).isDark();\n    return isDark ? 'dark' : 'light';\n  };\n};\n\nexports.tone = tone;\n\nvar isDark = function isDark(color) {\n  return function (theme) {\n    return tone(color)(theme) === 'dark';\n  };\n};\n\nexports.isDark = isDark;\n\nvar isLight = function isLight(color) {\n  return function (theme) {\n    return tone(color)(theme) === 'light';\n  };\n};\n\nexports.isLight = isLight;\n\nfunction randomColor(opts) {\n  var fallback = _tinycolor[\"default\"].random().toHexString();\n\n  if (!opts || (0, _lodash2[\"default\"])(opts)) {\n    return fallback;\n  }\n\n  if (opts.string && opts.colors) {\n    return randomColorFromList(opts.string, opts.colors);\n  }\n\n  if (opts.string && !opts.colors) {\n    return randomColorFromString(opts.string);\n  }\n\n  if (opts.colors && !opts.string) {\n    return randomFromList(opts.colors);\n  }\n\n  return fallback;\n}\n\nfunction randomFromList(list) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nfunction randomColorFromList(str, list) {\n  var index = 0;\n  if (str.length === 0) return list[0];\n\n  for (var i = 0; i < str.length; i++) {\n    index = str.charCodeAt(i) + ((index << 5) - index);\n    index = index & index;\n  }\n\n  index = (index % list.length + list.length) % list.length;\n  return list[index];\n}\n\nfunction randomColorFromString(str) {\n  var hash = 0;\n  if (str.length === 0) return hash.toString();\n\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n\n  var color = '#';\n\n  for (var j = 0; j < 3; j++) {\n    var value = hash >> j * 8 & 255;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}","map":{"version":3,"sources":["/media/disk1/projects/depub.space/node_modules/native-base/lib/commonjs/theme/tools/colors.js"],"names":["Object","value","exports","_lodash","_interopRequireDefault","require","_lodash2","_tinycolor","obj","default","props","transparentize","raw","getColor","hex","isValid","tone","isDark","isLight","fallback","opts","randomColorFromList","randomColorFromString","randomFromList","list","Math","index","str","i","hash","color","j"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mode = mode;\nexports.randomColor = randomColor;\nexports.isLight = exports.isDark = exports.tone = exports.getColor = exports.transparentize = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nvar _lodash2 = _interopRequireDefault(require(\"lodash.isempty\"));\n\nvar _tinycolor = _interopRequireDefault(require(\"tinycolor2\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction mode(light, dark) {\n  return props => props.colorMode === 'dark' ? dark : light;\n}\n\nconst transparentize = (color, opacity) => theme => {\n  const raw = getColor(theme, color);\n  return (0, _tinycolor.default)(raw).setAlpha(opacity).toRgbString();\n};\n\nexports.transparentize = transparentize;\n\nconst getColor = (theme, color, fallback) => {\n  const hex = (0, _lodash.default)(theme, \"colors.\".concat(color), color);\n  const isValid = (0, _tinycolor.default)(hex).isValid();\n  return isValid ? hex : fallback;\n};\n\nexports.getColor = getColor;\n\nconst tone = color => theme => {\n  const hex = getColor(theme, color);\n  const isDark = (0, _tinycolor.default)(hex).isDark();\n  return isDark ? 'dark' : 'light';\n};\n\nexports.tone = tone;\n\nconst isDark = color => theme => tone(color)(theme) === 'dark';\n\nexports.isDark = isDark;\n\nconst isLight = color => theme => tone(color)(theme) === 'light';\n\nexports.isLight = isLight;\n\nfunction randomColor(opts) {\n  const fallback = _tinycolor.default.random().toHexString();\n\n  if (!opts || (0, _lodash2.default)(opts)) {\n    return fallback;\n  }\n\n  if (opts.string && opts.colors) {\n    return randomColorFromList(opts.string, opts.colors);\n  }\n\n  if (opts.string && !opts.colors) {\n    return randomColorFromString(opts.string);\n  }\n\n  if (opts.colors && !opts.string) {\n    return randomFromList(opts.colors);\n  }\n\n  return fallback;\n}\n\nfunction randomFromList(list) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nfunction randomColorFromList(str, list) {\n  let index = 0;\n  if (str.length === 0) return list[0];\n\n  for (let i = 0; i < str.length; i++) {\n    index = str.charCodeAt(i) + ((index << 5) - index);\n    index = index & index;\n  }\n\n  index = (index % list.length + list.length) % list.length;\n  return list[index];\n}\n\nfunction randomColorFromString(str) {\n  let hash = 0;\n  if (str.length === 0) return hash.toString();\n\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n\n  let color = '#';\n\n  for (let j = 0; j < 3; j++) {\n    const value = hash >> j * 8 & 255;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}\n//# sourceMappingURL=colors.js.map"]},"metadata":{},"sourceType":"script"}